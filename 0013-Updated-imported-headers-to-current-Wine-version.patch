From 53df7b6db5f4dbd2fbfd6d7825cbca5e68b38a51 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Tue, 19 Aug 2014 12:46:21 +0200
Subject: [PATCH 13/25] Updated imported headers to current Wine version.

---
 mingw-w64-headers/direct-x/include/d3d10_1.h    |  40 +++++
 mingw-w64-headers/direct-x/include/d3d10_1.idl  |  23 +++
 mingw-w64-headers/direct-x/include/d3d11.h      | 206 ++++++++++++++++++++++++
 mingw-w64-headers/direct-x/include/d3d11.idl    | 121 ++++++++++++++
 mingw-w64-headers/direct-x/include/d3dx9shape.h |   2 +
 mingw-w64-headers/include/objidl.h              |   4 +-
 6 files changed, 394 insertions(+), 2 deletions(-)

diff --git a/mingw-w64-headers/direct-x/include/d3d10_1.h b/mingw-w64-headers/direct-x/include/d3d10_1.h
index 680fa62..aaeb30e 100644
--- a/mingw-w64-headers/direct-x/include/d3d10_1.h
+++ b/mingw-w64-headers/direct-x/include/d3d10_1.h
@@ -42,6 +42,46 @@ typedef interface ID3D10Device1 ID3D10Device1;
 extern "C" {
 #endif
 
+#define D3D10_1_DEFAULT_SAMPLE_MASK (0xffffffff)
+
+#define D3D10_1_GS_INPUT_REGISTER_COUNT (32)
+
+#define D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT (32)
+
+#define D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS (128)
+
+#define D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT (32)
+
+#define D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENTS (1)
+
+#define D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D10_1_PS_OUTPUT_MASK_REGISTER_COUNT (1)
+
+#define D3D10_1_SHADER_MAJOR_VERSION (4)
+
+#define D3D10_1_SHADER_MINOR_VERSION (1)
+
+#define D3D10_1_SO_BUFFER_MAX_STRIDE_IN_BYTES (2048)
+
+#define D3D10_1_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES (256)
+
+#define D3D10_1_SO_BUFFER_SLOT_COUNT (4)
+
+#define D3D10_1_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER (1)
+
+#define D3D10_1_SO_SINGLE_BUFFER_COMPONENT_LIMIT (64)
+
+#define D3D10_1_STANDARD_VERTEX_ELEMENT_COUNT (32)
+
+#define D3D10_1_SUBPIXEL_FRACTIONAL_BIT_COUNT (8)
+
+#define D3D10_1_VS_INPUT_REGISTER_COUNT (32)
+
+#define D3D10_1_VS_OUTPUT_REGISTER_COUNT (32)
+
+#define D3D10_1_FLOAT16_FUSED_TOLERANCE_IN_ULP      (0.6)
+#define D3D10_1_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP (0.6f)
 #include <d3d10_1shader.h>
 #define D3D10_1_SHADER_MAJOR_VERSION (4)
 
diff --git a/mingw-w64-headers/direct-x/include/d3d10_1.idl b/mingw-w64-headers/direct-x/include/d3d10_1.idl
index bfae754..d0e02d4 100644
--- a/mingw-w64-headers/direct-x/include/d3d10_1.idl
+++ b/mingw-w64-headers/direct-x/include/d3d10_1.idl
@@ -19,6 +19,29 @@
 import "oaidl.idl";
 import "ocidl.idl";
 
+const UINT D3D10_1_DEFAULT_SAMPLE_MASK                     = 0xffffffff;
+const UINT D3D10_1_GS_INPUT_REGISTER_COUNT                 = 32;
+const UINT D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT     = 32;
+const UINT D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = 128;
+const UINT D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT = 32;
+const UINT D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENTS      = 1;
+const UINT D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D10_1_PS_OUTPUT_MASK_REGISTER_COUNT           = 1;
+const UINT D3D10_1_SHADER_MAJOR_VERSION                    = 4;
+const UINT D3D10_1_SHADER_MINOR_VERSION                    = 1;
+const UINT D3D10_1_SO_BUFFER_MAX_STRIDE_IN_BYTES           = 2048;
+const UINT D3D10_1_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES     = 256;
+const UINT D3D10_1_SO_BUFFER_SLOT_COUNT                    = 4;
+const UINT D3D10_1_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER  = 1;
+const UINT D3D10_1_SO_SINGLE_BUFFER_COMPONENT_LIMIT        = 64;
+const UINT D3D10_1_STANDARD_VERTEX_ELEMENT_COUNT           = 32;
+const UINT D3D10_1_SUBPIXEL_FRACTIONAL_BIT_COUNT           = 8;
+const UINT D3D10_1_VS_INPUT_REGISTER_COUNT                 = 32;
+const UINT D3D10_1_VS_OUTPUT_REGISTER_COUNT                = 32;
+
+cpp_quote("#define D3D10_1_FLOAT16_FUSED_TOLERANCE_IN_ULP      (0.6)")
+cpp_quote("#define D3D10_1_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP (0.6f)")
+
 import "d3d10.idl";
 cpp_quote("#include <d3d10_1shader.h>")
 
diff --git a/mingw-w64-headers/direct-x/include/d3d11.h b/mingw-w64-headers/direct-x/include/d3d11.h
index 49501b0..e08c5e0 100644
--- a/mingw-w64-headers/direct-x/include/d3d11.h
+++ b/mingw-w64-headers/direct-x/include/d3d11.h
@@ -187,6 +187,76 @@ typedef D3D_PRIMITIVE D3D11_PRIMITIVE;
 typedef D3D_PRIMITIVE_TOPOLOGY D3D11_PRIMITIVE_TOPOLOGY;
 typedef D3D_SRV_DIMENSION D3D11_SRV_DIMENSION;
 typedef RECT D3D11_RECT;
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT (14)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS (4)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT (15)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT (16)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS (4)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT (15)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST (1)
+
+#define D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS (1)
+
+#define D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT (64)
+
+#define D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS (4)
+
+#define D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT (1)
+
+#define D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST (1)
+
+#define D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS (1)
+
+#define D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS (1)
+
+#define D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT (128)
+
+#define D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST (1)
+
+#define D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS (1)
+
+#define D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT (128)
+
+#define D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS (1)
+
+#define D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT (16)
+
+#define D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST (1)
+
+#define D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS (1)
+
+#define D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT (16)
+
+#define D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT (32)
+
+#define D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS (4)
+
+#define D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_COMMONSHADER_TEMP_REGISTER_COUNT (4096)
+
+#define D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST (3)
+
+#define D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS (3)
+
+#define D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX (10)
+
+#define D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN (-10)
+
+#define D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE (-8)
+
+#define D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE (7)
+
 #define D3D11_DEFAULT_DEPTH_BIAS (0)
 
 #define D3D11_DEFAULT_DEPTH_BIAS_CLAMP 0.0f
@@ -251,6 +321,135 @@ typedef RECT D3D11_RECT;
 
 #define D3D11_VS_OUTPUT_REGISTER_COUNT (32)
 
+#define D3D11_PS_CS_UAV_REGISTER_COMPONENTS (1)
+
+#define D3D11_PS_CS_UAV_REGISTER_COUNT (8)
+
+#define D3D11_PS_CS_UAV_REGISTER_READS_PER_INST (1)
+
+#define D3D11_PS_CS_UAV_REGISTER_READ_PORTS (1)
+
+#define D3D11_PS_FRONTFACING_DEFAULT_VALUE (0xffffffff)
+
+#define D3D11_PS_FRONTFACING_FALSE_VALUE (0)
+
+#define D3D11_PS_FRONTFACING_TRUE_VALUE (0xffffffff)
+
+#define D3D11_PS_INPUT_REGISTER_COMPONENTS (4)
+
+#define D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_PS_INPUT_REGISTER_COUNT (32)
+
+#define D3D11_PS_INPUT_REGISTER_READS_PER_INST (2)
+
+#define D3D11_PS_INPUT_REGISTER_READ_PORTS (1)
+
+#define D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT (0.0f)
+#define D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS (1)
+
+#define D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT (1)
+
+#define D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS (1)
+
+#define D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_PS_OUTPUT_MASK_REGISTER_COUNT (1)
+
+#define D3D11_PS_OUTPUT_REGISTER_COMPONENTS (4)
+
+#define D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT (32)
+
+#define D3D11_PS_OUTPUT_REGISTER_COUNT (8)
+
+#define D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT (0.5f)
+#define D3D11_RAW_UAV_SRV_BYTE_ALIGNMENT (16)
+
+#define D3D11_REQ_BLEND_OBJECT_COUNT_PER_DEVICE (4096)
+
+#define D3D11_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP (27)
+
+#define D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT (4096)
+
+#define D3D11_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE (4096)
+
+#define D3D11_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP (32)
+
+#define D3D11_REQ_DRAW_VERTEX_COUNT_2_TO_EXP (32)
+
+#define D3D11_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION (16384)
+
+#define D3D11_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT (1024)
+
+#define D3D11_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT (4096)
+
+#define D3D11_REQ_MAXANISOTROPY (16)
+
+#define D3D11_REQ_MIP_LEVELS (15)
+
+#define D3D11_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES (2048)
+
+#define D3D11_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE (4096)
+
+#define D3D11_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH (16384)
+
+#define D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM (128)
+
+#define D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM (0.25f)
+#define D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM (2048)
+
+#define D3D11_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP (20)
+
+#define D3D11_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE (4096)
+
+#define D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION (2048)
+
+#define D3D11_REQ_TEXTURE1D_U_DIMENSION (16384)
+
+#define D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION (2048)
+
+#define D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (16384)
+
+#define D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION (2048)
+
+#define D3D11_REQ_TEXTURECUBE_DIMENSION (16384)
+
+#define D3D11_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL (0)
+
+#define D3D11_SHADER_MAJOR_VERSION (5)
+
+#define D3D11_SHADER_MAX_INSTANCES (65535)
+
+#define D3D11_SHADER_MAX_INTERFACES (253)
+
+#define D3D11_SHADER_MAX_INTERFACE_CALL_SITES (4096)
+
+#define D3D11_SHADER_MAX_TYPES (65535)
+
+#define D3D11_SHADER_MINOR_VERSION (0)
+
+#define D3D11_SHIFT_INSTRUCTION_PAD_VALUE (0)
+
+#define D3D11_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT (5)
+
+#define D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT (8)
+
+#define D3D11_SO_BUFFER_MAX_STRIDE_IN_BYTES (2048)
+
+#define D3D11_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES (512)
+
+#define D3D11_SO_BUFFER_SLOT_COUNT (4)
+
+#define D3D11_SO_DDI_REGISTER_INDEX_DENOTING_GAP (0xffffffff)
+
+#define D3D11_SO_NO_RASTERIZED_STREAM (0xffffffff)
+
+#define D3D11_SO_OUTPUT_COMPONENT_COUNT (128)
+
+#define D3D11_SO_STREAM_COUNT (4)
+
 #if !defined(D3D11_NO_HELPERS) && defined(__cplusplus)
 struct CD3D11_DEFAULT {};
 extern const DECLSPEC_SELECTANY CD3D11_DEFAULT D3D11_DEFAULT;
@@ -471,6 +670,13 @@ typedef enum D3D11_MAP {
     D3D11_MAP_WRITE_DISCARD = 4,
     D3D11_MAP_WRITE_NO_OVERWRITE = 5
 } D3D11_MAP;
+typedef enum D3D11_MAP_FLAG {
+    D3D11_MAP_FLAG_DO_NOT_WAIT = 0x100000
+} D3D11_MAP_FLAG;
+typedef struct D3D11_QUERY_DATA_SO_STATISTICS {
+    UINT64 NumPrimitivesWritten;
+    UINT64 PrimitivesStorageNeeded;
+} D3D11_QUERY_DATA_SO_STATISTICS;
 typedef struct D3D11_MAPPED_SUBRESOURCE {
     void *pData;
     UINT RowPitch;
diff --git a/mingw-w64-headers/direct-x/include/d3d11.idl b/mingw-w64-headers/direct-x/include/d3d11.idl
index 2e1d7ad..d03ffd3 100644
--- a/mingw-w64-headers/direct-x/include/d3d11.idl
+++ b/mingw-w64-headers/direct-x/include/d3d11.idl
@@ -27,6 +27,42 @@ typedef D3D_PRIMITIVE_TOPOLOGY D3D11_PRIMITIVE_TOPOLOGY;
 typedef D3D_SRV_DIMENSION D3D11_SRV_DIMENSION;
 typedef RECT D3D11_RECT;
 
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT      = 14;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS          = 4;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT       = 15;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT = 16;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT      = 15;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1;
+const UINT D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1;
+const UINT D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT           = 64;
+const UINT D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS = 4;
+const UINT D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT = 1;
+const UINT D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 1;
+const UINT D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS = 1;
+const UINT D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS  = 1;
+const UINT D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT       = 128;
+const UINT D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST = 1;
+const UINT D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS  = 1;
+const UINT D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT           = 128;
+const UINT D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS         = 1;
+const UINT D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT              = 16;
+const UINT D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST     = 1;
+const UINT D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS         = 1;
+const UINT D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT                  = 16;
+const UINT D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT            = 32;
+const UINT D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS            = 4;
+const UINT D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT   = 32;
+const UINT D3D11_COMMONSHADER_TEMP_REGISTER_COUNT                 = 4096;
+const UINT D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST        = 3;
+const UINT D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS            = 3;
+const UINT D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX        = 10;
+const INT D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN         = -10;
+const INT D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE            = -8;
+const UINT D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE           = 7;
+
 const UINT D3D11_DEFAULT_DEPTH_BIAS          = 0;
 cpp_quote("#define D3D11_DEFAULT_DEPTH_BIAS_CLAMP 0.0f")
 const UINT D3D11_DEFAULT_MAX_ANISOTROPY      = 16;
@@ -66,6 +102,80 @@ const UINT D3D11_SHADER_MAX_TYPES            = 65535;
 const UINT D3D11_SHADER_MINOR_VERSION        = 0;
 const UINT D3D11_VS_OUTPUT_REGISTER_COUNT    = 32;
 
+const UINT D3D11_PS_CS_UAV_REGISTER_COMPONENTS         = 1;
+const UINT D3D11_PS_CS_UAV_REGISTER_COUNT              = 8;
+const UINT D3D11_PS_CS_UAV_REGISTER_READS_PER_INST     = 1;
+const UINT D3D11_PS_CS_UAV_REGISTER_READ_PORTS         = 1;
+const UINT D3D11_PS_FRONTFACING_DEFAULT_VALUE          = 0xffffffff;
+const UINT D3D11_PS_FRONTFACING_FALSE_VALUE            = 0;
+const UINT D3D11_PS_FRONTFACING_TRUE_VALUE             = 0xffffffff;
+const UINT D3D11_PS_INPUT_REGISTER_COMPONENTS          = 4;
+const UINT D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_PS_INPUT_REGISTER_COUNT               = 32;
+const UINT D3D11_PS_INPUT_REGISTER_READS_PER_INST      = 2;
+const UINT D3D11_PS_INPUT_REGISTER_READ_PORTS          = 1;
+cpp_quote("#define D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT (0.0f)")
+const UINT D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS   = 1;
+const UINT D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT        = 1;
+const UINT D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS    = 1;
+const UINT D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_PS_OUTPUT_MASK_REGISTER_COUNT         = 1;
+const UINT D3D11_PS_OUTPUT_REGISTER_COMPONENTS         = 4;
+const UINT D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 32;
+const UINT D3D11_PS_OUTPUT_REGISTER_COUNT              = 8;
+cpp_quote("#define D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT (0.5f)")
+
+const UINT D3D11_RAW_UAV_SRV_BYTE_ALIGNMENT            = 16;
+
+const UINT D3D11_REQ_BLEND_OBJECT_COUNT_PER_DEVICE     = 4096;
+const UINT D3D11_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP = 27;
+const UINT D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT     = 4096;
+const UINT D3D11_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE = 4096;
+const UINT D3D11_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP  = 32;
+const UINT D3D11_REQ_DRAW_VERTEX_COUNT_2_TO_EXP        = 32;
+const UINT D3D11_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION = 16384;
+const UINT D3D11_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT = 1024;
+const UINT D3D11_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT = 4096;
+const UINT D3D11_REQ_MAXANISOTROPY                     = 16;
+const UINT D3D11_REQ_MIP_LEVELS                        = 15;
+const UINT D3D11_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES = 2048;
+const UINT D3D11_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE = 4096;
+const UINT D3D11_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH     = 16384;
+const UINT D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM = 128;
+cpp_quote("#define D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM (0.25f)")
+const UINT D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM = 2048;
+const UINT D3D11_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP = 20;
+const UINT D3D11_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE   = 4096;
+const UINT D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION    = 2048;
+const UINT D3D11_REQ_TEXTURE1D_U_DIMENSION             = 16384;
+const UINT D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION    = 2048;
+const UINT D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION        = 16384;
+const UINT D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION      = 2048;
+const UINT D3D11_REQ_TEXTURECUBE_DIMENSION             = 16384;
+
+const UINT D3D11_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL = 0;
+
+const UINT D3D11_SHADER_MAJOR_VERSION                  = 5;
+const UINT D3D11_SHADER_MAX_INSTANCES                  = 65535;
+const UINT D3D11_SHADER_MAX_INTERFACES                 = 253;
+const UINT D3D11_SHADER_MAX_INTERFACE_CALL_SITES       = 4096;
+const UINT D3D11_SHADER_MAX_TYPES                      = 65535;
+const UINT D3D11_SHADER_MINOR_VERSION                  = 0;
+
+const UINT D3D11_SHIFT_INSTRUCTION_PAD_VALUE           = 0;
+const UINT D3D11_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = 5;
+
+const UINT D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT      = 8;
+
+const UINT D3D11_SO_BUFFER_MAX_STRIDE_IN_BYTES         = 2048;
+const UINT D3D11_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES   = 512;
+const UINT D3D11_SO_BUFFER_SLOT_COUNT                  = 4;
+const UINT D3D11_SO_DDI_REGISTER_INDEX_DENOTING_GAP    = 0xffffffff;
+const UINT D3D11_SO_NO_RASTERIZED_STREAM               = 0xffffffff;
+const UINT D3D11_SO_OUTPUT_COMPONENT_COUNT             = 128;
+const UINT D3D11_SO_STREAM_COUNT                       = 4;
+
 cpp_quote("#if !defined(D3D11_NO_HELPERS) && defined(__cplusplus)")
 cpp_quote("struct CD3D11_DEFAULT {};")
 cpp_quote("extern const DECLSPEC_SELECTANY CD3D11_DEFAULT D3D11_DEFAULT;")
@@ -343,6 +453,17 @@ typedef enum D3D11_MAP
     D3D11_MAP_WRITE_NO_OVERWRITE
 } D3D11_MAP;
 
+typedef enum D3D11_MAP_FLAG
+{
+    D3D11_MAP_FLAG_DO_NOT_WAIT = 0x00100000
+} D3D11_MAP_FLAG;
+
+typedef struct D3D11_QUERY_DATA_SO_STATISTICS
+{
+    UINT64 NumPrimitivesWritten;
+    UINT64 PrimitivesStorageNeeded;
+} D3D11_QUERY_DATA_SO_STATISTICS;
+
 typedef struct D3D11_MAPPED_SUBRESOURCE
 {
     void *pData;
diff --git a/mingw-w64-headers/direct-x/include/d3dx9shape.h b/mingw-w64-headers/direct-x/include/d3dx9shape.h
index 1fbf608..ec19750 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9shape.h
+++ b/mingw-w64-headers/direct-x/include/d3dx9shape.h
@@ -38,6 +38,8 @@ HRESULT WINAPI D3DXCreateTextA(struct IDirect3DDevice9 *device, HDC hdc, const c
         float extrusion, struct ID3DXMesh **mesh, struct ID3DXBuffer **adjacency, GLYPHMETRICSFLOAT *glyphmetrics);
 HRESULT WINAPI D3DXCreateTextW(struct IDirect3DDevice9 *device, HDC hdc, const WCHAR *text, float deviation,
         FLOAT extrusion, struct ID3DXMesh **mesh, struct ID3DXBuffer **adjacency, GLYPHMETRICSFLOAT *glyphmetrics);
+HRESULT WINAPI D3DXCreateTorus(struct IDirect3DDevice9 *device,
+        float innerradius, float outerradius, UINT sides, UINT rings, struct ID3DXMesh **mesh, ID3DXBuffer **adjacency);
 #define D3DXCreateText __MINGW_NAME_AW(D3DXCreateText)
 
 #ifdef __cplusplus
diff --git a/mingw-w64-headers/include/objidl.h b/mingw-w64-headers/include/objidl.h
index 833bcd7..3d348b4 100644
--- a/mingw-w64-headers/include/objidl.h
+++ b/mingw-w64-headers/include/objidl.h
@@ -11389,7 +11389,7 @@ IUnknown *pUnkForRelease;
 #else
 typedef struct tagSTGMEDIUM {
     DWORD tymed;
-    union {
+    __C89_NAMELESS union {
         HBITMAP hBitmap;
         HMETAFILEPICT hMetaFilePict;
         HENHMETAFILE hEnhMetaFile;
@@ -11410,7 +11410,7 @@ typedef struct _GDI_OBJECT {
     } u;
 } GDI_OBJECT;
 typedef struct _userSTGMEDIUM {
-    struct _STGMEDIUM_UNION {
+    __C89_NAMELESS struct _STGMEDIUM_UNION {
         DWORD tymed;
         union {
             wireHMETAFILEPICT hMetaFilePict;
-- 
2.1.0

