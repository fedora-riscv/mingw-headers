From 9acc0a66ac3568c4d7b5c7a48c16ff34d65b30b5 Mon Sep 17 00:00:00 2001
From: Jacek Caban <cjacek@gmail.com>
Date: Fri, 17 Jan 2014 13:35:06 +0000
Subject: [PATCH 17/25] Updated imported headers to current Wine version.

git-svn-id: svn+ssh://svn.code.sf.net/p/mingw-w64/code/trunk@6443 4407c894-4637-0410-b4f5-ada5f102cad1
---
 mingw-w64-headers/direct-x/include/d3d8.h        |   87 +-
 mingw-w64-headers/direct-x/include/d3d9.h        |  175 +-
 mingw-w64-headers/direct-x/include/d3drmobj.h    |   14 +-
 mingw-w64-headers/direct-x/include/d3dx9anim.h   |    7 +-
 mingw-w64-headers/direct-x/include/d3dx9core.h   |   12 +-
 mingw-w64-headers/direct-x/include/d3dx9effect.h |   88 +-
 mingw-w64-headers/direct-x/include/d3dx9math.inl |  244 +--
 mingw-w64-headers/direct-x/include/d3dx9mesh.h   |   62 +-
 mingw-w64-headers/direct-x/include/dmusici.h     |    1 -
 mingw-w64-headers/direct-x/include/dpaddr.h      |   20 +-
 mingw-w64-headers/direct-x/include/dplay8.h      |  194 +-
 mingw-w64-headers/direct-x/include/dplobby8.h    |   36 +-
 mingw-w64-headers/direct-x/include/dpnathlp.h    |   58 +-
 mingw-w64-headers/direct-x/include/vfwmsgs.h     |   11 +
 mingw-w64-headers/include/axextend.idl           |  195 ++
 mingw-w64-headers/include/corerror.h             |    6 +-
 mingw-w64-headers/include/msctf.h                |  110 ++
 mingw-w64-headers/include/msctf.idl              |   21 +
 mingw-w64-headers/include/strmif.h               | 2171 ++++++++++++++++------
 mingw-w64-headers/include/strmif.idl             |  382 ----
 mingw-w64-headers/include/winhttp.h              |    2 +-
 21 files changed, 2448 insertions(+), 1448 deletions(-)

diff --git a/mingw-w64-headers/direct-x/include/d3d8.h b/mingw-w64-headers/direct-x/include/d3d8.h
index 7d06268..092907c 100644
--- a/mingw-w64-headers/direct-x/include/d3d8.h
+++ b/mingw-w64-headers/direct-x/include/d3d8.h
@@ -203,12 +203,12 @@ DECLARE_INTERFACE_(IDirect3DVolume8,IUnknown)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DVolume8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid,CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID   refguid,void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD(GetContainer)(THIS_ REFIID  riid, void ** ppContainer) PURE;
     STDMETHOD(GetDesc)(THIS_ D3DVOLUME_DESC * pDesc) PURE;
-    STDMETHOD(LockBox)(THIS_ D3DLOCKED_BOX * pLockedVolume,CONST D3DBOX * pBox, DWORD  Flags) PURE;
+    STDMETHOD(LockBox)(THIS_ D3DLOCKED_BOX *locked_box, const D3DBOX *box, DWORD flags) PURE;
     STDMETHOD(UnlockBox)(THIS) PURE;
 };
 #undef INTERFACE
@@ -254,7 +254,8 @@ DECLARE_INTERFACE_(IDirect3DSwapChain8,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DSwapChain8 methods ***/
-    STDMETHOD(Present)(THIS_ CONST RECT * pSourceRect, CONST RECT * pDestRect, HWND  hDestWindowOverride,CONST RGNDATA * pDirtyRegion) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect, HWND dst_window_override,
+            const RGNDATA *dirty_region) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT  BackBuffer, D3DBACKBUFFER_TYPE  Type, struct IDirect3DSurface8 ** ppBackBuffer) PURE;
 };
 #undef INTERFACE
@@ -289,12 +290,12 @@ DECLARE_INTERFACE_(IDirect3DSurface8,IUnknown)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DSurface8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid,CONST void * pData,DWORD  SizeOfData,DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid,void * pData,DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD(GetContainer)(THIS_ REFIID  riid, void ** ppContainer) PURE;
     STDMETHOD(GetDesc)(THIS_ D3DSURFACE_DESC * pDesc) PURE;
-    STDMETHOD(LockRect)(THIS_ D3DLOCKED_RECT * pLockedRect, CONST RECT * pRect,DWORD  Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ D3DLOCKED_RECT *locked_rect, const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS) PURE;
 };
 #undef INTERFACE
@@ -341,7 +342,7 @@ DECLARE_INTERFACE_(IDirect3DResource8,IUnknown)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -393,7 +394,7 @@ DECLARE_INTERFACE_(IDirect3DVertexBuffer8,IDirect3DResource8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -457,7 +458,7 @@ DECLARE_INTERFACE_(IDirect3DIndexBuffer8,IDirect3DResource8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -521,7 +522,7 @@ DECLARE_INTERFACE_(IDirect3DBaseTexture8,IDirect3DResource8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -585,7 +586,7 @@ DECLARE_INTERFACE_(IDirect3DCubeTexture8,IDirect3DBaseTexture8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -599,9 +600,10 @@ DECLARE_INTERFACE_(IDirect3DCubeTexture8,IDirect3DBaseTexture8)
     /*** IDirect3DCubeTexture8 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT  Level,D3DSURFACE_DESC * pDesc) PURE;
     STDMETHOD(GetCubeMapSurface)(THIS_ D3DCUBEMAP_FACES  FaceType,UINT  Level,IDirect3DSurface8 ** ppCubeMapSurface) PURE;
-    STDMETHOD(LockRect)(THIS_ D3DCUBEMAP_FACES  FaceType,UINT  Level,D3DLOCKED_RECT * pLockedRect,CONST RECT * pRect,DWORD  Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ D3DCUBEMAP_FACES face, UINT level, D3DLOCKED_RECT *locked_rect,
+            const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS_ D3DCUBEMAP_FACES  FaceType,UINT  Level) PURE;
-    STDMETHOD(AddDirtyRect)(THIS_ D3DCUBEMAP_FACES  FaceType,CONST RECT * pDirtyRect) PURE;
+    STDMETHOD(AddDirtyRect)(THIS_ D3DCUBEMAP_FACES face, const RECT *dirty_rect) PURE;
 };
 #undef INTERFACE
 
@@ -667,7 +669,7 @@ DECLARE_INTERFACE_(IDirect3DTexture8,IDirect3DBaseTexture8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -681,9 +683,9 @@ DECLARE_INTERFACE_(IDirect3DTexture8,IDirect3DBaseTexture8)
     /*** IDirect3DTexture8 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT  Level,D3DSURFACE_DESC * pDesc) PURE;
     STDMETHOD(GetSurfaceLevel)(THIS_ UINT  Level,IDirect3DSurface8 ** ppSurfaceLevel) PURE;
-    STDMETHOD(LockRect)(THIS_ UINT  Level,D3DLOCKED_RECT * pLockedRect,CONST RECT * pRect,DWORD  Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ UINT level, D3DLOCKED_RECT *locked_rect, const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS_ UINT  Level) PURE;
-    STDMETHOD(AddDirtyRect)(THIS_ CONST RECT * pDirtyRect) PURE;
+    STDMETHOD(AddDirtyRect)(THIS_ const RECT *dirty_rect) PURE;
 };
 #undef INTERFACE
 
@@ -749,7 +751,7 @@ DECLARE_INTERFACE_(IDirect3DVolumeTexture8,IDirect3DBaseTexture8)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource8 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice8 ** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID  refguid, CONST void * pData, DWORD  SizeOfData, DWORD  Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID  refguid, void * pData, DWORD * pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID  refguid) PURE;
     STDMETHOD_(DWORD,SetPriority)(THIS_ DWORD  PriorityNew) PURE;
@@ -763,9 +765,9 @@ DECLARE_INTERFACE_(IDirect3DVolumeTexture8,IDirect3DBaseTexture8)
     /*** IDirect3DVolumeTexture8 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT  Level,D3DVOLUME_DESC * pDesc) PURE;
     STDMETHOD(GetVolumeLevel)(THIS_ UINT  Level,IDirect3DVolume8 ** ppVolumeLevel) PURE;
-    STDMETHOD(LockBox)(THIS_ UINT  Level,D3DLOCKED_BOX * pLockedVolume,CONST D3DBOX * pBox,DWORD  Flags) PURE;
+    STDMETHOD(LockBox)(THIS_ UINT level, D3DLOCKED_BOX *locked_box, const D3DBOX *box, DWORD flags) PURE;
     STDMETHOD(UnlockBox)(THIS_ UINT  Level) PURE;
-    STDMETHOD(AddDirtyBox)(THIS_ CONST D3DBOX * pDirtyBox) PURE;
+    STDMETHOD(AddDirtyBox)(THIS_ const D3DBOX *dirty_box) PURE;
 };
 #undef INTERFACE
 
@@ -842,10 +844,11 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD_(WINBOOL,ShowCursor)(THIS_ WINBOOL  bShow) PURE;
     STDMETHOD(CreateAdditionalSwapChain)(THIS_ D3DPRESENT_PARAMETERS * pPresentationParameters, IDirect3DSwapChain8 ** pSwapChain) PURE;
     STDMETHOD(Reset)(THIS_ D3DPRESENT_PARAMETERS * pPresentationParameters) PURE;
-    STDMETHOD(Present)(THIS_ CONST RECT * pSourceRect,CONST RECT * pDestRect,HWND  hDestWindowOverride,CONST RGNDATA * pDirtyRegion) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect, HWND dst_window_override,
+            const RGNDATA *dirty_region) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT  BackBuffer,D3DBACKBUFFER_TYPE  Type,IDirect3DSurface8 ** ppBackBuffer) PURE;
     STDMETHOD(GetRasterStatus)(THIS_ D3DRASTER_STATUS * pRasterStatus) PURE;
-    STDMETHOD_(void,SetGammaRamp)(THIS_ DWORD  Flags,CONST D3DGAMMARAMP * pRamp) PURE;
+    STDMETHOD_(void, SetGammaRamp)(THIS_ DWORD flags, const D3DGAMMARAMP *ramp) PURE;
     STDMETHOD_(void,GetGammaRamp)(THIS_ D3DGAMMARAMP * pRamp) PURE;
     STDMETHOD(CreateTexture)(THIS_ UINT  Width,UINT  Height,UINT  Levels,DWORD  Usage,D3DFORMAT  Format,D3DPOOL  Pool,IDirect3DTexture8 ** ppTexture) PURE;
     STDMETHOD(CreateVolumeTexture)(THIS_ UINT  Width,UINT  Height,UINT  Depth,UINT  Levels,DWORD  Usage,D3DFORMAT  Format,D3DPOOL  Pool,IDirect3DVolumeTexture8 ** ppVolumeTexture) PURE;
@@ -855,7 +858,8 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD(CreateRenderTarget)(THIS_ UINT  Width,UINT  Height,D3DFORMAT  Format,D3DMULTISAMPLE_TYPE  MultiSample,WINBOOL  Lockable,IDirect3DSurface8 ** ppSurface) PURE;
     STDMETHOD(CreateDepthStencilSurface)(THIS_ UINT  Width,UINT  Height,D3DFORMAT  Format,D3DMULTISAMPLE_TYPE  MultiSample,IDirect3DSurface8 ** ppSurface) PURE;
     STDMETHOD(CreateImageSurface)(THIS_ UINT  Width,UINT  Height,D3DFORMAT  Format,IDirect3DSurface8 ** ppSurface) PURE;
-    STDMETHOD(CopyRects)(THIS_ IDirect3DSurface8 * pSourceSurface,CONST RECT * pSourceRectsArray,UINT  cRects,IDirect3DSurface8 * pDestinationSurface,CONST POINT * pDestPointsArray) PURE;
+    STDMETHOD(CopyRects)(THIS_ IDirect3DSurface8 *src_surface, const RECT *src_rects,
+            UINT rect_count, IDirect3DSurface8 *dst_surface, const POINT *dst_points) PURE;
     STDMETHOD(UpdateTexture)(THIS_ IDirect3DBaseTexture8 * pSourceTexture,IDirect3DBaseTexture8 * pDestinationTexture) PURE;
     STDMETHOD(GetFrontBuffer)(THIS_ IDirect3DSurface8 * pDestSurface) PURE;
     STDMETHOD(SetRenderTarget)(THIS_ IDirect3DSurface8 * pRenderTarget,IDirect3DSurface8 * pNewZStencil) PURE;
@@ -863,19 +867,20 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD(GetDepthStencilSurface)(THIS_ IDirect3DSurface8 ** ppZStencilSurface) PURE;
     STDMETHOD(BeginScene)(THIS) PURE;
     STDMETHOD(EndScene)(THIS) PURE;
-    STDMETHOD(Clear)(THIS_ DWORD  Count,CONST D3DRECT * pRects,DWORD  Flags,D3DCOLOR  Color,float  Z,DWORD  Stencil) PURE;
-    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE  State,CONST D3DMATRIX * pMatrix) PURE;
+    STDMETHOD(Clear)(THIS_ DWORD rect_count, const D3DRECT *rects, DWORD flags, D3DCOLOR color,
+            float z, DWORD stencil) PURE;
+    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
     STDMETHOD(GetTransform)(THIS_ D3DTRANSFORMSTATETYPE  State,D3DMATRIX * pMatrix) PURE;
-    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE  State, CONST D3DMATRIX * pMatrix) PURE;
-    STDMETHOD(SetViewport)(THIS_ CONST D3DVIEWPORT8 * pViewport) PURE;
+    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
+    STDMETHOD(SetViewport)(THIS_ const D3DVIEWPORT8 *viewport) PURE;
     STDMETHOD(GetViewport)(THIS_ D3DVIEWPORT8 * pViewport) PURE;
-    STDMETHOD(SetMaterial)(THIS_ CONST D3DMATERIAL8 * pMaterial) PURE;
+    STDMETHOD(SetMaterial)(THIS_ const D3DMATERIAL8 *material) PURE;
     STDMETHOD(GetMaterial)(THIS_ D3DMATERIAL8 *pMaterial) PURE;
-    STDMETHOD(SetLight)(THIS_ DWORD  Index,CONST D3DLIGHT8 * pLight) PURE;
+    STDMETHOD(SetLight)(THIS_ DWORD index, const D3DLIGHT8 *light) PURE;
     STDMETHOD(GetLight)(THIS_ DWORD  Index,D3DLIGHT8 * pLight) PURE;
     STDMETHOD(LightEnable)(THIS_ DWORD  Index,WINBOOL  Enable) PURE;
     STDMETHOD(GetLightEnable)(THIS_ DWORD  Index,WINBOOL * pEnable) PURE;
-    STDMETHOD(SetClipPlane)(THIS_ DWORD  Index,CONST float * pPlane) PURE;
+    STDMETHOD(SetClipPlane)(THIS_ DWORD index, const float *plane) PURE;
     STDMETHOD(GetClipPlane)(THIS_ DWORD  Index,float * pPlane) PURE;
     STDMETHOD(SetRenderState)(THIS_ D3DRENDERSTATETYPE  State,DWORD  Value) PURE;
     STDMETHOD(GetRenderState)(THIS_ D3DRENDERSTATETYPE  State,DWORD * pValue) PURE;
@@ -885,7 +890,7 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD(CaptureStateBlock)(THIS_ DWORD  Token) PURE;
     STDMETHOD(DeleteStateBlock)(THIS_ DWORD  Token) PURE;
     STDMETHOD(CreateStateBlock)(THIS_ D3DSTATEBLOCKTYPE  Type,DWORD * pToken) PURE;
-    STDMETHOD(SetClipStatus)(THIS_ CONST D3DCLIPSTATUS8 * pClipStatus) PURE;
+    STDMETHOD(SetClipStatus)(THIS_ const D3DCLIPSTATUS8 *clip_status) PURE;
     STDMETHOD(GetClipStatus)(THIS_ D3DCLIPSTATUS8 * pClipStatus) PURE;
     STDMETHOD(GetTexture)(THIS_ DWORD  Stage,IDirect3DBaseTexture8 ** ppTexture) PURE;
     STDMETHOD(SetTexture)(THIS_ DWORD  Stage,IDirect3DBaseTexture8 * pTexture) PURE;
@@ -893,20 +898,24 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD(SetTextureStageState)(THIS_ DWORD  Stage,D3DTEXTURESTAGESTATETYPE  Type,DWORD  Value) PURE;
     STDMETHOD(ValidateDevice)(THIS_ DWORD * pNumPasses) PURE;
     STDMETHOD(GetInfo)(THIS_ DWORD  DevInfoID,void * pDevInfoStruct,DWORD  DevInfoStructSize) PURE;
-    STDMETHOD(SetPaletteEntries)(THIS_ UINT  PaletteNumber,CONST PALETTEENTRY * pEntries) PURE;
+    STDMETHOD(SetPaletteEntries)(THIS_ UINT palette_idx, const PALETTEENTRY *entries) PURE;
     STDMETHOD(GetPaletteEntries)(THIS_ UINT  PaletteNumber,PALETTEENTRY * pEntries) PURE;
     STDMETHOD(SetCurrentTexturePalette)(THIS_ UINT  PaletteNumber) PURE;
     STDMETHOD(GetCurrentTexturePalette)(THIS_ UINT  * PaletteNumber) PURE;
     STDMETHOD(DrawPrimitive)(THIS_ D3DPRIMITIVETYPE  PrimitiveType,UINT  StartVertex,UINT  PrimitiveCount) PURE;
     STDMETHOD(DrawIndexedPrimitive)(THIS_ D3DPRIMITIVETYPE  PrimitiveType,UINT  minIndex,UINT  NumVertices,UINT  startIndex,UINT  primCount) PURE;
-    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE  PrimitiveType,UINT  PrimitiveCount,CONST void * pVertexStreamZeroData,UINT  VertexStreamZeroStride) PURE;
-    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE  PrimitiveType,UINT  MinVertexIndex,UINT  NumVertexIndices,UINT  PrimitiveCount,CONST void * pIndexData,D3DFORMAT  IndexDataFormat,CONST void * pVertexStreamZeroData,UINT  VertexStreamZeroStride) PURE;
+    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type, UINT primitive_count,
+            const void *data, UINT stride) PURE;
+    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type, UINT min_vertex_idx,
+            UINT vertex_count, UINT primitive_count, const void *index_data, D3DFORMAT index_format,
+            const void *data, UINT stride) PURE;
     STDMETHOD(ProcessVertices)(THIS_ UINT  SrcStartIndex,UINT  DestIndex,UINT  VertexCount,IDirect3DVertexBuffer8 * pDestBuffer,DWORD  Flags) PURE;
-    STDMETHOD(CreateVertexShader)(THIS_ CONST DWORD * pDeclaration,CONST DWORD * pFunction,DWORD * pHandle,DWORD  Usage) PURE;
+    STDMETHOD(CreateVertexShader)(THIS_ const DWORD *declaration, const DWORD *byte_code,
+            DWORD *shader, DWORD usage) PURE;
     STDMETHOD(SetVertexShader)(THIS_ DWORD  Handle) PURE;
     STDMETHOD(GetVertexShader)(THIS_ DWORD * pHandle) PURE;
     STDMETHOD(DeleteVertexShader)(THIS_ DWORD  Handle) PURE;
-    STDMETHOD(SetVertexShaderConstant)(THIS_ DWORD  Register,CONST void * pConstantData,DWORD  ConstantCount) PURE;
+    STDMETHOD(SetVertexShaderConstant)(THIS_ DWORD reg_idx, const void *data, DWORD count) PURE;
     STDMETHOD(GetVertexShaderConstant)(THIS_ DWORD  Register,void * pConstantData,DWORD  ConstantCount) PURE;
     STDMETHOD(GetVertexShaderDeclaration)(THIS_ DWORD  Handle,void * pData,DWORD * pSizeOfData) PURE;
     STDMETHOD(GetVertexShaderFunction)(THIS_ DWORD  Handle,void * pData,DWORD * pSizeOfData) PURE;
@@ -914,15 +923,17 @@ DECLARE_INTERFACE_(IDirect3DDevice8,IUnknown)
     STDMETHOD(GetStreamSource)(THIS_ UINT  StreamNumber,IDirect3DVertexBuffer8 ** ppStreamData,UINT * pStride) PURE;
     STDMETHOD(SetIndices)(THIS_ IDirect3DIndexBuffer8 * pIndexData,UINT  BaseVertexIndex) PURE;
     STDMETHOD(GetIndices)(THIS_ IDirect3DIndexBuffer8 ** ppIndexData,UINT * pBaseVertexIndex) PURE;
-    STDMETHOD(CreatePixelShader)(THIS_ CONST DWORD * pFunction,DWORD * pHandle) PURE;
+    STDMETHOD(CreatePixelShader)(THIS_ const DWORD *byte_code, DWORD *shader) PURE;
     STDMETHOD(SetPixelShader)(THIS_ DWORD  Handle) PURE;
     STDMETHOD(GetPixelShader)(THIS_ DWORD * pHandle) PURE;
     STDMETHOD(DeletePixelShader)(THIS_ DWORD  Handle) PURE;
-    STDMETHOD(SetPixelShaderConstant)(THIS_ DWORD  Register,CONST void * pConstantData,DWORD  ConstantCount) PURE;
+    STDMETHOD(SetPixelShaderConstant)(THIS_ DWORD reg_idx, const void *data, DWORD count) PURE;
     STDMETHOD(GetPixelShaderConstant)(THIS_ DWORD  Register,void * pConstantData,DWORD  ConstantCount) PURE;
     STDMETHOD(GetPixelShaderFunction)(THIS_ DWORD  Handle,void * pData,DWORD * pSizeOfData) PURE;
-    STDMETHOD(DrawRectPatch)(THIS_ UINT  Handle,CONST float * pNumSegs,CONST D3DRECTPATCH_INFO * pRectPatchInfo) PURE;
-    STDMETHOD(DrawTriPatch)(THIS_ UINT  Handle,CONST float * pNumSegs,CONST D3DTRIPATCH_INFO * pTriPatchInfo) PURE;
+    STDMETHOD(DrawRectPatch)(THIS_ UINT handle, const float *segment_count,
+            const D3DRECTPATCH_INFO *patch_info) PURE;
+    STDMETHOD(DrawTriPatch)(THIS_ UINT handle, const float *segment_count,
+            const D3DTRIPATCH_INFO *patch_info) PURE;
     STDMETHOD(DeletePatch)(THIS_ UINT  Handle) PURE;
 };
 #undef INTERFACE
diff --git a/mingw-w64-headers/direct-x/include/d3d9.h b/mingw-w64-headers/direct-x/include/d3d9.h
index da052f6..d810066 100644
--- a/mingw-w64-headers/direct-x/include/d3d9.h
+++ b/mingw-w64-headers/direct-x/include/d3d9.h
@@ -280,8 +280,9 @@ DECLARE_INTERFACE_(IDirect3D9Ex,IDirect3D9)
     STDMETHOD_(HMONITOR, GetAdapterMonitor)(THIS_ UINT Adapter) PURE;
     STDMETHOD(CreateDevice)(THIS_ UINT Adapter, D3DDEVTYPE DeviceType, HWND hFocusWindow, DWORD BehaviorFlags, D3DPRESENT_PARAMETERS* pPresentationParameters, struct IDirect3DDevice9** ppReturnedDeviceInterface) PURE;
     /*** IDirect3D9Ex methods ***/
-    STDMETHOD_(UINT, GetAdapterModeCountEx)(THIS_ UINT Adapter, CONST D3DDISPLAYMODEFILTER *pFilter) PURE;
-    STDMETHOD(EnumAdapterModesEx)(THIS_ UINT Adapter, CONST D3DDISPLAYMODEFILTER *pFilter, UINT Mode, D3DDISPLAYMODEEX* pMode) PURE;
+    STDMETHOD_(UINT, GetAdapterModeCountEx)(THIS_ UINT adapter_idx, const D3DDISPLAYMODEFILTER *filter) PURE;
+    STDMETHOD(EnumAdapterModesEx)(THIS_ UINT adapter_idx, const D3DDISPLAYMODEFILTER *filter,
+            UINT mode_idx, D3DDISPLAYMODEEX *mode) PURE;
     STDMETHOD(GetAdapterDisplayModeEx)(THIS_ UINT Adapter, D3DDISPLAYMODEEX *pMode, D3DDISPLAYROTATION *pRotation);
     STDMETHOD(CreateDeviceEx)(THIS_ UINT Adapter, D3DDEVTYPE DeviceType, HWND hFocusWindow, DWORD BehaviorFlags, D3DPRESENT_PARAMETERS* pPresentationParameters, D3DDISPLAYMODEEX* pFullscreenDisplayMode, struct IDirect3DDevice9Ex **ppReturnedDeviceInterface) PURE;
     STDMETHOD(GetAdapterLUID)(THIS_ UINT Adatper, LUID *pLUID) PURE;
@@ -348,12 +349,12 @@ DECLARE_INTERFACE_(IDirect3DVolume9,IUnknown)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DVolume9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD(GetContainer)(THIS_ REFIID riid, void** ppContainer) PURE;
     STDMETHOD(GetDesc)(THIS_ D3DVOLUME_DESC* pDesc) PURE;
-    STDMETHOD(LockBox)(THIS_ D3DLOCKED_BOX* pLockedVolume, CONST D3DBOX* pBox, DWORD Flags) PURE;
+    STDMETHOD(LockBox)(THIS_ D3DLOCKED_BOX *locked_box, const D3DBOX *box, DWORD flags) PURE;
     STDMETHOD(UnlockBox)(THIS) PURE;
 };
 #undef INTERFACE
@@ -399,7 +400,8 @@ DECLARE_INTERFACE_(IDirect3DSwapChain9,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DSwapChain9 methods ***/
-    STDMETHOD(Present)(THIS_ CONST RECT *pSourceRect, CONST RECT *pDestRect, HWND hDestWindowOverride, CONST RGNDATA *pDirtyRegion, DWORD dwFlags) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect, HWND dst_window_override,
+            const RGNDATA *dirty_region, DWORD flags) PURE;
     STDMETHOD(GetFrontBufferData)(THIS_ struct IDirect3DSurface9 *pDestSurface) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, struct IDirect3DSurface9 **ppBackBuffer) PURE;
     STDMETHOD(GetRasterStatus)(THIS_ D3DRASTER_STATUS *pRasterStatus) PURE;
@@ -448,7 +450,8 @@ DECLARE_INTERFACE_(IDirect3DSwapChain9Ex,IDirect3DSwapChain9)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DSwapChain9 methods ***/
-    STDMETHOD(Present)(THIS_ CONST RECT *pSourceRect, CONST RECT *pDestRect, HWND hDestWindowOverride, CONST RGNDATA *pDirtyRegion, DWORD dwFlags) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect, HWND dst_window_override,
+            const RGNDATA *dirty_region, DWORD flags) PURE;
     STDMETHOD(GetFrontBufferData)(THIS_ struct IDirect3DSurface9 *pDestSurface) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, struct IDirect3DSurface9 **ppBackBuffer) PURE;
     STDMETHOD(GetRasterStatus)(THIS_ D3DRASTER_STATUS *pRasterStatus) PURE;
@@ -510,7 +513,7 @@ DECLARE_INTERFACE_(IDirect3DResource9,IUnknown)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -562,7 +565,7 @@ DECLARE_INTERFACE_(IDirect3DSurface9,IDirect3DResource9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -572,7 +575,7 @@ DECLARE_INTERFACE_(IDirect3DSurface9,IDirect3DResource9)
     /*** IDirect3DSurface9 methods ***/
     STDMETHOD(GetContainer)(THIS_ REFIID riid, void** ppContainer) PURE;
     STDMETHOD(GetDesc)(THIS_ D3DSURFACE_DESC* pDesc) PURE;
-    STDMETHOD(LockRect)(THIS_ D3DLOCKED_RECT* pLockedRect, CONST RECT* pRect, DWORD Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ D3DLOCKED_RECT *locked_rect, const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS) PURE;
     STDMETHOD(GetDC)(THIS_ HDC* phdc) PURE;
     STDMETHOD(ReleaseDC)(THIS_ HDC hdc) PURE;
@@ -635,7 +638,7 @@ DECLARE_INTERFACE_(IDirect3DVertexBuffer9,IDirect3DResource9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -699,7 +702,7 @@ DECLARE_INTERFACE_(IDirect3DIndexBuffer9,IDirect3DResource9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -763,7 +766,7 @@ DECLARE_INTERFACE_(IDirect3DBaseTexture9,IDirect3DResource9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -836,7 +839,7 @@ DECLARE_INTERFACE_(IDirect3DCubeTexture9,IDirect3DBaseTexture9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -853,9 +856,10 @@ DECLARE_INTERFACE_(IDirect3DCubeTexture9,IDirect3DBaseTexture9)
     /*** IDirect3DCubeTexture9 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT Level,D3DSURFACE_DESC* pDesc) PURE;
     STDMETHOD(GetCubeMapSurface)(THIS_ D3DCUBEMAP_FACES FaceType, UINT Level, IDirect3DSurface9** ppCubeMapSurface) PURE;
-    STDMETHOD(LockRect)(THIS_ D3DCUBEMAP_FACES FaceType, UINT Level, D3DLOCKED_RECT* pLockedRect, CONST RECT* pRect, DWORD Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ D3DCUBEMAP_FACES face, UINT level,
+            D3DLOCKED_RECT *locked_rect, const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS_ D3DCUBEMAP_FACES FaceType, UINT Level) PURE;
-    STDMETHOD(AddDirtyRect)(THIS_ D3DCUBEMAP_FACES FaceType, CONST RECT* pDirtyRect) PURE;
+    STDMETHOD(AddDirtyRect)(THIS_ D3DCUBEMAP_FACES face, const RECT *dirty_rect) PURE;
 };
 #undef INTERFACE
 
@@ -927,7 +931,7 @@ DECLARE_INTERFACE_(IDirect3DTexture9,IDirect3DBaseTexture9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -944,9 +948,9 @@ DECLARE_INTERFACE_(IDirect3DTexture9,IDirect3DBaseTexture9)
     /*** IDirect3DTexture9 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT Level, D3DSURFACE_DESC* pDesc) PURE;
     STDMETHOD(GetSurfaceLevel)(THIS_ UINT Level, IDirect3DSurface9** ppSurfaceLevel) PURE;
-    STDMETHOD(LockRect)(THIS_ UINT Level, D3DLOCKED_RECT* pLockedRect, CONST RECT* pRect, DWORD Flags) PURE;
+    STDMETHOD(LockRect)(THIS_ UINT level, D3DLOCKED_RECT *locked_rect, const RECT *rect, DWORD flags) PURE;
     STDMETHOD(UnlockRect)(THIS_ UINT Level) PURE;
-    STDMETHOD(AddDirtyRect)(THIS_ CONST RECT* pDirtyRect) PURE;
+    STDMETHOD(AddDirtyRect)(THIS_ const RECT *dirty_rect) PURE;
 };
 #undef INTERFACE
 
@@ -1018,7 +1022,7 @@ DECLARE_INTERFACE_(IDirect3DVolumeTexture9,IDirect3DBaseTexture9)
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirect3DResource9 methods ***/
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
-    STDMETHOD(SetPrivateData)(THIS_ REFGUID refguid, CONST void* pData, DWORD SizeOfData, DWORD Flags) PURE;
+    STDMETHOD(SetPrivateData)(THIS_ REFGUID guid, const void *data, DWORD data_size, DWORD flags) PURE;
     STDMETHOD(GetPrivateData)(THIS_ REFGUID refguid, void* pData, DWORD* pSizeOfData) PURE;
     STDMETHOD(FreePrivateData)(THIS_ REFGUID refguid) PURE;
     STDMETHOD_(DWORD, SetPriority)(THIS_ DWORD PriorityNew) PURE;
@@ -1035,9 +1039,9 @@ DECLARE_INTERFACE_(IDirect3DVolumeTexture9,IDirect3DBaseTexture9)
     /*** IDirect3DVolumeTexture9 methods ***/
     STDMETHOD(GetLevelDesc)(THIS_ UINT Level, D3DVOLUME_DESC *pDesc) PURE;
     STDMETHOD(GetVolumeLevel)(THIS_ UINT Level, IDirect3DVolume9** ppVolumeLevel) PURE;
-    STDMETHOD(LockBox)(THIS_ UINT Level, D3DLOCKED_BOX* pLockedVolume, CONST D3DBOX* pBox, DWORD Flags) PURE;
+    STDMETHOD(LockBox)(THIS_ UINT level, D3DLOCKED_BOX *locked_box, const D3DBOX *box, DWORD flags) PURE;
     STDMETHOD(UnlockBox)(THIS_ UINT Level) PURE;
-    STDMETHOD(AddDirtyBox)(THIS_ CONST D3DBOX* pDirtyBox) PURE;
+    STDMETHOD(AddDirtyBox)(THIS_ const D3DBOX *dirty_box) PURE;
 };
 #undef INTERFACE
 
@@ -1304,11 +1308,12 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD(GetSwapChain)(THIS_ UINT iSwapChain, IDirect3DSwapChain9** pSwapChain) PURE;
     STDMETHOD_(UINT, GetNumberOfSwapChains)(THIS) PURE;
     STDMETHOD(Reset)(THIS_ D3DPRESENT_PARAMETERS* pPresentationParameters) PURE;
-    STDMETHOD(Present)(THIS_ CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect,
+            HWND dst_window_override, const RGNDATA *dirty_region) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT iSwapChain, UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, IDirect3DSurface9** ppBackBuffer) PURE;
     STDMETHOD(GetRasterStatus)(THIS_ UINT iSwapChain, D3DRASTER_STATUS* pRasterStatus) PURE;
     STDMETHOD(SetDialogBoxMode)(THIS_ WINBOOL bEnableDialogs) PURE;
-    STDMETHOD_(void, SetGammaRamp)(THIS_ UINT iSwapChain, DWORD Flags, CONST D3DGAMMARAMP* pRamp) PURE;
+    STDMETHOD_(void, SetGammaRamp)(THIS_ UINT swapchain_idx, DWORD flags, const D3DGAMMARAMP *ramp) PURE;
     STDMETHOD_(void, GetGammaRamp)(THIS_ UINT iSwapChain, D3DGAMMARAMP* pRamp) PURE;
     STDMETHOD(CreateTexture)(THIS_ UINT Width, UINT Height, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DTexture9** ppTexture, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateVolumeTexture)(THIS_ UINT Width, UINT Height, UINT Depth, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DVolumeTexture9** ppVolumeTexture, HANDLE* pSharedHandle) PURE;
@@ -1317,12 +1322,14 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD(CreateIndexBuffer)(THIS_ UINT Length, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DIndexBuffer9** ppIndexBuffer, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateRenderTarget)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, WINBOOL Lockable, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateDepthStencilSurface)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, WINBOOL Discard, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
-    STDMETHOD(UpdateSurface)(THIS_ IDirect3DSurface9* pSourceSurface, CONST RECT* pSourceRect, IDirect3DSurface9* pDestinationSurface, CONST POINT* pDestPoint) PURE;
+    STDMETHOD(UpdateSurface)(THIS_ IDirect3DSurface9 *src_surface, const RECT *src_rect,
+            IDirect3DSurface9 *dst_surface, const POINT *dst_point) PURE;
     STDMETHOD(UpdateTexture)(THIS_ IDirect3DBaseTexture9* pSourceTexture, IDirect3DBaseTexture9* pDestinationTexture) PURE;
     STDMETHOD(GetRenderTargetData)(THIS_ IDirect3DSurface9* pRenderTarget, IDirect3DSurface9* pDestSurface) PURE;
     STDMETHOD(GetFrontBufferData)(THIS_ UINT iSwapChain, IDirect3DSurface9* pDestSurface) PURE;
-    STDMETHOD(StretchRect)(THIS_ IDirect3DSurface9* pSourceSurface, CONST RECT* pSourceRect, IDirect3DSurface9* pDestSurface, CONST RECT* pDestRect, D3DTEXTUREFILTERTYPE Filter) PURE;
-    STDMETHOD(ColorFill)(THIS_ IDirect3DSurface9* pSurface, CONST RECT* pRect, D3DCOLOR color) PURE;
+    STDMETHOD(StretchRect)(THIS_ IDirect3DSurface9 *src_surface, const RECT *src_rect,
+            IDirect3DSurface9 *dst_surface, const RECT *dst_rect, D3DTEXTUREFILTERTYPE filter) PURE;
+    STDMETHOD(ColorFill)(THIS_ IDirect3DSurface9 *surface, const RECT *rect, D3DCOLOR color) PURE;
     STDMETHOD(CreateOffscreenPlainSurface)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DPOOL Pool, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
     STDMETHOD(SetRenderTarget)(THIS_ DWORD RenderTargetIndex, IDirect3DSurface9* pRenderTarget) PURE;
     STDMETHOD(GetRenderTarget)(THIS_ DWORD RenderTargetIndex, IDirect3DSurface9** ppRenderTarget) PURE;
@@ -1330,26 +1337,27 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD(GetDepthStencilSurface)(THIS_ IDirect3DSurface9** ppZStencilSurface) PURE;
     STDMETHOD(BeginScene)(THIS) PURE;
     STDMETHOD(EndScene)(THIS) PURE;
-    STDMETHOD(Clear)(THIS_ DWORD Count, CONST D3DRECT* pRects, DWORD Flags, D3DCOLOR Color, float Z, DWORD Stencil) PURE;
-    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE State, CONST D3DMATRIX* pMatrix) PURE;
+    STDMETHOD(Clear)(THIS_ DWORD rect_count, const D3DRECT *rects, DWORD flags,
+            D3DCOLOR color, float z, DWORD stencil) PURE;
+    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
     STDMETHOD(GetTransform)(THIS_ D3DTRANSFORMSTATETYPE State, D3DMATRIX* pMatrix) PURE;
-    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE, CONST D3DMATRIX*) PURE;
-    STDMETHOD(SetViewport)(THIS_ CONST D3DVIEWPORT9* pViewport) PURE;
+    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
+    STDMETHOD(SetViewport)(THIS_ const D3DVIEWPORT9 *viewport) PURE;
     STDMETHOD(GetViewport)(THIS_ D3DVIEWPORT9* pViewport) PURE;
-    STDMETHOD(SetMaterial)(THIS_ CONST D3DMATERIAL9* pMaterial) PURE;
+    STDMETHOD(SetMaterial)(THIS_ const D3DMATERIAL9 *material) PURE;
     STDMETHOD(GetMaterial)(THIS_ D3DMATERIAL9* pMaterial) PURE;
-    STDMETHOD(SetLight)(THIS_ DWORD Index, CONST D3DLIGHT9*) PURE;
+    STDMETHOD(SetLight)(THIS_ DWORD index, const D3DLIGHT9 *light) PURE;
     STDMETHOD(GetLight)(THIS_ DWORD Index, D3DLIGHT9*) PURE;
     STDMETHOD(LightEnable)(THIS_ DWORD Index, WINBOOL Enable) PURE;
     STDMETHOD(GetLightEnable)(THIS_ DWORD Index, WINBOOL* pEnable) PURE;
-    STDMETHOD(SetClipPlane)(THIS_ DWORD Index, CONST float* pPlane) PURE;
+    STDMETHOD(SetClipPlane)(THIS_ DWORD index, const float *plane) PURE;
     STDMETHOD(GetClipPlane)(THIS_ DWORD Index, float* pPlane) PURE;
     STDMETHOD(SetRenderState)(THIS_ D3DRENDERSTATETYPE State, DWORD Value) PURE;
     STDMETHOD(GetRenderState)(THIS_ D3DRENDERSTATETYPE State, DWORD* pValue) PURE;
     STDMETHOD(CreateStateBlock)(THIS_ D3DSTATEBLOCKTYPE Type, IDirect3DStateBlock9** ppSB) PURE;
     STDMETHOD(BeginStateBlock)(THIS) PURE;
     STDMETHOD(EndStateBlock)(THIS_ IDirect3DStateBlock9** ppSB) PURE;
-    STDMETHOD(SetClipStatus)(THIS_ CONST D3DCLIPSTATUS9* pClipStatus) PURE;
+    STDMETHOD(SetClipStatus)(THIS_ const D3DCLIPSTATUS9 *clip_status) PURE;
     STDMETHOD(GetClipStatus)(THIS_ D3DCLIPSTATUS9* pClipStatus) PURE;
     STDMETHOD(GetTexture)(THIS_ DWORD Stage, IDirect3DBaseTexture9** ppTexture) PURE;
     STDMETHOD(SetTexture)(THIS_ DWORD Stage, IDirect3DBaseTexture9* pTexture) PURE;
@@ -1358,11 +1366,11 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD(GetSamplerState)(THIS_ DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD* pValue) PURE;
     STDMETHOD(SetSamplerState)(THIS_ DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD Value) PURE;
     STDMETHOD(ValidateDevice)(THIS_ DWORD* pNumPasses) PURE;
-    STDMETHOD(SetPaletteEntries)(THIS_ UINT PaletteNumber, CONST PALETTEENTRY* pEntries) PURE;
+    STDMETHOD(SetPaletteEntries)(THIS_ UINT palette_idx, const PALETTEENTRY *entries) PURE;
     STDMETHOD(GetPaletteEntries)(THIS_ UINT PaletteNumber,PALETTEENTRY* pEntries) PURE;
     STDMETHOD(SetCurrentTexturePalette)(THIS_ UINT PaletteNumber) PURE;
     STDMETHOD(GetCurrentTexturePalette)(THIS_ UINT *PaletteNumber) PURE;
-    STDMETHOD(SetScissorRect)(THIS_ CONST RECT* pRect) PURE;
+    STDMETHOD(SetScissorRect)(THIS_ const RECT *rect) PURE;
     STDMETHOD(GetScissorRect)(THIS_ RECT* pRect) PURE;
     STDMETHOD(SetSoftwareVertexProcessing)(THIS_ WINBOOL bSoftware) PURE;
     STDMETHOD_(WINBOOL, GetSoftwareVertexProcessing)(THIS) PURE;
@@ -1370,22 +1378,25 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD_(float, GetNPatchMode)(THIS) PURE;
     STDMETHOD(DrawPrimitive)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT StartVertex, UINT PrimitiveCount) PURE;
     STDMETHOD(DrawIndexedPrimitive)(THIS_ D3DPRIMITIVETYPE, INT BaseVertexIndex, UINT MinVertexIndex, UINT NumVertices, UINT startIndex, UINT primCount) PURE;
-    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT PrimitiveCount, CONST void* pVertexStreamZeroData, UINT VertexStreamZeroStride) PURE;
-    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT MinVertexIndex, UINT NumVertices, UINT PrimitiveCount, CONST void* pIndexData, D3DFORMAT IndexDataFormat, CONST void* pVertexStreamZeroData, UINT VertexStreamZeroStride) PURE;
+    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type,
+            UINT primitive_count, const void *data, UINT stride) PURE;
+    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type, UINT min_vertex_idx, UINT vertex_count,
+            UINT primitive_count, const void *index_data, D3DFORMAT index_format, const void *data, UINT stride) PURE;
     STDMETHOD(ProcessVertices)(THIS_ UINT SrcStartIndex, UINT DestIndex, UINT VertexCount, IDirect3DVertexBuffer9* pDestBuffer, IDirect3DVertexDeclaration9* pVertexDecl, DWORD Flags) PURE;
-    STDMETHOD(CreateVertexDeclaration)(THIS_ CONST D3DVERTEXELEMENT9* pVertexElements, IDirect3DVertexDeclaration9** ppDecl) PURE;
+    STDMETHOD(CreateVertexDeclaration)(THIS_ const D3DVERTEXELEMENT9 *elements,
+            IDirect3DVertexDeclaration9 **declaration) PURE;
     STDMETHOD(SetVertexDeclaration)(THIS_ IDirect3DVertexDeclaration9* pDecl) PURE;
     STDMETHOD(GetVertexDeclaration)(THIS_ IDirect3DVertexDeclaration9** ppDecl) PURE;
     STDMETHOD(SetFVF)(THIS_ DWORD FVF) PURE;
     STDMETHOD(GetFVF)(THIS_ DWORD* pFVF) PURE;
-    STDMETHOD(CreateVertexShader)(THIS_ CONST DWORD* pFunction, IDirect3DVertexShader9** ppShader) PURE;
+    STDMETHOD(CreateVertexShader)(THIS_ const DWORD *byte_code, IDirect3DVertexShader9 **shader) PURE;
     STDMETHOD(SetVertexShader)(THIS_ IDirect3DVertexShader9* pShader) PURE;
     STDMETHOD(GetVertexShader)(THIS_ IDirect3DVertexShader9** ppShader) PURE;
-    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT StartRegister, CONST float* pConstantData, UINT Vector4fCount) PURE;
+    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT reg_idx, const float *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantF)(THIS_ UINT StartRegister, float* pConstantData, UINT Vector4fCount) PURE;
-    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT StartRegister, CONST int* pConstantData, UINT Vector4iCount) PURE;
+    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT reg_idx, const int *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantI)(THIS_ UINT StartRegister, int* pConstantData, UINT Vector4iCount) PURE;
-    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT StartRegister, CONST WINBOOL* pConstantData, UINT  BoolCount) PURE;
+    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT reg_idx, const WINBOOL *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantB)(THIS_ UINT StartRegister, WINBOOL* pConstantData, UINT BoolCount) PURE;
     STDMETHOD(SetStreamSource)(THIS_ UINT StreamNumber, IDirect3DVertexBuffer9* pStreamData, UINT OffsetInBytes, UINT Stride) PURE;
     STDMETHOD(GetStreamSource)(THIS_ UINT StreamNumber, IDirect3DVertexBuffer9** ppStreamData, UINT* OffsetInBytes, UINT* pStride) PURE;
@@ -1393,17 +1404,17 @@ DECLARE_INTERFACE_(IDirect3DDevice9,IUnknown)
     STDMETHOD(GetStreamSourceFreq)(THIS_ UINT StreamNumber, UINT* Divider) PURE;
     STDMETHOD(SetIndices)(THIS_ IDirect3DIndexBuffer9* pIndexData) PURE;
     STDMETHOD(GetIndices)(THIS_ IDirect3DIndexBuffer9** ppIndexData) PURE;
-    STDMETHOD(CreatePixelShader)(THIS_ CONST DWORD* pFunction, IDirect3DPixelShader9** ppShader) PURE;
+    STDMETHOD(CreatePixelShader)(THIS_ const DWORD *byte_code, IDirect3DPixelShader9 **shader) PURE;
     STDMETHOD(SetPixelShader)(THIS_ IDirect3DPixelShader9* pShader) PURE;
     STDMETHOD(GetPixelShader)(THIS_ IDirect3DPixelShader9** ppShader) PURE;
-    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT StartRegister, CONST float* pConstantData, UINT Vector4fCount) PURE;
+    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT reg_idx, const float *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantF)(THIS_ UINT StartRegister, float* pConstantData, UINT Vector4fCount) PURE;
-    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT StartRegister, CONST int* pConstantData, UINT Vector4iCount) PURE;
+    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT reg_idx, const int *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantI)(THIS_ UINT StartRegister, int* pConstantData, UINT Vector4iCount) PURE;
-    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT StartRegister, CONST WINBOOL* pConstantData, UINT  BoolCount) PURE;
+    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT reg_idx, const WINBOOL *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantB)(THIS_ UINT StartRegister, WINBOOL* pConstantData, UINT BoolCount) PURE;
-    STDMETHOD(DrawRectPatch)(THIS_ UINT Handle, CONST float* pNumSegs, CONST D3DRECTPATCH_INFO* pRectPatchInfo) PURE;
-    STDMETHOD(DrawTriPatch)(THIS_ UINT Handle, CONST float* pNumSegs, CONST D3DTRIPATCH_INFO* pTriPatchInfo) PURE;
+    STDMETHOD(DrawRectPatch)(THIS_ UINT handle, const float *segment_count, const D3DRECTPATCH_INFO *patch_info) PURE;
+    STDMETHOD(DrawTriPatch)(THIS_ UINT handle, const float *segment_count, const D3DTRIPATCH_INFO *patch_info) PURE;
     STDMETHOD(DeletePatch)(THIS_ UINT Handle) PURE;
     STDMETHOD(CreateQuery)(THIS_ D3DQUERYTYPE Type, IDirect3DQuery9** ppQuery) PURE;
 };
@@ -1681,11 +1692,12 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(GetSwapChain)(THIS_ UINT iSwapChain, IDirect3DSwapChain9** pSwapChain) PURE;
     STDMETHOD_(UINT, GetNumberOfSwapChains)(THIS) PURE;
     STDMETHOD(Reset)(THIS_ D3DPRESENT_PARAMETERS* pPresentationParameters) PURE;
-    STDMETHOD(Present)(THIS_ CONST RECT* pSourceRect, CONST RECT* pDestRect, HWND hDestWindowOverride, CONST RGNDATA* pDirtyRegion) PURE;
+    STDMETHOD(Present)(THIS_ const RECT *src_rect, const RECT *dst_rect,
+            HWND dst_window_override, const RGNDATA *dirty_region) PURE;
     STDMETHOD(GetBackBuffer)(THIS_ UINT iSwapChain, UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, IDirect3DSurface9** ppBackBuffer) PURE;
     STDMETHOD(GetRasterStatus)(THIS_ UINT iSwapChain, D3DRASTER_STATUS* pRasterStatus) PURE;
     STDMETHOD(SetDialogBoxMode)(THIS_ WINBOOL bEnableDialogs) PURE;
-    STDMETHOD_(void, SetGammaRamp)(THIS_ UINT iSwapChain, DWORD Flags, CONST D3DGAMMARAMP* pRamp) PURE;
+    STDMETHOD_(void, SetGammaRamp)(THIS_ UINT swapchain_idx, DWORD flags, const D3DGAMMARAMP *ramp) PURE;
     STDMETHOD_(void, GetGammaRamp)(THIS_ UINT iSwapChain, D3DGAMMARAMP* pRamp) PURE;
     STDMETHOD(CreateTexture)(THIS_ UINT Width, UINT Height, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DTexture9** ppTexture, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateVolumeTexture)(THIS_ UINT Width, UINT Height, UINT Depth, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DVolumeTexture9** ppVolumeTexture, HANDLE* pSharedHandle) PURE;
@@ -1694,12 +1706,14 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(CreateIndexBuffer)(THIS_ UINT Length, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DIndexBuffer9** ppIndexBuffer, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateRenderTarget)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, WINBOOL Lockable, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
     STDMETHOD(CreateDepthStencilSurface)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, WINBOOL Discard, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
-    STDMETHOD(UpdateSurface)(THIS_ IDirect3DSurface9* pSourceSurface, CONST RECT* pSourceRect, IDirect3DSurface9* pDestinationSurface, CONST POINT* pDestPoint) PURE;
+    STDMETHOD(UpdateSurface)(THIS_ IDirect3DSurface9 *src_surface, const RECT *src_rect,
+            IDirect3DSurface9 *dst_surface, const POINT *dst_point) PURE;
     STDMETHOD(UpdateTexture)(THIS_ IDirect3DBaseTexture9* pSourceTexture, IDirect3DBaseTexture9* pDestinationTexture) PURE;
     STDMETHOD(GetRenderTargetData)(THIS_ IDirect3DSurface9* pRenderTarget, IDirect3DSurface9* pDestSurface) PURE;
     STDMETHOD(GetFrontBufferData)(THIS_ UINT iSwapChain, IDirect3DSurface9* pDestSurface) PURE;
-    STDMETHOD(StretchRect)(THIS_ IDirect3DSurface9* pSourceSurface, CONST RECT* pSourceRect, IDirect3DSurface9* pDestSurface, CONST RECT* pDestRect, D3DTEXTUREFILTERTYPE Filter) PURE;
-    STDMETHOD(ColorFill)(THIS_ IDirect3DSurface9* pSurface, CONST RECT* pRect, D3DCOLOR color) PURE;
+    STDMETHOD(StretchRect)(THIS_ IDirect3DSurface9 *src_surface, const RECT *src_rect,
+            IDirect3DSurface9 *dst_surface, const RECT *dst_rect, D3DTEXTUREFILTERTYPE filter) PURE;
+    STDMETHOD(ColorFill)(THIS_ IDirect3DSurface9 *surface, const RECT *rect, D3DCOLOR color) PURE;
     STDMETHOD(CreateOffscreenPlainSurface)(THIS_ UINT Width, UINT Height, D3DFORMAT Format, D3DPOOL Pool, IDirect3DSurface9** ppSurface, HANDLE* pSharedHandle) PURE;
     STDMETHOD(SetRenderTarget)(THIS_ DWORD RenderTargetIndex, IDirect3DSurface9* pRenderTarget) PURE;
     STDMETHOD(GetRenderTarget)(THIS_ DWORD RenderTargetIndex, IDirect3DSurface9** ppRenderTarget) PURE;
@@ -1707,26 +1721,27 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(GetDepthStencilSurface)(THIS_ IDirect3DSurface9** ppZStencilSurface) PURE;
     STDMETHOD(BeginScene)(THIS) PURE;
     STDMETHOD(EndScene)(THIS) PURE;
-    STDMETHOD(Clear)(THIS_ DWORD Count, CONST D3DRECT* pRects, DWORD Flags, D3DCOLOR Color, float Z, DWORD Stencil) PURE;
-    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE State, CONST D3DMATRIX* pMatrix) PURE;
+    STDMETHOD(Clear)(THIS_ DWORD rect_count, const D3DRECT *rects, DWORD flags,
+            D3DCOLOR color, float z, DWORD stencil) PURE;
+    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
     STDMETHOD(GetTransform)(THIS_ D3DTRANSFORMSTATETYPE State, D3DMATRIX* pMatrix) PURE;
-    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE, CONST D3DMATRIX*) PURE;
-    STDMETHOD(SetViewport)(THIS_ CONST D3DVIEWPORT9* pViewport) PURE;
+    STDMETHOD(MultiplyTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
+    STDMETHOD(SetViewport)(THIS_ const D3DVIEWPORT9 *viewport) PURE;
     STDMETHOD(GetViewport)(THIS_ D3DVIEWPORT9* pViewport) PURE;
-    STDMETHOD(SetMaterial)(THIS_ CONST D3DMATERIAL9* pMaterial) PURE;
+    STDMETHOD(SetMaterial)(THIS_ const D3DMATERIAL9 *material) PURE;
     STDMETHOD(GetMaterial)(THIS_ D3DMATERIAL9* pMaterial) PURE;
-    STDMETHOD(SetLight)(THIS_ DWORD Index, CONST D3DLIGHT9*) PURE;
+    STDMETHOD(SetLight)(THIS_ DWORD index, const D3DLIGHT9 *light) PURE;
     STDMETHOD(GetLight)(THIS_ DWORD Index, D3DLIGHT9*) PURE;
     STDMETHOD(LightEnable)(THIS_ DWORD Index, WINBOOL Enable) PURE;
     STDMETHOD(GetLightEnable)(THIS_ DWORD Index, WINBOOL* pEnable) PURE;
-    STDMETHOD(SetClipPlane)(THIS_ DWORD Index, CONST float* pPlane) PURE;
+    STDMETHOD(SetClipPlane)(THIS_ DWORD index, const float *plane) PURE;
     STDMETHOD(GetClipPlane)(THIS_ DWORD Index, float* pPlane) PURE;
     STDMETHOD(SetRenderState)(THIS_ D3DRENDERSTATETYPE State, DWORD Value) PURE;
     STDMETHOD(GetRenderState)(THIS_ D3DRENDERSTATETYPE State, DWORD* pValue) PURE;
     STDMETHOD(CreateStateBlock)(THIS_ D3DSTATEBLOCKTYPE Type, IDirect3DStateBlock9** ppSB) PURE;
     STDMETHOD(BeginStateBlock)(THIS) PURE;
     STDMETHOD(EndStateBlock)(THIS_ IDirect3DStateBlock9** ppSB) PURE;
-    STDMETHOD(SetClipStatus)(THIS_ CONST D3DCLIPSTATUS9* pClipStatus) PURE;
+    STDMETHOD(SetClipStatus)(THIS_ const D3DCLIPSTATUS9 *clip_status) PURE;
     STDMETHOD(GetClipStatus)(THIS_ D3DCLIPSTATUS9* pClipStatus) PURE;
     STDMETHOD(GetTexture)(THIS_ DWORD Stage, IDirect3DBaseTexture9** ppTexture) PURE;
     STDMETHOD(SetTexture)(THIS_ DWORD Stage, IDirect3DBaseTexture9* pTexture) PURE;
@@ -1735,11 +1750,11 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(GetSamplerState)(THIS_ DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD* pValue) PURE;
     STDMETHOD(SetSamplerState)(THIS_ DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD Value) PURE;
     STDMETHOD(ValidateDevice)(THIS_ DWORD* pNumPasses) PURE;
-    STDMETHOD(SetPaletteEntries)(THIS_ UINT PaletteNumber, CONST PALETTEENTRY* pEntries) PURE;
+    STDMETHOD(SetPaletteEntries)(THIS_ UINT palette_idx, const PALETTEENTRY *entries) PURE;
     STDMETHOD(GetPaletteEntries)(THIS_ UINT PaletteNumber,PALETTEENTRY* pEntries) PURE;
     STDMETHOD(SetCurrentTexturePalette)(THIS_ UINT PaletteNumber) PURE;
     STDMETHOD(GetCurrentTexturePalette)(THIS_ UINT *PaletteNumber) PURE;
-    STDMETHOD(SetScissorRect)(THIS_ CONST RECT* pRect) PURE;
+    STDMETHOD(SetScissorRect)(THIS_ const RECT *rect) PURE;
     STDMETHOD(GetScissorRect)(THIS_ RECT* pRect) PURE;
     STDMETHOD(SetSoftwareVertexProcessing)(THIS_ WINBOOL bSoftware) PURE;
     STDMETHOD_(WINBOOL, GetSoftwareVertexProcessing)(THIS) PURE;
@@ -1747,22 +1762,25 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD_(float, GetNPatchMode)(THIS) PURE;
     STDMETHOD(DrawPrimitive)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT StartVertex, UINT PrimitiveCount) PURE;
     STDMETHOD(DrawIndexedPrimitive)(THIS_ D3DPRIMITIVETYPE, INT BaseVertexIndex, UINT MinVertexIndex, UINT NumVertices, UINT startIndex, UINT primCount) PURE;
-    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT PrimitiveCount, CONST void* pVertexStreamZeroData, UINT VertexStreamZeroStride) PURE;
-    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE PrimitiveType, UINT MinVertexIndex, UINT NumVertices, UINT PrimitiveCount, CONST void* pIndexData, D3DFORMAT IndexDataFormat, CONST void* pVertexStreamZeroData, UINT VertexStreamZeroStride) PURE;
+    STDMETHOD(DrawPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type,
+            UINT primitive_count, const void *data, UINT stride) PURE;
+    STDMETHOD(DrawIndexedPrimitiveUP)(THIS_ D3DPRIMITIVETYPE primitive_type, UINT min_vertex_idx, UINT vertex_count,
+            UINT primitive_count, const void *index_data, D3DFORMAT index_format, const void *data, UINT stride) PURE;
     STDMETHOD(ProcessVertices)(THIS_ UINT SrcStartIndex, UINT DestIndex, UINT VertexCount, IDirect3DVertexBuffer9* pDestBuffer, IDirect3DVertexDeclaration9* pVertexDecl, DWORD Flags) PURE;
-    STDMETHOD(CreateVertexDeclaration)(THIS_ CONST D3DVERTEXELEMENT9* pVertexElements, IDirect3DVertexDeclaration9** ppDecl) PURE;
+    STDMETHOD(CreateVertexDeclaration)(THIS_ const D3DVERTEXELEMENT9 *elements,
+            IDirect3DVertexDeclaration9 **declaration) PURE;
     STDMETHOD(SetVertexDeclaration)(THIS_ IDirect3DVertexDeclaration9* pDecl) PURE;
     STDMETHOD(GetVertexDeclaration)(THIS_ IDirect3DVertexDeclaration9** ppDecl) PURE;
     STDMETHOD(SetFVF)(THIS_ DWORD FVF) PURE;
     STDMETHOD(GetFVF)(THIS_ DWORD* pFVF) PURE;
-    STDMETHOD(CreateVertexShader)(THIS_ CONST DWORD* pFunction, IDirect3DVertexShader9** ppShader) PURE;
+    STDMETHOD(CreateVertexShader)(THIS_ const DWORD *byte_core, IDirect3DVertexShader9 **shader) PURE;
     STDMETHOD(SetVertexShader)(THIS_ IDirect3DVertexShader9* pShader) PURE;
     STDMETHOD(GetVertexShader)(THIS_ IDirect3DVertexShader9** ppShader) PURE;
-    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT StartRegister, CONST float* pConstantData, UINT Vector4fCount) PURE;
+    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT reg_idx, const float *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantF)(THIS_ UINT StartRegister, float* pConstantData, UINT Vector4fCount) PURE;
-    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT StartRegister, CONST int* pConstantData, UINT Vector4iCount) PURE;
+    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT reg_idx, const int *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantI)(THIS_ UINT StartRegister, int* pConstantData, UINT Vector4iCount) PURE;
-    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT StartRegister, CONST WINBOOL* pConstantData, UINT  BoolCount) PURE;
+    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT reg_idx, const WINBOOL *data, UINT count) PURE;
     STDMETHOD(GetVertexShaderConstantB)(THIS_ UINT StartRegister, WINBOOL* pConstantData, UINT BoolCount) PURE;
     STDMETHOD(SetStreamSource)(THIS_ UINT StreamNumber, IDirect3DVertexBuffer9* pStreamData, UINT OffsetInBytes, UINT Stride) PURE;
     STDMETHOD(GetStreamSource)(THIS_ UINT StreamNumber, IDirect3DVertexBuffer9** ppStreamData, UINT* OffsetInBytes, UINT* pStride) PURE;
@@ -1770,17 +1788,17 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(GetStreamSourceFreq)(THIS_ UINT StreamNumber, UINT* Divider) PURE;
     STDMETHOD(SetIndices)(THIS_ IDirect3DIndexBuffer9* pIndexData) PURE;
     STDMETHOD(GetIndices)(THIS_ IDirect3DIndexBuffer9** ppIndexData) PURE;
-    STDMETHOD(CreatePixelShader)(THIS_ CONST DWORD* pFunction, IDirect3DPixelShader9** ppShader) PURE;
+    STDMETHOD(CreatePixelShader)(THIS_ const DWORD *byte_code, IDirect3DPixelShader9 **shader) PURE;
     STDMETHOD(SetPixelShader)(THIS_ IDirect3DPixelShader9* pShader) PURE;
     STDMETHOD(GetPixelShader)(THIS_ IDirect3DPixelShader9** ppShader) PURE;
-    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT StartRegister, CONST float* pConstantData, UINT Vector4fCount) PURE;
+    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT reg_idx, const float *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantF)(THIS_ UINT StartRegister, float* pConstantData, UINT Vector4fCount) PURE;
-    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT StartRegister, CONST int* pConstantData, UINT Vector4iCount) PURE;
+    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT reg_idx, const int *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantI)(THIS_ UINT StartRegister, int* pConstantData, UINT Vector4iCount) PURE;
-    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT StartRegister, CONST WINBOOL* pConstantData, UINT  BoolCount) PURE;
+    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT reg_idx, const WINBOOL *data, UINT count) PURE;
     STDMETHOD(GetPixelShaderConstantB)(THIS_ UINT StartRegister, WINBOOL* pConstantData, UINT BoolCount) PURE;
-    STDMETHOD(DrawRectPatch)(THIS_ UINT Handle, CONST float* pNumSegs, CONST D3DRECTPATCH_INFO* pRectPatchInfo) PURE;
-    STDMETHOD(DrawTriPatch)(THIS_ UINT Handle, CONST float* pNumSegs, CONST D3DTRIPATCH_INFO* pTriPatchInfo) PURE;
+    STDMETHOD(DrawRectPatch)(THIS_ UINT handle, const float *segment_count, const D3DRECTPATCH_INFO *patch_info) PURE;
+    STDMETHOD(DrawTriPatch)(THIS_ UINT handle, const float *segment_count, const D3DTRIPATCH_INFO *patch_info) PURE;
     STDMETHOD(DeletePatch)(THIS_ UINT Handle) PURE;
     STDMETHOD(CreateQuery)(THIS_ D3DQUERYTYPE Type, IDirect3DQuery9** ppQuery) PURE;
     /* IDirect3DDevice9Ex methods */
@@ -1788,7 +1806,8 @@ DECLARE_INTERFACE_(IDirect3DDevice9Ex,IDirect3DDevice9)
     STDMETHOD(ComposeRects)(THIS_ IDirect3DSurface9 *src_surface, IDirect3DSurface9 *dst_surface,
             IDirect3DVertexBuffer9 *src_descs, UINT rect_count, IDirect3DVertexBuffer9 *dst_descs,
             D3DCOMPOSERECTSOP operation, INT offset_x, INT offset_y) PURE;
-    STDMETHOD(PresentEx)(THIS_ CONST RECT *pSourceRect, CONST RECT *pDestRect, HWND hDestWindowOverride, CONST RGNDATA *pDirtyRegion, DWORD dwFlags) PURE;
+    STDMETHOD(PresentEx)(THIS_ const RECT *src_rect, const RECT *dst_rect,
+            HWND dst_window_override, const RGNDATA *dirty_region, DWORD flags) PURE;
     STDMETHOD(GetGPUThreadPriority)(THIS_ INT *pPriority) PURE;
     STDMETHOD(SetGPUThreadPriority)(THIS_ INT Priority) PURE;
     STDMETHOD(WaitForVBlank)(THIS_ UINT iSwapChain) PURE;
diff --git a/mingw-w64-headers/direct-x/include/d3drmobj.h b/mingw-w64-headers/direct-x/include/d3drmobj.h
index 159827e..810aa3d 100644
--- a/mingw-w64-headers/direct-x/include/d3drmobj.h
+++ b/mingw-w64-headers/direct-x/include/d3drmobj.h
@@ -1099,7 +1099,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame,IDirect3DRMVisual)
     /*** IDirect3DRMFrame methods ***/
     STDMETHOD(AddChild)(THIS_ IDirect3DRMFrame *child) PURE;
     STDMETHOD(AddLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK, VOID *arg) PURE;
+    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK cb, void *ctx) PURE;
     STDMETHOD(AddTransform)(THIS_ D3DRMCOMBINETYPE, D3DRMMATRIX4D) PURE;
     STDMETHOD(AddTranslation)(THIS_ D3DRMCOMBINETYPE, D3DVALUE x, D3DVALUE y, D3DVALUE z) PURE;
     STDMETHOD(AddScale)(THIS_ D3DRMCOMBINETYPE, D3DVALUE sx, D3DVALUE sy, D3DVALUE sz) PURE;
@@ -1128,7 +1128,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame,IDirect3DRMVisual)
     STDMETHOD(Move)(THIS_ D3DVALUE delta) PURE;
     STDMETHOD(DeleteChild)(THIS_ IDirect3DRMFrame *child) PURE;
     STDMETHOD(DeleteLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK, VOID *arg) PURE;
+    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK cb, void *ctx) PURE;
     STDMETHOD(DeleteVisual)(THIS_ IDirect3DRMVisual *visual) PURE;
     STDMETHOD_(D3DCOLOR, GetSceneBackground)(THIS) PURE;
     STDMETHOD(GetSceneBackgroundDepth)(THIS_ IDirectDrawSurface **surface) PURE;
@@ -1332,7 +1332,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame2,IDirect3DRMFrame)
     /*** IDirect3DRMFrame methods ***/
     STDMETHOD(AddChild)(THIS_ IDirect3DRMFrame *child) PURE;
     STDMETHOD(AddLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK, VOID *arg) PURE;
+    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK cb, void *ctx) PURE;
     STDMETHOD(AddTransform)(THIS_ D3DRMCOMBINETYPE, D3DRMMATRIX4D) PURE;
     STDMETHOD(AddTranslation)(THIS_ D3DRMCOMBINETYPE, D3DVALUE x, D3DVALUE y, D3DVALUE z) PURE;
     STDMETHOD(AddScale)(THIS_ D3DRMCOMBINETYPE, D3DVALUE sx, D3DVALUE sy, D3DVALUE sz) PURE;
@@ -1361,7 +1361,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame2,IDirect3DRMFrame)
     STDMETHOD(Move)(THIS_ D3DVALUE delta) PURE;
     STDMETHOD(DeleteChild)(THIS_ IDirect3DRMFrame *child) PURE;
     STDMETHOD(DeleteLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK, VOID *arg) PURE;
+    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAMEMOVECALLBACK cb, void *ctx) PURE;
     STDMETHOD(DeleteVisual)(THIS_ IDirect3DRMVisual *visual) PURE;
     STDMETHOD_(D3DCOLOR, GetSceneBackground)(THIS) PURE;
     STDMETHOD(GetSceneBackgroundDepth)(THIS_ IDirectDrawSurface **surface) PURE;
@@ -1393,7 +1393,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame2,IDirect3DRMFrame)
     STDMETHOD(SetZbufferMode)(THIS_ D3DRMZBUFFERMODE) PURE;
     STDMETHOD(Transform)(THIS_ D3DVECTOR *d, D3DVECTOR *s) PURE;
     /*** IDirect3DRMFrame2 methods ***/
-    STDMETHOD(AddMoveCallback2)(THIS_ D3DRMFRAMEMOVECALLBACK, VOID *arg, DWORD flags) PURE;
+    STDMETHOD(AddMoveCallback2)(THIS_ D3DRMFRAMEMOVECALLBACK cb, void *ctx, DWORD flags) PURE;
     STDMETHOD(GetBox)(THIS_ D3DRMBOX *box) PURE;
     STDMETHOD_(WINBOOL, GetBoxEnable)(THIS) PURE;
     STDMETHOD(GetAxes)(THIS_ D3DVECTOR *dir, D3DVECTOR *up);
@@ -1614,7 +1614,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame3,IDirect3DRMVisual)
     /*** IDirect3DRMFrame3 methods ***/
     STDMETHOD(AddChild)(THIS_ IDirect3DRMFrame3 *child) PURE;
     STDMETHOD(AddLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAME3MOVECALLBACK, VOID *arg, DWORD flags) PURE;
+    STDMETHOD(AddMoveCallback)(THIS_ D3DRMFRAME3MOVECALLBACK cb, void *ctx, DWORD flags) PURE;
     STDMETHOD(AddTransform)(THIS_ D3DRMCOMBINETYPE, D3DRMMATRIX4D) PURE;
     STDMETHOD(AddTranslation)(THIS_ D3DRMCOMBINETYPE, D3DVALUE x, D3DVALUE y, D3DVALUE z) PURE;
     STDMETHOD(AddScale)(THIS_ D3DRMCOMBINETYPE, D3DVALUE sx, D3DVALUE sy, D3DVALUE sz) PURE;
@@ -1642,7 +1642,7 @@ DECLARE_INTERFACE_(IDirect3DRMFrame3,IDirect3DRMVisual)
     STDMETHOD(Move)(THIS_ D3DVALUE delta) PURE;
     STDMETHOD(DeleteChild)(THIS_ IDirect3DRMFrame3 *child) PURE;
     STDMETHOD(DeleteLight)(THIS_ struct IDirect3DRMLight *light) PURE;
-    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAME3MOVECALLBACK, VOID *arg) PURE;
+    STDMETHOD(DeleteMoveCallback)(THIS_ D3DRMFRAME3MOVECALLBACK cb, void *ctx) PURE;
     STDMETHOD(DeleteVisual)(THIS_ IUnknown *visual) PURE;
     STDMETHOD_(D3DCOLOR, GetSceneBackground)(THIS) PURE;
     STDMETHOD(GetSceneBackgroundDepth)(THIS_ IDirectDrawSurface **surface) PURE;
diff --git a/mingw-w64-headers/direct-x/include/d3dx9anim.h b/mingw-w64-headers/direct-x/include/d3dx9anim.h
index 4df6904..303286f 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9anim.h
+++ b/mingw-w64-headers/direct-x/include/d3dx9anim.h
@@ -388,11 +388,12 @@ HRESULT WINAPI D3DXSaveMeshHierarchyToFileW(const WCHAR *filename, DWORD format,
         ID3DXSaveUserData *user_data_saver);
 #define D3DXSaveMeshHierarchyToFile __MINGW_NAME_AW(D3DXSaveMeshHierarchyToFile)
 HRESULT WINAPI D3DXFrameDestroy(D3DXFRAME *frame_root, ID3DXAllocateHierarchy *alloc);
-HRESULT WINAPI D3DXFrameAppendChild(LPD3DXFRAME, CONST D3DXFRAME*);
+HRESULT WINAPI D3DXFrameAppendChild(D3DXFRAME *parent, const D3DXFRAME *child);
 D3DXFRAME * WINAPI D3DXFrameFind(const D3DXFRAME *root, const char *name);
 HRESULT WINAPI D3DXFrameRegisterNamedMatrices(D3DXFRAME *frame_root, ID3DXAnimationController *animation_controller);
-UINT WINAPI D3DXFrameNumNamedMatrices(CONST D3DXFRAME *frame_root);
-HRESULT WINAPI D3DXFrameCalculateBoundingSphere(CONST D3DXFRAME*, LPD3DXVECTOR3, FLOAT*);
+UINT WINAPI D3DXFrameNumNamedMatrices(const D3DXFRAME *frame_root);
+HRESULT WINAPI D3DXFrameCalculateBoundingSphere(const D3DXFRAME *frame_root, D3DXVECTOR3 *center,
+        FLOAT *radius);
 HRESULT WINAPI D3DXCreateKeyframedAnimationSet(const char *name, double ticks_per_second,
         D3DXPLAYBACK_TYPE playback_type, UINT animation_count, UINT callback_key_count,
         const D3DXKEY_CALLBACK *callback_keys, ID3DXKeyframedAnimationSet **animation_set);
diff --git a/mingw-w64-headers/direct-x/include/d3dx9core.h b/mingw-w64-headers/direct-x/include/d3dx9core.h
index 477642f..c59ad20 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9core.h
+++ b/mingw-w64-headers/direct-x/include/d3dx9core.h
@@ -221,9 +221,9 @@ DECLARE_INTERFACE_(ID3DXLine, IUnknown)
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9 **device) PURE;
 
     STDMETHOD(Begin)(THIS) PURE;
-    STDMETHOD(Draw)(THIS_ CONST D3DXVECTOR2 *vertexlist, DWORD vertexlistcount, D3DCOLOR color) PURE;
-    STDMETHOD(DrawTransform)(THIS_ CONST D3DXVECTOR3 *vertexlist, DWORD vertexlistcount,
-                             CONST D3DXMATRIX *transform, D3DCOLOR color) PURE;
+    STDMETHOD(Draw)(THIS_ const D3DXVECTOR2 *vertexlist, DWORD vertexlistcount, D3DCOLOR color) PURE;
+    STDMETHOD(DrawTransform)(THIS_ const D3DXVECTOR3 *vertexlist, DWORD vertexlistcount,
+            const D3DXMATRIX *transform, D3DCOLOR color) PURE;
     STDMETHOD(SetPattern)(THIS_ DWORD pattern) PURE;
     STDMETHOD_(DWORD, GetPattern)(THIS) PURE;
     STDMETHOD(SetPatternScale)(THIS_ FLOAT scale) PURE;
@@ -422,9 +422,9 @@ DECLARE_INTERFACE_(ID3DXSprite, IUnknown)
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9 **device) PURE;
 
     STDMETHOD(GetTransform)(THIS_ D3DXMATRIX *transform) PURE;
-    STDMETHOD(SetTransform)(THIS_ CONST D3DXMATRIX *transform) PURE;
-    STDMETHOD(SetWorldViewRH)(THIS_ CONST D3DXMATRIX *world, CONST D3DXMATRIX *view) PURE;
-    STDMETHOD(SetWorldViewLH)(THIS_ CONST D3DXMATRIX *world, CONST D3DXMATRIX *view) PURE;
+    STDMETHOD(SetTransform)(THIS_ const D3DXMATRIX *transform) PURE;
+    STDMETHOD(SetWorldViewRH)(THIS_ const D3DXMATRIX *world, const D3DXMATRIX *view) PURE;
+    STDMETHOD(SetWorldViewLH)(THIS_ const D3DXMATRIX *world, const D3DXMATRIX *view) PURE;
 
     STDMETHOD(Begin)(THIS_ DWORD flags) PURE;
     STDMETHOD(Draw)(THIS_ struct IDirect3DTexture9 *texture, const RECT *rect,
diff --git a/mingw-w64-headers/direct-x/include/d3dx9effect.h b/mingw-w64-headers/direct-x/include/d3dx9effect.h
index ceca13b..7056830 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9effect.h
+++ b/mingw-w64-headers/direct-x/include/d3dx9effect.h
@@ -67,8 +67,8 @@ typedef struct _D3DXPASS_DESC
 {
     const char *Name;
     UINT Annotations;
-    CONST DWORD *pVertexShaderFunction;
-    CONST DWORD *pPixelShaderFunction;
+    const DWORD *pVertexShaderFunction;
+    const DWORD *pPixelShaderFunction;
 } D3DXPASS_DESC;
 
 typedef struct _D3DXFUNCTION_DESC
@@ -127,31 +127,31 @@ DECLARE_INTERFACE_(ID3DXBaseEffect, IUnknown)
     STDMETHOD(GetValue)(THIS_ D3DXHANDLE parameter, void *data, UINT bytes) PURE;
     STDMETHOD(SetBool)(THIS_ D3DXHANDLE parameter, WINBOOL b) PURE;
     STDMETHOD(GetBool)(THIS_ D3DXHANDLE parameter, WINBOOL* b) PURE;
-    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, CONST WINBOOL* b, UINT count) PURE;
+    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, const WINBOOL *b, UINT count) PURE;
     STDMETHOD(GetBoolArray)(THIS_ D3DXHANDLE parameter, WINBOOL* b, UINT count) PURE;
     STDMETHOD(SetInt)(THIS_ D3DXHANDLE parameter, INT n) PURE;
     STDMETHOD(GetInt)(THIS_ D3DXHANDLE parameter, INT* n) PURE;
-    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, CONST INT* n, UINT count) PURE;
+    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, const INT *n, UINT count) PURE;
     STDMETHOD(GetIntArray)(THIS_ D3DXHANDLE parameter, INT* n, UINT count) PURE;
     STDMETHOD(SetFloat)(THIS_ D3DXHANDLE parameter, FLOAT f) PURE;
     STDMETHOD(GetFloat)(THIS_ D3DXHANDLE parameter, FLOAT* f) PURE;
-    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, CONST FLOAT* f, UINT count) PURE;
+    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, const FLOAT *f, UINT count) PURE;
     STDMETHOD(GetFloatArray)(THIS_ D3DXHANDLE parameter, FLOAT* f, UINT count) PURE;
-    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector) PURE;
+    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector) PURE;
     STDMETHOD(GetVector)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector) PURE;
-    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector, UINT count) PURE;
+    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector, UINT count) PURE;
     STDMETHOD(GetVectorArray)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector, UINT count) PURE;
-    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrix)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrixTranspose)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
     STDMETHOD(SetString)(THIS_ D3DXHANDLE parameter, const char *string) PURE;
     STDMETHOD(GetString)(THIS_ D3DXHANDLE parameter, const char **string) PURE;
@@ -176,9 +176,9 @@ DECLARE_INTERFACE_(ID3DXEffectStateManager, IUnknown)
     STDMETHOD_(ULONG, AddRef)(THIS) PURE;
     STDMETHOD_(ULONG, Release)(THIS) PURE;
     /*** ID3DXEffectStateManager methods ***/
-    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE state, CONST D3DMATRIX* matrix) PURE;
-    STDMETHOD(SetMaterial)(THIS_ CONST D3DMATERIAL9* material) PURE;
-    STDMETHOD(SetLight)(THIS_ DWORD index, CONST D3DLIGHT9* light) PURE;
+    STDMETHOD(SetTransform)(THIS_ D3DTRANSFORMSTATETYPE state, const D3DMATRIX *matrix) PURE;
+    STDMETHOD(SetMaterial)(THIS_ const D3DMATERIAL9 *material) PURE;
+    STDMETHOD(SetLight)(THIS_ DWORD index, const D3DLIGHT9 *light) PURE;
     STDMETHOD(LightEnable)(THIS_ DWORD index, WINBOOL enable) PURE;
     STDMETHOD(SetRenderState)(THIS_ D3DRENDERSTATETYPE state, DWORD value) PURE;
     STDMETHOD(SetTexture)(THIS_ DWORD stage, struct IDirect3DBaseTexture9 *texture) PURE;
@@ -187,13 +187,13 @@ DECLARE_INTERFACE_(ID3DXEffectStateManager, IUnknown)
     STDMETHOD(SetNPatchMode)(THIS_ FLOAT num_segments) PURE;
     STDMETHOD(SetFVF)(THIS_ DWORD format) PURE;
     STDMETHOD(SetVertexShader)(THIS_ struct IDirect3DVertexShader9 *shader) PURE;
-    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT register_index, CONST FLOAT* constant_data, UINT register_count) PURE;
-    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT register_index, CONST INT* constant_data, UINT register_count) PURE;
-    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT register_index, CONST WINBOOL* constant_data, UINT register_count) PURE;
+    STDMETHOD(SetVertexShaderConstantF)(THIS_ UINT register_index, const FLOAT *constant_data, UINT register_count) PURE;
+    STDMETHOD(SetVertexShaderConstantI)(THIS_ UINT register_index, const INT *constant_data, UINT register_count) PURE;
+    STDMETHOD(SetVertexShaderConstantB)(THIS_ UINT register_index, const WINBOOL *constant_data, UINT register_count) PURE;
     STDMETHOD(SetPixelShader)(THIS_ struct IDirect3DPixelShader9 *shader) PURE;
-    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT register_index, CONST FLOAT* constant_data, UINT register_count) PURE;
-    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT register_index, CONST INT * constant_data, UINT register_count) PURE;
-    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT register_index, CONST WINBOOL* constant_data, UINT register_count) PURE;
+    STDMETHOD(SetPixelShaderConstantF)(THIS_ UINT register_index, const FLOAT *constant_data, UINT register_count) PURE;
+    STDMETHOD(SetPixelShaderConstantI)(THIS_ UINT register_index, const INT *constant_data, UINT register_count) PURE;
+    STDMETHOD(SetPixelShaderConstantB)(THIS_ UINT register_index, const WINBOOL *constant_data, UINT register_count) PURE;
 };
 #undef INTERFACE
 
@@ -231,31 +231,31 @@ DECLARE_INTERFACE_(ID3DXEffect, ID3DXBaseEffect)
     STDMETHOD(GetValue)(THIS_ D3DXHANDLE parameter, void *data, UINT bytes) PURE;
     STDMETHOD(SetBool)(THIS_ D3DXHANDLE parameter, WINBOOL b) PURE;
     STDMETHOD(GetBool)(THIS_ D3DXHANDLE parameter, WINBOOL* b) PURE;
-    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, CONST WINBOOL* b, UINT count) PURE;
+    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, const WINBOOL *b, UINT count) PURE;
     STDMETHOD(GetBoolArray)(THIS_ D3DXHANDLE parameter, WINBOOL* b, UINT count) PURE;
     STDMETHOD(SetInt)(THIS_ D3DXHANDLE parameter, INT n) PURE;
     STDMETHOD(GetInt)(THIS_ D3DXHANDLE parameter, INT* n) PURE;
-    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, CONST INT* n, UINT count) PURE;
+    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, const INT *n, UINT count) PURE;
     STDMETHOD(GetIntArray)(THIS_ D3DXHANDLE parameter, INT* n, UINT count) PURE;
     STDMETHOD(SetFloat)(THIS_ D3DXHANDLE parameter, FLOAT f) PURE;
     STDMETHOD(GetFloat)(THIS_ D3DXHANDLE parameter, FLOAT* f) PURE;
-    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, CONST FLOAT* f, UINT count) PURE;
+    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, const FLOAT *f, UINT count) PURE;
     STDMETHOD(GetFloatArray)(THIS_ D3DXHANDLE parameter, FLOAT* f, UINT count) PURE;
-    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector) PURE;
+    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector) PURE;
     STDMETHOD(GetVector)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector) PURE;
-    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector, UINT count) PURE;
+    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector, UINT count) PURE;
     STDMETHOD(GetVectorArray)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector, UINT count) PURE;
-    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrix)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrixTranspose)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
     STDMETHOD(SetString)(THIS_ D3DXHANDLE parameter, const char *string) PURE;
     STDMETHOD(GetString)(THIS_ D3DXHANDLE parameter, const char **string) PURE;
@@ -324,31 +324,31 @@ DECLARE_INTERFACE_(ID3DXEffectCompiler, ID3DXBaseEffect)
     STDMETHOD(GetValue)(THIS_ D3DXHANDLE parameter, void *data, UINT bytes) PURE;
     STDMETHOD(SetBool)(THIS_ D3DXHANDLE parameter, WINBOOL b) PURE;
     STDMETHOD(GetBool)(THIS_ D3DXHANDLE parameter, WINBOOL* b) PURE;
-    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, CONST WINBOOL* b, UINT count) PURE;
+    STDMETHOD(SetBoolArray)(THIS_ D3DXHANDLE parameter, const WINBOOL *b, UINT count) PURE;
     STDMETHOD(GetBoolArray)(THIS_ D3DXHANDLE parameter, WINBOOL* b, UINT count) PURE;
     STDMETHOD(SetInt)(THIS_ D3DXHANDLE parameter, INT n) PURE;
     STDMETHOD(GetInt)(THIS_ D3DXHANDLE parameter, INT* n) PURE;
-    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, CONST INT* n, UINT count) PURE;
+    STDMETHOD(SetIntArray)(THIS_ D3DXHANDLE parameter, const INT *n, UINT count) PURE;
     STDMETHOD(GetIntArray)(THIS_ D3DXHANDLE parameter, INT* n, UINT count) PURE;
     STDMETHOD(SetFloat)(THIS_ D3DXHANDLE parameter, FLOAT f) PURE;
     STDMETHOD(GetFloat)(THIS_ D3DXHANDLE parameter, FLOAT* f) PURE;
-    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, CONST FLOAT* f, UINT count) PURE;
+    STDMETHOD(SetFloatArray)(THIS_ D3DXHANDLE parameter, const FLOAT *f, UINT count) PURE;
     STDMETHOD(GetFloatArray)(THIS_ D3DXHANDLE parameter, FLOAT* f, UINT count) PURE;
-    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector) PURE;
+    STDMETHOD(SetVector)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector) PURE;
     STDMETHOD(GetVector)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector) PURE;
-    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, CONST D3DXVECTOR4* vector, UINT count) PURE;
+    STDMETHOD(SetVectorArray)(THIS_ D3DXHANDLE parameter, const D3DXVECTOR4 *vector, UINT count) PURE;
     STDMETHOD(GetVectorArray)(THIS_ D3DXHANDLE parameter, D3DXVECTOR4* vector, UINT count) PURE;
-    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrix)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrix)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixPointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix) PURE;
+    STDMETHOD(SetMatrixTranspose)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix) PURE;
     STDMETHOD(GetMatrixTranspose)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix) PURE;
-    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX* matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX *matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposeArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX* matrix, UINT count) PURE;
-    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, CONST D3DXMATRIX** matrix, UINT count) PURE;
+    STDMETHOD(SetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, const D3DXMATRIX **matrix, UINT count) PURE;
     STDMETHOD(GetMatrixTransposePointerArray)(THIS_ D3DXHANDLE parameter, D3DXMATRIX** matrix, UINT count) PURE;
     STDMETHOD(SetString)(THIS_ D3DXHANDLE parameter, const char *string) PURE;
     STDMETHOD(GetString)(THIS_ D3DXHANDLE parameter, const char **string) PURE;
diff --git a/mingw-w64-headers/direct-x/include/d3dx9math.inl b/mingw-w64-headers/direct-x/include/d3dx9math.inl
index 0ba53f0..4d8e97d 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9math.inl
+++ b/mingw-w64-headers/direct-x/include/d3dx9math.inl
@@ -27,7 +27,7 @@ inline D3DXVECTOR2::D3DXVECTOR2()
 {
 }
 
-inline D3DXVECTOR2::D3DXVECTOR2(CONST FLOAT *pf)
+inline D3DXVECTOR2::D3DXVECTOR2(const FLOAT *pf)
 {
     if(!pf) return;
     x = pf[0];
@@ -45,19 +45,19 @@ inline D3DXVECTOR2::operator FLOAT* ()
     return (FLOAT*)&x;
 }
 
-inline D3DXVECTOR2::operator CONST FLOAT* () const
+inline D3DXVECTOR2::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&x;
+    return (const FLOAT*)&x;
 }
 
-inline D3DXVECTOR2& D3DXVECTOR2::operator += (CONST D3DXVECTOR2& v)
+inline D3DXVECTOR2& D3DXVECTOR2::operator += (const D3DXVECTOR2& v)
 {
     x += v.x;
     y += v.y;
     return *this;
 }
 
-inline D3DXVECTOR2& D3DXVECTOR2::operator -= (CONST D3DXVECTOR2& v)
+inline D3DXVECTOR2& D3DXVECTOR2::operator -= (const D3DXVECTOR2& v)
 {
     x -= v.x;
     y -= v.y;
@@ -88,12 +88,12 @@ inline D3DXVECTOR2 D3DXVECTOR2::operator - () const
     return D3DXVECTOR2(-x, -y);
 }
 
-inline D3DXVECTOR2 D3DXVECTOR2::operator + (CONST D3DXVECTOR2& v) const
+inline D3DXVECTOR2 D3DXVECTOR2::operator + (const D3DXVECTOR2& v) const
 {
     return D3DXVECTOR2(x + v.x, y + v.y);
 }
 
-inline D3DXVECTOR2 D3DXVECTOR2::operator - (CONST D3DXVECTOR2& v) const
+inline D3DXVECTOR2 D3DXVECTOR2::operator - (const D3DXVECTOR2& v) const
 {
     return D3DXVECTOR2(x - v.x, y - v.y);
 }
@@ -108,17 +108,17 @@ inline D3DXVECTOR2 D3DXVECTOR2::operator / (FLOAT f) const
     return D3DXVECTOR2(x / f, y / f);
 }
 
-inline D3DXVECTOR2 operator * (FLOAT f, CONST D3DXVECTOR2& v)
+inline D3DXVECTOR2 operator * (FLOAT f, const D3DXVECTOR2& v)
 {
     return D3DXVECTOR2(f * v.x, f * v.y);
 }
 
-inline WINBOOL D3DXVECTOR2::operator == (CONST D3DXVECTOR2& v) const
+inline WINBOOL D3DXVECTOR2::operator == (const D3DXVECTOR2& v) const
 {
     return x == v.x && y == v.y;
 }
 
-inline WINBOOL D3DXVECTOR2::operator != (CONST D3DXVECTOR2& v) const
+inline WINBOOL D3DXVECTOR2::operator != (const D3DXVECTOR2& v) const
 {
     return x != v.x || y != v.y;
 }
@@ -127,7 +127,7 @@ inline D3DXVECTOR3::D3DXVECTOR3()
 {
 }
 
-inline D3DXVECTOR3::D3DXVECTOR3(CONST FLOAT *pf)
+inline D3DXVECTOR3::D3DXVECTOR3(const FLOAT *pf)
 {
     if(!pf) return;
     x = pf[0];
@@ -135,7 +135,7 @@ inline D3DXVECTOR3::D3DXVECTOR3(CONST FLOAT *pf)
     z = pf[2];
 }
 
-inline D3DXVECTOR3::D3DXVECTOR3(CONST D3DVECTOR& v)
+inline D3DXVECTOR3::D3DXVECTOR3(const D3DVECTOR& v)
 {
     x = v.x;
     y = v.y;
@@ -154,12 +154,12 @@ inline D3DXVECTOR3::operator FLOAT* ()
     return (FLOAT*)&x;
 }
 
-inline D3DXVECTOR3::operator CONST FLOAT* () const
+inline D3DXVECTOR3::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&x;
+    return (const FLOAT*)&x;
 }
 
-inline D3DXVECTOR3& D3DXVECTOR3::operator += (CONST D3DXVECTOR3& v)
+inline D3DXVECTOR3& D3DXVECTOR3::operator += (const D3DXVECTOR3& v)
 {
     x += v.x;
     y += v.y;
@@ -167,7 +167,7 @@ inline D3DXVECTOR3& D3DXVECTOR3::operator += (CONST D3DXVECTOR3& v)
     return *this;
 }
 
-inline D3DXVECTOR3& D3DXVECTOR3::operator -= (CONST D3DXVECTOR3& v)
+inline D3DXVECTOR3& D3DXVECTOR3::operator -= (const D3DXVECTOR3& v)
 {
     x -= v.x;
     y -= v.y;
@@ -201,12 +201,12 @@ inline D3DXVECTOR3 D3DXVECTOR3::operator - () const
     return D3DXVECTOR3(-x, -y, -z);
 }
 
-inline D3DXVECTOR3 D3DXVECTOR3::operator + (CONST D3DXVECTOR3& v) const
+inline D3DXVECTOR3 D3DXVECTOR3::operator + (const D3DXVECTOR3& v) const
 {
     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);
 }
 
-inline D3DXVECTOR3 D3DXVECTOR3::operator - (CONST D3DXVECTOR3& v) const
+inline D3DXVECTOR3 D3DXVECTOR3::operator - (const D3DXVECTOR3& v) const
 {
     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);
 }
@@ -221,17 +221,17 @@ inline D3DXVECTOR3 D3DXVECTOR3::operator / (FLOAT f) const
     return D3DXVECTOR3(x / f, y / f, z / f);
 }
 
-inline D3DXVECTOR3 operator * (FLOAT f, CONST D3DXVECTOR3& v)
+inline D3DXVECTOR3 operator * (FLOAT f, const D3DXVECTOR3& v)
 {
     return D3DXVECTOR3(f * v.x, f * v.y, f * v.z);
 }
 
-inline WINBOOL D3DXVECTOR3::operator == (CONST D3DXVECTOR3& v) const
+inline WINBOOL D3DXVECTOR3::operator == (const D3DXVECTOR3& v) const
 {
     return x == v.x && y == v.y && z == v.z;
 }
 
-inline WINBOOL D3DXVECTOR3::operator != (CONST D3DXVECTOR3& v) const
+inline WINBOOL D3DXVECTOR3::operator != (const D3DXVECTOR3& v) const
 {
     return x != v.x || y != v.y || z != v.z;
 }
@@ -240,7 +240,7 @@ inline D3DXVECTOR4::D3DXVECTOR4()
 {
 }
 
-inline D3DXVECTOR4::D3DXVECTOR4(CONST FLOAT *pf)
+inline D3DXVECTOR4::D3DXVECTOR4(const FLOAT *pf)
 {
     if(!pf) return;
     x = pf[0];
@@ -262,12 +262,12 @@ inline D3DXVECTOR4::operator FLOAT* ()
     return (FLOAT*)&x;
 }
 
-inline D3DXVECTOR4::operator CONST FLOAT* () const
+inline D3DXVECTOR4::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&x;
+    return (const FLOAT*)&x;
 }
 
-inline D3DXVECTOR4& D3DXVECTOR4::operator += (CONST D3DXVECTOR4& v)
+inline D3DXVECTOR4& D3DXVECTOR4::operator += (const D3DXVECTOR4& v)
 {
     x += v.x;
     y += v.y;
@@ -276,7 +276,7 @@ inline D3DXVECTOR4& D3DXVECTOR4::operator += (CONST D3DXVECTOR4& v)
     return *this;
 }
 
-inline D3DXVECTOR4& D3DXVECTOR4::operator -= (CONST D3DXVECTOR4& v)
+inline D3DXVECTOR4& D3DXVECTOR4::operator -= (const D3DXVECTOR4& v)
 {
     x -= v.x;
     y -= v.y;
@@ -313,12 +313,12 @@ inline D3DXVECTOR4 D3DXVECTOR4::operator - () const
     return D3DXVECTOR4(-x, -y, -z, -w);
 }
 
-inline D3DXVECTOR4 D3DXVECTOR4::operator + (CONST D3DXVECTOR4& v) const
+inline D3DXVECTOR4 D3DXVECTOR4::operator + (const D3DXVECTOR4& v) const
 {
     return D3DXVECTOR4(x + v.x, y + v.y, z + v.z, w + v.w);
 }
 
-inline D3DXVECTOR4 D3DXVECTOR4::operator - (CONST D3DXVECTOR4& v) const
+inline D3DXVECTOR4 D3DXVECTOR4::operator - (const D3DXVECTOR4& v) const
 {
     return D3DXVECTOR4(x - v.x, y - v.y, z - v.z, w - v.w);
 }
@@ -333,17 +333,17 @@ inline D3DXVECTOR4 D3DXVECTOR4::operator / (FLOAT f) const
     return D3DXVECTOR4(x / f, y / f, z / f, w / f);
 }
 
-inline D3DXVECTOR4 operator * (FLOAT f, CONST D3DXVECTOR4& v)
+inline D3DXVECTOR4 operator * (FLOAT f, const D3DXVECTOR4& v)
 {
     return D3DXVECTOR4(f * v.x, f * v.y, f * v.z, f * v.w);
 }
 
-inline WINBOOL D3DXVECTOR4::operator == (CONST D3DXVECTOR4& v) const
+inline WINBOOL D3DXVECTOR4::operator == (const D3DXVECTOR4& v) const
 {
     return x == v.x && y == v.y && z == v.z && w == v.w;
 }
 
-inline WINBOOL D3DXVECTOR4::operator != (CONST D3DXVECTOR4& v) const
+inline WINBOOL D3DXVECTOR4::operator != (const D3DXVECTOR4& v) const
 {
     return x != v.x || y != v.y || z != v.z || w != v.w;
 }
@@ -352,13 +352,13 @@ inline D3DXMATRIX::D3DXMATRIX()
 {
 }
 
-inline D3DXMATRIX::D3DXMATRIX(CONST FLOAT *pf)
+inline D3DXMATRIX::D3DXMATRIX(const FLOAT *pf)
 {
     if(!pf) return;
     memcpy(&_11, pf, sizeof(D3DXMATRIX));
 }
 
-inline D3DXMATRIX::D3DXMATRIX(CONST D3DMATRIX& mat)
+inline D3DXMATRIX::D3DXMATRIX(const D3DMATRIX& mat)
 {
     memcpy(&_11, &mat, sizeof(D3DXMATRIX));
 }
@@ -389,18 +389,18 @@ inline D3DXMATRIX::operator FLOAT* ()
     return (FLOAT*)&_11;
 }
 
-inline D3DXMATRIX::operator CONST FLOAT* () const
+inline D3DXMATRIX::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&_11;
+    return (const FLOAT*)&_11;
 }
 
-inline D3DXMATRIX& D3DXMATRIX::operator *= (CONST D3DXMATRIX& mat)
+inline D3DXMATRIX& D3DXMATRIX::operator *= (const D3DXMATRIX& mat)
 {
     D3DXMatrixMultiply(this, this, &mat);
     return *this;
 }
 
-inline D3DXMATRIX& D3DXMATRIX::operator += (CONST D3DXMATRIX& mat)
+inline D3DXMATRIX& D3DXMATRIX::operator += (const D3DXMATRIX& mat)
 {
     _11 += mat._11; _12 += mat._12; _13 += mat._13; _14 += mat._14;
     _21 += mat._21; _22 += mat._22; _23 += mat._23; _24 += mat._24;
@@ -409,7 +409,7 @@ inline D3DXMATRIX& D3DXMATRIX::operator += (CONST D3DXMATRIX& mat)
     return *this;
 }
 
-inline D3DXMATRIX& D3DXMATRIX::operator -= (CONST D3DXMATRIX& mat)
+inline D3DXMATRIX& D3DXMATRIX::operator -= (const D3DXMATRIX& mat)
 {
     _11 -= mat._11; _12 -= mat._12; _13 -= mat._13; _14 -= mat._14;
     _21 -= mat._21; _22 -= mat._22; _23 -= mat._23; _24 -= mat._24;
@@ -450,14 +450,14 @@ inline D3DXMATRIX D3DXMATRIX::operator - () const
                       -_41, -_42, -_43, -_44);
 }
 
-inline D3DXMATRIX D3DXMATRIX::operator * (CONST D3DXMATRIX& mat) const
+inline D3DXMATRIX D3DXMATRIX::operator * (const D3DXMATRIX& mat) const
 {
     D3DXMATRIX buf;
     D3DXMatrixMultiply(&buf, this, &mat);
     return buf;
 }
 
-inline D3DXMATRIX D3DXMATRIX::operator + (CONST D3DXMATRIX& mat) const
+inline D3DXMATRIX D3DXMATRIX::operator + (const D3DXMATRIX& mat) const
 {
     return D3DXMATRIX(_11 + mat._11, _12 + mat._12, _13 + mat._13, _14 + mat._14,
                       _21 + mat._21, _22 + mat._22, _23 + mat._23, _24 + mat._24,
@@ -465,7 +465,7 @@ inline D3DXMATRIX D3DXMATRIX::operator + (CONST D3DXMATRIX& mat) const
                       _41 + mat._41, _42 + mat._42, _43 + mat._43, _44 + mat._44);
 }
 
-inline D3DXMATRIX D3DXMATRIX::operator - (CONST D3DXMATRIX& mat) const
+inline D3DXMATRIX D3DXMATRIX::operator - (const D3DXMATRIX& mat) const
 {
     return D3DXMATRIX(_11 - mat._11, _12 - mat._12, _13 - mat._13, _14 - mat._14,
                       _21 - mat._21, _22 - mat._22, _23 - mat._23, _24 - mat._24,
@@ -490,7 +490,7 @@ inline D3DXMATRIX D3DXMATRIX::operator / (FLOAT f) const
                       _41 * inv, _42 * inv, _43 * inv, _44 * inv);
 }
 
-inline D3DXMATRIX operator * (FLOAT f, CONST D3DXMATRIX& mat)
+inline D3DXMATRIX operator * (FLOAT f, const D3DXMATRIX& mat)
 {
     return D3DXMATRIX(f * mat._11, f * mat._12, f * mat._13, f * mat._14,
                       f * mat._21, f * mat._22, f * mat._23, f * mat._24,
@@ -498,12 +498,12 @@ inline D3DXMATRIX operator * (FLOAT f, CONST D3DXMATRIX& mat)
                       f * mat._41, f * mat._42, f * mat._43, f * mat._44);
 }
 
-inline WINBOOL D3DXMATRIX::operator == (CONST D3DXMATRIX& mat) const
+inline WINBOOL D3DXMATRIX::operator == (const D3DXMATRIX& mat) const
 {
     return (memcmp(this, &mat, sizeof(D3DXMATRIX)) == 0);
 }
 
-inline WINBOOL D3DXMATRIX::operator != (CONST D3DXMATRIX& mat) const
+inline WINBOOL D3DXMATRIX::operator != (const D3DXMATRIX& mat) const
 {
     return (memcmp(this, &mat, sizeof(D3DXMATRIX)) != 0);
 }
@@ -512,7 +512,7 @@ inline D3DXQUATERNION::D3DXQUATERNION()
 {
 }
 
-inline D3DXQUATERNION::D3DXQUATERNION(CONST FLOAT *pf)
+inline D3DXQUATERNION::D3DXQUATERNION(const FLOAT *pf)
 {
     if(!pf) return;
     x = pf[0];
@@ -534,12 +534,12 @@ inline D3DXQUATERNION::operator FLOAT* ()
     return (FLOAT*)&x;
 }
 
-inline D3DXQUATERNION::operator CONST FLOAT* () const
+inline D3DXQUATERNION::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&x;
+    return (const FLOAT*)&x;
 }
 
-inline D3DXQUATERNION& D3DXQUATERNION::operator += (CONST D3DXQUATERNION& quat)
+inline D3DXQUATERNION& D3DXQUATERNION::operator += (const D3DXQUATERNION& quat)
 {
     x += quat.x;
     y += quat.y;
@@ -548,7 +548,7 @@ inline D3DXQUATERNION& D3DXQUATERNION::operator += (CONST D3DXQUATERNION& quat)
     return *this;
 }
 
-inline D3DXQUATERNION& D3DXQUATERNION::operator -= (CONST D3DXQUATERNION& quat)
+inline D3DXQUATERNION& D3DXQUATERNION::operator -= (const D3DXQUATERNION& quat)
 {
     x -= quat.x;
     y -= quat.y;
@@ -557,7 +557,7 @@ inline D3DXQUATERNION& D3DXQUATERNION::operator -= (CONST D3DXQUATERNION& quat)
     return *this;
 }
 
-inline D3DXQUATERNION& D3DXQUATERNION::operator *= (CONST D3DXQUATERNION& quat)
+inline D3DXQUATERNION& D3DXQUATERNION::operator *= (const D3DXQUATERNION& quat)
 {
     D3DXQuaternionMultiply(this, this, &quat);
     return *this;
@@ -592,17 +592,17 @@ inline D3DXQUATERNION D3DXQUATERNION::operator - () const
     return D3DXQUATERNION(-x, -y, -z, -w);
 }
 
-inline D3DXQUATERNION D3DXQUATERNION::operator + (CONST D3DXQUATERNION& quat) const
+inline D3DXQUATERNION D3DXQUATERNION::operator + (const D3DXQUATERNION& quat) const
 {
     return D3DXQUATERNION(x + quat.x, y + quat.y, z + quat.z, w + quat.w);
 }
 
-inline D3DXQUATERNION D3DXQUATERNION::operator - (CONST D3DXQUATERNION& quat) const
+inline D3DXQUATERNION D3DXQUATERNION::operator - (const D3DXQUATERNION& quat) const
 {
     return D3DXQUATERNION(x - quat.x, y - quat.y, z - quat.z, w - quat.w);
 }
 
-inline D3DXQUATERNION D3DXQUATERNION::operator * (CONST D3DXQUATERNION& quat) const
+inline D3DXQUATERNION D3DXQUATERNION::operator * (const D3DXQUATERNION& quat) const
 {
     D3DXQUATERNION buf;
     D3DXQuaternionMultiply(&buf, this, &quat);
@@ -620,17 +620,17 @@ inline D3DXQUATERNION D3DXQUATERNION::operator / (FLOAT f) const
     return D3DXQUATERNION(x * inv, y * inv, z * inv, w * inv);
 }
 
-inline D3DXQUATERNION operator * (FLOAT f, CONST D3DXQUATERNION& quat)
+inline D3DXQUATERNION operator * (FLOAT f, const D3DXQUATERNION& quat)
 {
     return D3DXQUATERNION(f * quat.x, f * quat.y, f * quat.z, f * quat.w);
 }
 
-inline WINBOOL D3DXQUATERNION::operator == (CONST D3DXQUATERNION& quat) const
+inline WINBOOL D3DXQUATERNION::operator == (const D3DXQUATERNION& quat) const
 {
     return x == quat.x && y == quat.y && z == quat.z && w == quat.w;
 }
 
-inline WINBOOL D3DXQUATERNION::operator != (CONST D3DXQUATERNION& quat) const
+inline WINBOOL D3DXQUATERNION::operator != (const D3DXQUATERNION& quat) const
 {
     return x != quat.x || y != quat.y || z != quat.z || w != quat.w;
 }
@@ -639,7 +639,7 @@ inline D3DXPLANE::D3DXPLANE()
 {
 }
 
-inline D3DXPLANE::D3DXPLANE(CONST FLOAT *pf)
+inline D3DXPLANE::D3DXPLANE(const FLOAT *pf)
 {
     if(!pf) return;
     a = pf[0];
@@ -661,9 +661,9 @@ inline D3DXPLANE::operator FLOAT* ()
     return (FLOAT*)&a;
 }
 
-inline D3DXPLANE::operator CONST FLOAT* () const
+inline D3DXPLANE::operator const FLOAT* () const
 {
-    return (CONST FLOAT*)&a;
+    return (const FLOAT*)&a;
 }
 
 inline D3DXPLANE D3DXPLANE::operator + () const
@@ -676,12 +676,12 @@ inline D3DXPLANE D3DXPLANE::operator - () const
     return D3DXPLANE(-a, -b, -c, -d);
 }
 
-inline WINBOOL D3DXPLANE::operator == (CONST D3DXPLANE& pl) const
+inline WINBOOL D3DXPLANE::operator == (const D3DXPLANE& pl) const
 {
     return a == pl.a && b == pl.b && c == pl.c && d == pl.d;
 }
 
-inline WINBOOL D3DXPLANE::operator != (CONST D3DXPLANE& pl) const
+inline WINBOOL D3DXPLANE::operator != (const D3DXPLANE& pl) const
 {
     return a != pl.a || b != pl.b || c != pl.c || d != pl.d;
 }
@@ -692,14 +692,14 @@ inline D3DXCOLOR::D3DXCOLOR()
 
 inline D3DXCOLOR::D3DXCOLOR(DWORD col)
 {
-    CONST FLOAT f = 1.0f / 255.0f;
+    const FLOAT f = 1.0f / 255.0f;
     r = f * (FLOAT)(unsigned char)(col >> 16);
     g = f * (FLOAT)(unsigned char)(col >>  8);
     b = f * (FLOAT)(unsigned char)col;
     a = f * (FLOAT)(unsigned char)(col >> 24);
 }
 
-inline D3DXCOLOR::D3DXCOLOR(CONST FLOAT *pf)
+inline D3DXCOLOR::D3DXCOLOR(const FLOAT *pf)
 {
     if(!pf) return;
     r = pf[0];
@@ -708,7 +708,7 @@ inline D3DXCOLOR::D3DXCOLOR(CONST FLOAT *pf)
     a = pf[3];
 }
 
-inline D3DXCOLOR::D3DXCOLOR(CONST D3DCOLORVALUE& col)
+inline D3DXCOLOR::D3DXCOLOR(const D3DCOLORVALUE& col)
 {
     r = col.r;
     g = col.g;
@@ -739,9 +739,9 @@ inline D3DXCOLOR::operator FLOAT * ()
     return (FLOAT*)&r;
 }
 
-inline D3DXCOLOR::operator CONST FLOAT * () const
+inline D3DXCOLOR::operator const FLOAT * () const
 {
-    return (CONST FLOAT*)&r;
+    return (const FLOAT*)&r;
 }
 
 inline D3DXCOLOR::operator D3DCOLORVALUE * ()
@@ -749,9 +749,9 @@ inline D3DXCOLOR::operator D3DCOLORVALUE * ()
     return (D3DCOLORVALUE*)&r;
 }
 
-inline D3DXCOLOR::operator CONST D3DCOLORVALUE * () const
+inline D3DXCOLOR::operator const D3DCOLORVALUE * () const
 {
-    return (CONST D3DCOLORVALUE*)&r;
+    return (const D3DCOLORVALUE*)&r;
 }
 
 inline D3DXCOLOR::operator D3DCOLORVALUE& ()
@@ -759,12 +759,12 @@ inline D3DXCOLOR::operator D3DCOLORVALUE& ()
     return *((D3DCOLORVALUE*)&r);
 }
 
-inline D3DXCOLOR::operator CONST D3DCOLORVALUE& () const
+inline D3DXCOLOR::operator const D3DCOLORVALUE& () const
 {
-    return *((CONST D3DCOLORVALUE*)&r);
+    return *((const D3DCOLORVALUE*)&r);
 }
 
-inline D3DXCOLOR& D3DXCOLOR::operator += (CONST D3DXCOLOR& col)
+inline D3DXCOLOR& D3DXCOLOR::operator += (const D3DXCOLOR& col)
 {
     r += col.r;
     g += col.g;
@@ -773,7 +773,7 @@ inline D3DXCOLOR& D3DXCOLOR::operator += (CONST D3DXCOLOR& col)
     return *this;
 }
 
-inline D3DXCOLOR& D3DXCOLOR::operator -= (CONST D3DXCOLOR& col)
+inline D3DXCOLOR& D3DXCOLOR::operator -= (const D3DXCOLOR& col)
 {
     r -= col.r;
     g -= col.g;
@@ -811,12 +811,12 @@ inline D3DXCOLOR D3DXCOLOR::operator - () const
     return D3DXCOLOR(-r, -g, -b, -a);
 }
 
-inline D3DXCOLOR D3DXCOLOR::operator + (CONST D3DXCOLOR& col) const
+inline D3DXCOLOR D3DXCOLOR::operator + (const D3DXCOLOR& col) const
 {
     return D3DXCOLOR(r + col.r, g + col.g, b + col.b, a + col.a);
 }
 
-inline D3DXCOLOR D3DXCOLOR::operator - (CONST D3DXCOLOR& col) const
+inline D3DXCOLOR D3DXCOLOR::operator - (const D3DXCOLOR& col) const
 {
     return D3DXCOLOR(r - col.r, g - col.g, b - col.b, a - col.a);
 }
@@ -832,17 +832,17 @@ inline D3DXCOLOR D3DXCOLOR::operator / (FLOAT f) const
     return D3DXCOLOR(r * inv, g * inv, b * inv, a * inv);
 }
 
-inline D3DXCOLOR operator * (FLOAT f, CONST D3DXCOLOR& col)
+inline D3DXCOLOR operator * (FLOAT f, const D3DXCOLOR& col)
 {
     return D3DXCOLOR(f * col.r, f * col.g, f * col.b, f * col.a);
 }
 
-inline WINBOOL D3DXCOLOR::operator == (CONST D3DXCOLOR& col) const
+inline WINBOOL D3DXCOLOR::operator == (const D3DXCOLOR& col) const
 {
     return r == col.r && g == col.g && b == col.b && a == col.a;
 }
 
-inline WINBOOL D3DXCOLOR::operator != (CONST D3DXCOLOR& col) const
+inline WINBOOL D3DXCOLOR::operator != (const D3DXCOLOR& col) const
 {
     return r != col.r || g != col.g || b != col.b || a != col.a;
 }
@@ -856,7 +856,7 @@ inline D3DXFLOAT16::D3DXFLOAT16(FLOAT f)
     D3DXFloat32To16Array(this, &f, 1);
 }
 
-inline D3DXFLOAT16::D3DXFLOAT16(CONST D3DXFLOAT16 &f)
+inline D3DXFLOAT16::D3DXFLOAT16(const D3DXFLOAT16 &f)
 {
     value = f.value;
 }
@@ -868,12 +868,12 @@ inline D3DXFLOAT16::operator FLOAT ()
     return f;
 }
 
-inline WINBOOL D3DXFLOAT16::operator == (CONST D3DXFLOAT16 &f) const
+inline WINBOOL D3DXFLOAT16::operator == (const D3DXFLOAT16 &f) const
 {
     return value == f.value;
 }
 
-inline WINBOOL D3DXFLOAT16::operator != (CONST D3DXFLOAT16 &f) const
+inline WINBOOL D3DXFLOAT16::operator != (const D3DXFLOAT16 &f) const
 {
     return value != f.value;
 }
@@ -882,7 +882,7 @@ inline WINBOOL D3DXFLOAT16::operator != (CONST D3DXFLOAT16 &f) const
 
 /*_______________D3DXCOLOR_____________________*/
 
-static inline D3DXCOLOR* D3DXColorAdd(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CONST D3DXCOLOR *pc2)
+static inline D3DXCOLOR* D3DXColorAdd(D3DXCOLOR *pout, const D3DXCOLOR *pc1, const D3DXCOLOR *pc2)
 {
     if ( !pout || !pc1 || !pc2 ) return NULL;
     pout->r = (pc1->r) + (pc2->r);
@@ -892,7 +892,7 @@ static inline D3DXCOLOR* D3DXColorAdd(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CON
     return pout;
 }
 
-static inline D3DXCOLOR* D3DXColorLerp(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CONST D3DXCOLOR *pc2, FLOAT s)
+static inline D3DXCOLOR* D3DXColorLerp(D3DXCOLOR *pout, const D3DXCOLOR *pc1, const D3DXCOLOR *pc2, FLOAT s)
 {
     if ( !pout || !pc1 || !pc2 ) return NULL;
     pout->r = (1-s) * (pc1->r) + s *(pc2->r);
@@ -902,7 +902,7 @@ static inline D3DXCOLOR* D3DXColorLerp(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CO
     return pout;
 }
 
-static inline D3DXCOLOR* D3DXColorModulate(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CONST D3DXCOLOR *pc2)
+static inline D3DXCOLOR* D3DXColorModulate(D3DXCOLOR *pout, const D3DXCOLOR *pc1, const D3DXCOLOR *pc2)
 {
     if ( !pout || !pc1 || !pc2 ) return NULL;
     pout->r = (pc1->r) * (pc2->r);
@@ -912,7 +912,7 @@ static inline D3DXCOLOR* D3DXColorModulate(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1
     return pout;
 }
 
-static inline D3DXCOLOR* D3DXColorNegative(D3DXCOLOR *pout, CONST D3DXCOLOR *pc)
+static inline D3DXCOLOR* D3DXColorNegative(D3DXCOLOR *pout, const D3DXCOLOR *pc)
 {
     if ( !pout || !pc ) return NULL;
     pout->r = 1.0f - pc->r;
@@ -922,7 +922,7 @@ static inline D3DXCOLOR* D3DXColorNegative(D3DXCOLOR *pout, CONST D3DXCOLOR *pc)
     return pout;
 }
 
-static inline D3DXCOLOR* D3DXColorScale(D3DXCOLOR *pout, CONST D3DXCOLOR *pc, FLOAT s)
+static inline D3DXCOLOR* D3DXColorScale(D3DXCOLOR *pout, const D3DXCOLOR *pc, FLOAT s)
 {
     if ( !pout || !pc ) return NULL;
     pout->r = s* (pc->r);
@@ -932,7 +932,7 @@ static inline D3DXCOLOR* D3DXColorScale(D3DXCOLOR *pout, CONST D3DXCOLOR *pc, FL
     return pout;
 }
 
-static inline D3DXCOLOR* D3DXColorSubtract(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1, CONST D3DXCOLOR *pc2)
+static inline D3DXCOLOR* D3DXColorSubtract(D3DXCOLOR *pout, const D3DXCOLOR *pc1, const D3DXCOLOR *pc2)
 {
     if ( !pout || !pc1 || !pc2 ) return NULL;
     pout->r = (pc1->r) - (pc2->r);
@@ -944,7 +944,7 @@ static inline D3DXCOLOR* D3DXColorSubtract(D3DXCOLOR *pout, CONST D3DXCOLOR *pc1
 
 /*_______________D3DXVECTOR2________________________*/
 
-static inline D3DXVECTOR2* D3DXVec2Add(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline D3DXVECTOR2* D3DXVec2Add(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x + pv2->x;
@@ -952,31 +952,31 @@ static inline D3DXVECTOR2* D3DXVec2Add(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1
     return pout;
 }
 
-static inline FLOAT D3DXVec2CCW(CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline FLOAT D3DXVec2CCW(const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pv1 || !pv2) return 0.0f;
     return ( (pv1->x) * (pv2->y) - (pv1->y) * (pv2->x) );
 }
 
-static inline FLOAT D3DXVec2Dot(CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline FLOAT D3DXVec2Dot(const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pv1 || !pv2) return 0.0f;
     return ( (pv1->x * pv2->x + pv1->y * pv2->y) );
 }
 
-static inline FLOAT D3DXVec2Length(CONST D3DXVECTOR2 *pv)
+static inline FLOAT D3DXVec2Length(const D3DXVECTOR2 *pv)
 {
     if (!pv) return 0.0f;
     return sqrtf( pv->x * pv->x + pv->y * pv->y );
 }
 
-static inline FLOAT D3DXVec2LengthSq(CONST D3DXVECTOR2 *pv)
+static inline FLOAT D3DXVec2LengthSq(const D3DXVECTOR2 *pv)
 {
     if (!pv) return 0.0f;
     return( (pv->x) * (pv->x) + (pv->y) * (pv->y) );
 }
 
-static inline D3DXVECTOR2* D3DXVec2Lerp(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2, FLOAT s)
+static inline D3DXVECTOR2* D3DXVec2Lerp(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2, FLOAT s)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = (1-s) * (pv1->x) + s * (pv2->x);
@@ -984,7 +984,7 @@ static inline D3DXVECTOR2* D3DXVec2Lerp(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv
     return pout;
 }
 
-static inline D3DXVECTOR2* D3DXVec2Maximize(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline D3DXVECTOR2* D3DXVec2Maximize(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x > pv2->x ? pv1->x : pv2->x;
@@ -992,7 +992,7 @@ static inline D3DXVECTOR2* D3DXVec2Maximize(D3DXVECTOR2 *pout, CONST D3DXVECTOR2
     return pout;
 }
 
-static inline D3DXVECTOR2* D3DXVec2Minimize(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline D3DXVECTOR2* D3DXVec2Minimize(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x < pv2->x ? pv1->x : pv2->x;
@@ -1000,7 +1000,7 @@ static inline D3DXVECTOR2* D3DXVec2Minimize(D3DXVECTOR2 *pout, CONST D3DXVECTOR2
     return pout;
 }
 
-static inline D3DXVECTOR2* D3DXVec2Scale(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv, FLOAT s)
+static inline D3DXVECTOR2* D3DXVec2Scale(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv, FLOAT s)
 {
     if ( !pout || !pv) return NULL;
     pout->x = s * (pv->x);
@@ -1008,7 +1008,7 @@ static inline D3DXVECTOR2* D3DXVec2Scale(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *p
     return pout;
 }
 
-static inline D3DXVECTOR2* D3DXVec2Subtract(D3DXVECTOR2 *pout, CONST D3DXVECTOR2 *pv1, CONST D3DXVECTOR2 *pv2)
+static inline D3DXVECTOR2* D3DXVec2Subtract(D3DXVECTOR2 *pout, const D3DXVECTOR2 *pv1, const D3DXVECTOR2 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x - pv2->x;
@@ -1018,7 +1018,7 @@ static inline D3DXVECTOR2* D3DXVec2Subtract(D3DXVECTOR2 *pout, CONST D3DXVECTOR2
 
 /*__________________D3DXVECTOR3_______________________*/
 
-static inline D3DXVECTOR3* D3DXVec3Add(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline D3DXVECTOR3* D3DXVec3Add(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x + pv2->x;
@@ -1027,7 +1027,7 @@ static inline D3DXVECTOR3* D3DXVec3Add(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1
     return pout;
 }
 
-static inline D3DXVECTOR3* D3DXVec3Cross(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline D3DXVECTOR3* D3DXVec3Cross(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     D3DXVECTOR3 temp;
 
@@ -1039,25 +1039,25 @@ static inline D3DXVECTOR3* D3DXVec3Cross(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *p
     return pout;
 }
 
-static inline FLOAT D3DXVec3Dot(CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline FLOAT D3DXVec3Dot(const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     if ( !pv1 || !pv2 ) return 0.0f;
     return (pv1->x) * (pv2->x) + (pv1->y) * (pv2->y) + (pv1->z) * (pv2->z);
 }
 
-static inline FLOAT D3DXVec3Length(CONST D3DXVECTOR3 *pv)
+static inline FLOAT D3DXVec3Length(const D3DXVECTOR3 *pv)
 {
     if (!pv) return 0.0f;
     return sqrtf( pv->x * pv->x + pv->y * pv->y + pv->z * pv->z );
 }
 
-static inline FLOAT D3DXVec3LengthSq(CONST D3DXVECTOR3 *pv)
+static inline FLOAT D3DXVec3LengthSq(const D3DXVECTOR3 *pv)
 {
     if (!pv) return 0.0f;
     return (pv->x) * (pv->x) + (pv->y) * (pv->y) + (pv->z) * (pv->z);
 }
 
-static inline D3DXVECTOR3* D3DXVec3Lerp(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2, FLOAT s)
+static inline D3DXVECTOR3* D3DXVec3Lerp(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2, FLOAT s)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = (1-s) * (pv1->x) + s * (pv2->x);
@@ -1066,7 +1066,7 @@ static inline D3DXVECTOR3* D3DXVec3Lerp(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv
     return pout;
 }
 
-static inline D3DXVECTOR3* D3DXVec3Maximize(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline D3DXVECTOR3* D3DXVec3Maximize(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x > pv2->x ? pv1->x : pv2->x;
@@ -1075,7 +1075,7 @@ static inline D3DXVECTOR3* D3DXVec3Maximize(D3DXVECTOR3 *pout, CONST D3DXVECTOR3
     return pout;
 }
 
-static inline D3DXVECTOR3* D3DXVec3Minimize(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline D3DXVECTOR3* D3DXVec3Minimize(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x < pv2->x ? pv1->x : pv2->x;
@@ -1084,7 +1084,7 @@ static inline D3DXVECTOR3* D3DXVec3Minimize(D3DXVECTOR3 *pout, CONST D3DXVECTOR3
     return pout;
 }
 
-static inline D3DXVECTOR3* D3DXVec3Scale(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv, FLOAT s)
+static inline D3DXVECTOR3* D3DXVec3Scale(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv, FLOAT s)
 {
     if ( !pout || !pv) return NULL;
     pout->x = s * (pv->x);
@@ -1093,7 +1093,7 @@ static inline D3DXVECTOR3* D3DXVec3Scale(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *p
     return pout;
 }
 
-static inline D3DXVECTOR3* D3DXVec3Subtract(D3DXVECTOR3 *pout, CONST D3DXVECTOR3 *pv1, CONST D3DXVECTOR3 *pv2)
+static inline D3DXVECTOR3* D3DXVec3Subtract(D3DXVECTOR3 *pout, const D3DXVECTOR3 *pv1, const D3DXVECTOR3 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x - pv2->x;
@@ -1103,7 +1103,7 @@ static inline D3DXVECTOR3* D3DXVec3Subtract(D3DXVECTOR3 *pout, CONST D3DXVECTOR3
 }
 /*__________________D3DXVECTOR4_______________________*/
 
-static inline D3DXVECTOR4* D3DXVec4Add(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2)
+static inline D3DXVECTOR4* D3DXVec4Add(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x + pv2->x;
@@ -1113,25 +1113,25 @@ static inline D3DXVECTOR4* D3DXVec4Add(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1
     return pout;
 }
 
-static inline FLOAT D3DXVec4Dot(CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2)
+static inline FLOAT D3DXVec4Dot(const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2)
 {
     if (!pv1 || !pv2 ) return 0.0f;
     return (pv1->x) * (pv2->x) + (pv1->y) * (pv2->y) + (pv1->z) * (pv2->z) + (pv1->w) * (pv2->w);
 }
 
-static inline FLOAT D3DXVec4Length(CONST D3DXVECTOR4 *pv)
+static inline FLOAT D3DXVec4Length(const D3DXVECTOR4 *pv)
 {
     if (!pv) return 0.0f;
     return sqrtf( pv->x * pv->x + pv->y * pv->y + pv->z * pv->z + pv->w * pv->w );
 }
 
-static inline FLOAT D3DXVec4LengthSq(CONST D3DXVECTOR4 *pv)
+static inline FLOAT D3DXVec4LengthSq(const D3DXVECTOR4 *pv)
 {
     if (!pv) return 0.0f;
     return (pv->x) * (pv->x) + (pv->y) * (pv->y) + (pv->z) * (pv->z) + (pv->w) * (pv->w);
 }
 
-static inline D3DXVECTOR4* D3DXVec4Lerp(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2, FLOAT s)
+static inline D3DXVECTOR4* D3DXVec4Lerp(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2, FLOAT s)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = (1-s) * (pv1->x) + s * (pv2->x);
@@ -1142,7 +1142,7 @@ static inline D3DXVECTOR4* D3DXVec4Lerp(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv
 }
 
 
-static inline D3DXVECTOR4* D3DXVec4Maximize(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2)
+static inline D3DXVECTOR4* D3DXVec4Maximize(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x > pv2->x ? pv1->x : pv2->x;
@@ -1152,7 +1152,7 @@ static inline D3DXVECTOR4* D3DXVec4Maximize(D3DXVECTOR4 *pout, CONST D3DXVECTOR4
     return pout;
 }
 
-static inline D3DXVECTOR4* D3DXVec4Minimize(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2)
+static inline D3DXVECTOR4* D3DXVec4Minimize(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x < pv2->x ? pv1->x : pv2->x;
@@ -1162,7 +1162,7 @@ static inline D3DXVECTOR4* D3DXVec4Minimize(D3DXVECTOR4 *pout, CONST D3DXVECTOR4
     return pout;
 }
 
-static inline D3DXVECTOR4* D3DXVec4Scale(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv, FLOAT s)
+static inline D3DXVECTOR4* D3DXVec4Scale(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv, FLOAT s)
 {
     if ( !pout || !pv) return NULL;
     pout->x = s * (pv->x);
@@ -1172,7 +1172,7 @@ static inline D3DXVECTOR4* D3DXVec4Scale(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *p
     return pout;
 }
 
-static inline D3DXVECTOR4* D3DXVec4Subtract(D3DXVECTOR4 *pout, CONST D3DXVECTOR4 *pv1, CONST D3DXVECTOR4 *pv2)
+static inline D3DXVECTOR4* D3DXVec4Subtract(D3DXVECTOR4 *pout, const D3DXVECTOR4 *pv1, const D3DXVECTOR4 *pv2)
 {
     if ( !pout || !pv1 || !pv2) return NULL;
     pout->x = pv1->x - pv2->x;
@@ -1231,19 +1231,19 @@ static inline WINBOOL D3DXMatrixIsIdentity(D3DXMATRIX *pm)
 
 /*__________________D3DXPLANE____________________*/
 
-static inline FLOAT D3DXPlaneDot(CONST D3DXPLANE *pp, CONST D3DXVECTOR4 *pv)
+static inline FLOAT D3DXPlaneDot(const D3DXPLANE *pp, const D3DXVECTOR4 *pv)
 {
     if ( !pp || !pv ) return 0.0f;
     return ( (pp->a) * (pv->x) + (pp->b) * (pv->y) + (pp->c) * (pv->z) + (pp->d) * (pv->w) );
 }
 
-static inline FLOAT D3DXPlaneDotCoord(CONST D3DXPLANE *pp, CONST D3DXVECTOR4 *pv)
+static inline FLOAT D3DXPlaneDotCoord(const D3DXPLANE *pp, const D3DXVECTOR4 *pv)
 {
     if ( !pp || !pv ) return 0.0f;
     return ( (pp->a) * (pv->x) + (pp->b) * (pv->y) + (pp->c) * (pv->z) + (pp->d) );
 }
 
-static inline FLOAT D3DXPlaneDotNormal(CONST D3DXPLANE *pp, CONST D3DXVECTOR4 *pv)
+static inline FLOAT D3DXPlaneDotNormal(const D3DXPLANE *pp, const D3DXVECTOR4 *pv)
 {
     if ( !pp || !pv ) return 0.0f;
     return ( (pp->a) * (pv->x) + (pp->b) * (pv->y) + (pp->c) * (pv->z) );
@@ -1251,7 +1251,7 @@ static inline FLOAT D3DXPlaneDotNormal(CONST D3DXPLANE *pp, CONST D3DXVECTOR4 *p
 
 /*__________________D3DXQUATERNION____________________*/
 
-static inline D3DXQUATERNION* D3DXQuaternionConjugate(D3DXQUATERNION *pout, CONST D3DXQUATERNION *pq)
+static inline D3DXQUATERNION* D3DXQuaternionConjugate(D3DXQUATERNION *pout, const D3DXQUATERNION *pq)
 {
     if ( !pout || !pq) return NULL;
     pout->x = -pq->x;
@@ -1261,7 +1261,7 @@ static inline D3DXQUATERNION* D3DXQuaternionConjugate(D3DXQUATERNION *pout, CONS
     return pout;
 }
 
-static inline FLOAT D3DXQuaternionDot(CONST D3DXQUATERNION *pq1, CONST D3DXQUATERNION *pq2)
+static inline FLOAT D3DXQuaternionDot(const D3DXQUATERNION *pq1, const D3DXQUATERNION *pq2)
 {
     if ( !pq1 || !pq2 ) return 0.0f;
     return (pq1->x) * (pq2->x) + (pq1->y) * (pq2->y) + (pq1->z) * (pq2->z) + (pq1->w) * (pq2->w);
@@ -1283,13 +1283,13 @@ static inline WINBOOL D3DXQuaternionIsIdentity(D3DXQUATERNION *pq)
     return ( (pq->x == 0.0f) && (pq->y == 0.0f) && (pq->z == 0.0f) && (pq->w == 1.0f) );
 }
 
-static inline FLOAT D3DXQuaternionLength(CONST D3DXQUATERNION *pq)
+static inline FLOAT D3DXQuaternionLength(const D3DXQUATERNION *pq)
 {
     if (!pq) return 0.0f;
     return sqrtf( pq->x * pq->x + pq->y * pq->y + pq->z * pq->z + pq->w * pq->w );
 }
 
-static inline FLOAT D3DXQuaternionLengthSq(CONST D3DXQUATERNION *pq)
+static inline FLOAT D3DXQuaternionLengthSq(const D3DXQUATERNION *pq)
 {
     if (!pq) return 0.0f;
     return (pq->x) * (pq->x) + (pq->y) * (pq->y) + (pq->z) * (pq->z) + (pq->w) * (pq->w);
diff --git a/mingw-w64-headers/direct-x/include/d3dx9mesh.h b/mingw-w64-headers/direct-x/include/d3dx9mesh.h
index e7d19e7..81f67d6 100644
--- a/mingw-w64-headers/direct-x/include/d3dx9mesh.h
+++ b/mingw-w64-headers/direct-x/include/d3dx9mesh.h
@@ -300,7 +300,7 @@ typedef struct _XFILECOMPRESSEDANIMATIONSET
 } XFILECOMPRESSEDANIMATIONSET;
 
 typedef HRESULT (WINAPI *LPD3DXUVATLASCB)(float complete, void *ctx);
-typedef HRESULT (WINAPI *LPD3DXIMTSIGNALCALLBACK)(CONST D3DXVECTOR2 *, UINT, UINT, VOID *, FLOAT *);
+typedef HRESULT (WINAPI *LPD3DXIMTSIGNALCALLBACK)(const D3DXVECTOR2 *, UINT, UINT, void *, FLOAT *);
 typedef HRESULT (WINAPI *LPD3DXSHPRTSIMCB)(float complete, void *ctx);
 
 #undef INTERFACE
@@ -332,8 +332,8 @@ DECLARE_INTERFACE_(ID3DXBaseMesh, IUnknown)
     STDMETHOD(LockIndexBuffer)(THIS_ DWORD flags, void **data) PURE;
     STDMETHOD(UnlockIndexBuffer)(THIS) PURE;
     STDMETHOD(GetAttributeTable)(THIS_ D3DXATTRIBUTERANGE* attrib_table, DWORD* attrib_table_size) PURE;
-    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ CONST DWORD* point_reps, DWORD* adjacency) PURE;
-    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ CONST DWORD* adjacency, DWORD* point_reps) PURE;
+    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ const DWORD *point_reps, DWORD *adjacency) PURE;
+    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ const DWORD *adjacency, DWORD *point_reps) PURE;
     STDMETHOD(GenerateAdjacency)(THIS_ FLOAT epsilon, DWORD* adjacency) PURE;
     STDMETHOD(UpdateSemantics)(THIS_ D3DVERTEXELEMENT9 declaration[MAX_FVF_DECL_SIZE]) PURE;
 };
@@ -366,8 +366,8 @@ DECLARE_INTERFACE_(ID3DXMesh, ID3DXBaseMesh)
     STDMETHOD(LockIndexBuffer)(THIS_ DWORD flags, void **data) PURE;
     STDMETHOD(UnlockIndexBuffer)(THIS) PURE;
     STDMETHOD(GetAttributeTable)(THIS_ D3DXATTRIBUTERANGE* attrib_table, DWORD* attrib_table_size) PURE;
-    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ CONST DWORD* point_reps, DWORD* adjacency) PURE;
-    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ CONST DWORD* adjacency, DWORD* point_reps) PURE;
+    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ const DWORD *point_reps, DWORD *adjacency) PURE;
+    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ const DWORD *adjacency, DWORD *point_reps) PURE;
     STDMETHOD(GenerateAdjacency)(THIS_ FLOAT epsilon, DWORD* adjacency) PURE;
     STDMETHOD(UpdateSemantics)(THIS_ D3DVERTEXELEMENT9 declaration[MAX_FVF_DECL_SIZE]) PURE;
     /*** ID3DXMesh ***/
@@ -377,7 +377,8 @@ DECLARE_INTERFACE_(ID3DXMesh, ID3DXBaseMesh)
             DWORD *face_remap, ID3DXBuffer **vertex_remap, ID3DXMesh **opt_mesh) PURE;
     STDMETHOD(OptimizeInplace)(THIS_ DWORD flags, const DWORD *adjacency_in, DWORD *adjacency_out,
                      DWORD *face_remap, ID3DXBuffer **vertex_remap) PURE;
-    STDMETHOD(SetAttributeTable)(THIS_ CONST D3DXATTRIBUTERANGE* attrib_table, DWORD attrib_table_size) PURE;
+    STDMETHOD(SetAttributeTable)(THIS_ const D3DXATTRIBUTERANGE *attrib_table,
+            DWORD attrib_table_size) PURE;
 };
 #undef INTERFACE
 
@@ -408,8 +409,8 @@ DECLARE_INTERFACE_(ID3DXPMesh, ID3DXBaseMesh)
     STDMETHOD(LockIndexBuffer)(THIS_ DWORD flags, void **data) PURE;
     STDMETHOD(UnlockIndexBuffer)(THIS) PURE;
     STDMETHOD(GetAttributeTable)(THIS_ D3DXATTRIBUTERANGE* attrib_table, DWORD* attrib_table_size) PURE;
-    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ CONST DWORD* point_reps, DWORD* adjacency) PURE;
-    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ CONST DWORD* adjacency, DWORD* point_reps) PURE;
+    STDMETHOD(ConvertPointRepsToAdjacency)(THIS_ const DWORD *point_reps, DWORD *adjacency) PURE;
+    STDMETHOD(ConvertAdjacencyToPointReps)(THIS_ const DWORD *adjacency, DWORD *point_reps) PURE;
     STDMETHOD(GenerateAdjacency)(THIS_ FLOAT epsilon, DWORD* adjacency) PURE;
     STDMETHOD(UpdateSemantics)(THIS_ D3DVERTEXELEMENT9 declaration[MAX_FVF_DECL_SIZE]) PURE;
     /*** ID3DXPMesh ***/
@@ -423,7 +424,8 @@ DECLARE_INTERFACE_(ID3DXPMesh, ID3DXBaseMesh)
     STDMETHOD_(DWORD, GetMinFaces)(THIS) PURE;
     STDMETHOD_(DWORD, GetMaxVertices)(THIS) PURE;
     STDMETHOD_(DWORD, GetMinVertices)(THIS) PURE;
-    STDMETHOD(Save)(THIS_ IStream *stream, CONST D3DXMATERIAL* material, CONST D3DXEFFECTINSTANCE* effect_instance, DWORD num_materials) PURE;
+    STDMETHOD(Save)(THIS_ IStream *stream, const D3DXMATERIAL *material,
+            const D3DXEFFECTINSTANCE *effect_instance, DWORD num_materials) PURE;
     STDMETHOD(Optimize)(THIS_ DWORD flags, DWORD *adjacency_out, DWORD *face_remap,
             ID3DXBuffer **vertex_remap, ID3DXMesh **opt_mesh) PURE;
     STDMETHOD(OptimizeBaseLOD)(THIS_ DWORD flags, DWORD* face_remap) PURE;
@@ -516,7 +518,8 @@ DECLARE_INTERFACE_(ID3DXSkinInfo, IUnknown)
     STDMETHOD_(ULONG, AddRef)(THIS) PURE;
     STDMETHOD_(ULONG, Release)(THIS) PURE;
     /*** ID3DXSkinInfo ***/
-    STDMETHOD(SetBoneInfluence)(THIS_ DWORD bone, DWORD num_influences, CONST DWORD* vertices, CONST FLOAT* weights) PURE;
+    STDMETHOD(SetBoneInfluence)(THIS_ DWORD bone, DWORD num_influences, const DWORD *vertices,
+            const FLOAT *weights) PURE;
     STDMETHOD(SetBoneVertexInfluence)(THIS_ DWORD bone_num, DWORD influence_num, float weight) PURE;
     STDMETHOD_(DWORD, GetNumBoneInfluences)(THIS_ DWORD bone) PURE;
     STDMETHOD(GetBoneInfluence)(THIS_ DWORD bone, DWORD* vertices, FLOAT* weights) PURE;
@@ -530,12 +533,12 @@ DECLARE_INTERFACE_(ID3DXSkinInfo, IUnknown)
     STDMETHOD_(FLOAT, GetMinBoneInfluence)(THIS) PURE;
     STDMETHOD(SetBoneName)(THIS_ DWORD bone_idx, const char *name) PURE;
     STDMETHOD_(const char *, GetBoneName)(THIS_ DWORD bone_idx) PURE;
-    STDMETHOD(SetBoneOffsetMatrix)(THIS_ DWORD bone, CONST D3DXMATRIX* bone_transform) PURE;
+    STDMETHOD(SetBoneOffsetMatrix)(THIS_ DWORD bone, const D3DXMATRIX *bone_transform) PURE;
     STDMETHOD_(D3DXMATRIX *, GetBoneOffsetMatrix)(THIS_ DWORD bone) PURE;
     STDMETHOD(Clone)(THIS_ ID3DXSkinInfo **skin_info) PURE;
     STDMETHOD(Remap)(THIS_ DWORD num_vertices, DWORD* vertex_remap) PURE;
     STDMETHOD(SetFVF)(THIS_ DWORD FVF) PURE;
-    STDMETHOD(SetDeclaration)(THIS_ CONST D3DVERTEXELEMENT9* declaration) PURE;
+    STDMETHOD(SetDeclaration)(THIS_ const D3DVERTEXELEMENT9 *declaration) PURE;
     STDMETHOD_(DWORD, GetFVF)(THIS) PURE;
     STDMETHOD(GetDeclaration)(THIS_ D3DVERTEXELEMENT9 declaration[MAX_FVF_DECL_SIZE]) PURE;
     STDMETHOD(UpdateSkinnedMesh)(THIS_ const D3DXMATRIX *bone_transforms,
@@ -638,9 +641,9 @@ DECLARE_INTERFACE_(ID3DXPRTEngine, IUnknown)
     STDMETHOD_(ULONG, AddRef)(THIS) PURE;
     STDMETHOD_(ULONG, Release)(THIS) PURE;
     /*** ID3DXPRTEngine methods ***/
-    STDMETHOD(SetMeshMaterials)(THIS_ CONST D3DXSHMATERIAL **materials, UINT num_meshes,
+    STDMETHOD(SetMeshMaterials)(THIS_ const D3DXSHMATERIAL **materials, UINT num_meshes,
         UINT num_channels, WINBOOL set_albedo, FLOAT length_scale) PURE;
-    STDMETHOD(SetPerVertexAlbedo)(THIS_ CONST VOID *data_in, UINT num_channels, UINT stride) PURE;
+    STDMETHOD(SetPerVertexAlbedo)(THIS_ const void *data_in, UINT num_channels, UINT stride) PURE;
     STDMETHOD(SetPerTexelAlbedo)(THIS_ struct IDirect3DTexture9 *albedo_texture,
             UINT num_channels, struct ID3DXTextureGutterHelper *gh) PURE;
     STDMETHOD(GetVertexAlbedo)(THIS_ D3DXCOLOR *vert_colors, UINT num_verts) PURE;
@@ -684,9 +687,10 @@ DECLARE_INTERFACE_(ID3DXPRTEngine, IUnknown)
     STDMETHOD(ScaleMeshChunk)(THIS_ UINT mesh_chunk, float scale, ID3DXPRTBuffer *data_out) PURE;
     STDMETHOD(MultiplyAlbedo)(THIS_ ID3DXPRTBuffer *data_out) PURE;
     STDMETHOD(SetCallback)(THIS_ LPD3DXSHPRTSIMCB cb, float frequency, void *user_context) PURE;
-    STDMETHOD_(WINBOOL, ShadowRayIntersects)(THIS_ CONST D3DXVECTOR3 *ray_pos, CONST D3DXVECTOR3 *ray_dir) PURE;
-    STDMETHOD_(WINBOOL, ClosestRayIntersects)(THIS_ CONST D3DXVECTOR3 *ray_pos, CONST D3DXVECTOR3 *ray_dir,
-        DWORD *face_index, FLOAT *u, FLOAT *v, FLOAT *dist) PURE;
+    STDMETHOD_(WINBOOL, ShadowRayIntersects)(THIS_ const D3DXVECTOR3 *ray_pos,
+            const D3DXVECTOR3 *ray_dir) PURE;
+    STDMETHOD_(WINBOOL, ClosestRayIntersects)(THIS_ const D3DXVECTOR3 *ray_pos,
+            const D3DXVECTOR3 *ray_dir, DWORD *face_index, FLOAT *u, FLOAT *v, FLOAT *dist) PURE;
 };
 #undef INTERFACE
 
@@ -764,15 +768,19 @@ HRESULT WINAPI D3DXSavePRTCompBufferToFileW(const WCHAR *filename, ID3DXPRTCompB
 UINT    WINAPI D3DXGetDeclLength(const D3DVERTEXELEMENT9 *decl);
 UINT    WINAPI D3DXGetDeclVertexSize(const D3DVERTEXELEMENT9 *decl, DWORD stream_idx);
 UINT    WINAPI D3DXGetFVFVertexSize(DWORD);
-WINBOOL WINAPI D3DXBoxBoundProbe(CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *);
-WINBOOL WINAPI D3DXSphereBoundProbe(CONST D3DXVECTOR3 *,FLOAT,CONST D3DXVECTOR3 *,CONST D3DXVECTOR3 *);
+WINBOOL WINAPI D3DXBoxBoundProbe(const D3DXVECTOR3 *vmin, const D3DXVECTOR3 *vmax,
+        const D3DXVECTOR3 *ray_pos, const D3DXVECTOR3 *ray_dir);
+WINBOOL WINAPI D3DXSphereBoundProbe(const D3DXVECTOR3 *center, FLOAT radius,
+        const D3DXVECTOR3 *ray_pos, const D3DXVECTOR3 *ray_dir);
 HRESULT WINAPI D3DXCleanMesh(D3DXCLEANTYPE clean_type, ID3DXMesh *mesh_in, const DWORD *adjacency_in,
         ID3DXMesh **mesh_out, DWORD *adjacency_out, ID3DXBuffer **errors);
 HRESULT WINAPI D3DXConcatenateMeshes(struct ID3DXMesh **meshes, UINT mesh_count, DWORD flags,
         const D3DXMATRIX *geometry_matrices, const D3DXMATRIX *texture_matrices,
         const D3DVERTEXELEMENT9 *declaration, struct IDirect3DDevice9 *device, struct ID3DXMesh **mesh);
-HRESULT WINAPI D3DXComputeBoundingBox(CONST D3DXVECTOR3 *, DWORD, DWORD, D3DXVECTOR3 *, D3DXVECTOR3 *);
-HRESULT WINAPI D3DXComputeBoundingSphere(CONST D3DXVECTOR3 *, DWORD, DWORD, D3DXVECTOR3 *, FLOAT *);
+HRESULT WINAPI D3DXComputeBoundingBox(const D3DXVECTOR3 *first_pos, DWORD num_vertices,
+        DWORD stride, D3DXVECTOR3 *vmin, D3DXVECTOR3 *vmax);
+HRESULT WINAPI D3DXComputeBoundingSphere(const D3DXVECTOR3 *first_pos, DWORD num_vertices,
+        DWORD stride, D3DXVECTOR3 *center, FLOAT *radius);
 HRESULT WINAPI D3DXComputeIMTFromPerTexelSignal(ID3DXMesh *mesh, DWORD texture_idx, float *texel_signal,
         UINT width, UINT height, UINT signal_dimension, UINT component_count, DWORD flags,
         LPD3DXUVATLASCB cb, void *ctx, ID3DXBuffer **buffer);
@@ -799,7 +807,7 @@ HRESULT WINAPI D3DXConvertMeshSubsetToStrips(struct ID3DXBaseMesh *mesh_in, DWOR
         struct ID3DXBuffer **strip_lengths, DWORD *strip_count);
 HRESULT WINAPI D3DXDeclaratorFromFVF(DWORD, D3DVERTEXELEMENT9[MAX_FVF_DECL_SIZE]);
 HRESULT WINAPI D3DXFVFFromDeclarator(const D3DVERTEXELEMENT9 *decl, DWORD *fvf);
-HRESULT WINAPI D3DXGenerateOutputDecl(D3DVERTEXELEMENT9 *, CONST D3DVERTEXELEMENT9 *);
+HRESULT WINAPI D3DXGenerateOutputDecl(D3DVERTEXELEMENT9 *decl_out, const D3DVERTEXELEMENT9 *decl_in);
 HRESULT WINAPI D3DXGeneratePMesh(ID3DXMesh *mesh, const DWORD *adjacency,
         const D3DXATTRIBUTEWEIGHTS *attribute_weights, const float *vertex_weights,
         DWORD min_value, DWORD flags, ID3DXPMesh **pmesh);
@@ -808,12 +816,15 @@ HRESULT WINAPI D3DXIntersect(ID3DXBaseMesh *mesh, const D3DXVECTOR3 *ray_positio
 HRESULT WINAPI D3DXIntersectSubset(ID3DXBaseMesh *mesh, DWORD attribute_id, const D3DXVECTOR3 *ray_position,
         const D3DXVECTOR3 *ray_direction, WINBOOL *hit, DWORD *face_idx, float *u, float *v, float *distance,
         ID3DXBuffer **hits, DWORD *hit_count);
-WINBOOL WINAPI D3DXIntersectTri(CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *, CONST D3DXVECTOR3 *, CONST D3DXVECTOR3*, FLOAT *, FLOAT *, FLOAT *);
+WINBOOL WINAPI D3DXIntersectTri(const D3DXVECTOR3 *vtx0, const D3DXVECTOR3 *vtx1,
+        const D3DXVECTOR3 *vtx2, const D3DXVECTOR3 *ray_pos, const D3DXVECTOR3 *ray_dir, FLOAT *u,
+        FLOAT *v, FLOAT *dist);
 HRESULT WINAPI D3DXOptimizeFaces(const void *indices, UINT face_count,
         UINT vertex_count, WINBOOL idx_32bit, DWORD *face_remap);
 HRESULT WINAPI D3DXOptimizeVertices(const void *indices, UINT face_count,
         UINT vertex_count, WINBOOL idx_32bit, DWORD *vertex_remap);
-HRESULT WINAPI D3DXRectPatchSize(CONST FLOAT *, DWORD *, DWORD *);
+HRESULT WINAPI D3DXRectPatchSize(const FLOAT *segment_count, DWORD *num_triangles,
+        DWORD *num_vertices);
 HRESULT WINAPI D3DXSHPRTCompSuperCluster(UINT *cluster_ids, ID3DXMesh *scene, UINT max_cluster_count,
         UINT cluster_count, UINT *scluster_ids, UINT *scluster_count);
 HRESULT WINAPI D3DXSHPRTCompSplitMeshSC(UINT *cluster_idx, UINT vertex_count, UINT cluster_count, UINT *scluster_ids,
@@ -832,7 +843,8 @@ HRESULT WINAPI D3DXTesselateRectPatch(struct IDirect3DVertexBuffer9 *buffer, con
         const D3DVERTEXELEMENT9 *declaration, const D3DRECTPATCH_INFO *patch_info, struct ID3DXMesh *mesh);
 HRESULT WINAPI D3DXTesselateTriPatch(struct IDirect3DVertexBuffer9 *buffer, const float *segment_count,
         const D3DVERTEXELEMENT9 *declaration, const D3DTRIPATCH_INFO *patch_info, struct ID3DXMesh *mesh);
-HRESULT WINAPI D3DXTriPatchSize(CONST FLOAT *, DWORD *, DWORD *);
+HRESULT WINAPI D3DXTriPatchSize(const FLOAT *segment_count, DWORD *num_triangles,
+        DWORD *num_vertices);
 HRESULT WINAPI D3DXUVAtlasCreate(ID3DXMesh *mesh_in, UINT max_chart_count, float max_stretch_in,
         UINT width, UINT height, float gutter, DWORD texture_idx, const DWORD *adjacency, const DWORD *false_edges,
         const float *imt_array, LPD3DXUVATLASCB cb, float cb_freq, void *ctx, DWORD flags, ID3DXMesh **mesh_out,
diff --git a/mingw-w64-headers/direct-x/include/dmusici.h b/mingw-w64-headers/direct-x/include/dmusici.h
index d26ec97..34e352e 100644
--- a/mingw-w64-headers/direct-x/include/dmusici.h
+++ b/mingw-w64-headers/direct-x/include/dmusici.h
@@ -64,7 +64,6 @@ DEFINE_GUID(CLSID_DirectMusicSynthSink,                    0xaec17ce3,0xa514,0x1
 DEFINE_GUID(CLSID_DirectMusicSection,                      0x3f037241,0x414e,0x11d1,0xa7,0xce,0x00,0xa0,0xc9,0x13,0xf7,0x3c);
 DEFINE_GUID(CLSID_DirectMusicAuditionTrack,                0xd2ac2897,0xb39b,0x11d1,0x87,0x04,0x00,0x60,0x08,0x93,0xb1,0xbd);
 DEFINE_GUID(CLSID_DirectMusicSegTriggerTrack,              0xbae4d665,0x4ea1,0x11d3,0x8b,0xda,0x00,0x60,0x08,0x93,0xb1,0xb6);
-DEFINE_GUID(CLSID_DirectMusicAudioPath,                    0xee0b9ca0,0xa81e,0x11d3,0x9b,0xd1,0x00,0x80,0xc7,0x15,0x0a,0x74);
 DEFINE_GUID(CLSID_DirectMusicTemplate,                     0xd30bcc65,0x60e8,0x11d1,0xa7,0xce,0x00,0xa0,0xc9,0x13,0xf7,0x3c);
 DEFINE_GUID(CLSID_DirectMusicScriptAutoImpSegment,         0x4062c116,0x0270,0x11d3,0x8b,0xcb,0x00,0x60,0x08,0x93,0xb1,0xb6);
 DEFINE_GUID(CLSID_AudioVBScript,                           0x4ee17959,0x931e,0x49e4,0xa2,0xc6,0x97,0x7e,0xcf,0x36,0x28,0xf3);
diff --git a/mingw-w64-headers/direct-x/include/dpaddr.h b/mingw-w64-headers/direct-x/include/dpaddr.h
index 40ec4e0..9d3af01 100644
--- a/mingw-w64-headers/direct-x/include/dpaddr.h
+++ b/mingw-w64-headers/direct-x/include/dpaddr.h
@@ -237,14 +237,14 @@ DECLARE_INTERFACE_(IDirectPlay8Address,IUnknown)
     STDMETHOD(GetURLA)(THIS_ CHAR* pszURL, PDWORD pdwNumChars) PURE;
     STDMETHOD(GetSP)(THIS_ GUID* pguidSP) PURE;
     STDMETHOD(GetUserData)(THIS_ LPVOID pvUserData, PDWORD pdwBufferSize) PURE;
-    STDMETHOD(SetSP)(THIS_ CONST GUID* CONST pguidSP) PURE;
-    STDMETHOD(SetUserData)(THIS_ CONST void* CONST pvUserData, CONST DWORD dwDataSize) PURE;
+    STDMETHOD(SetSP)(THIS_ const GUID* pguidSP) PURE;
+    STDMETHOD(SetUserData)(THIS_ const void* pvUserData, DWORD dwDataSize) PURE;
     STDMETHOD(GetNumComponents)(THIS_ PDWORD pdwNumComponents) PURE;
-    STDMETHOD(GetComponentByName)(THIS_ CONST WCHAR* CONST pwszName, LPVOID pvBuffer, PDWORD pdwBufferSize, PDWORD pdwDataType) PURE;
-    STDMETHOD(GetComponentByIndex)(THIS_ CONST DWORD dwComponentID, WCHAR* pwszName, PDWORD pdwNameLen, void* pvBuffer, PDWORD pdwBufferSize, PDWORD pdwDataType) PURE;
-    STDMETHOD(AddComponent)(THIS_ CONST WCHAR* CONST pwszName, CONST void* CONST lpvData, CONST DWORD dwDataSize, CONST DWORD dwDataType) PURE;
+    STDMETHOD(GetComponentByName)(THIS_ const WCHAR* pwszName, LPVOID pvBuffer, PDWORD pdwBufferSize, PDWORD pdwDataType) PURE;
+    STDMETHOD(GetComponentByIndex)(THIS_ DWORD dwComponentID, WCHAR* pwszName, PDWORD pdwNameLen, void* pvBuffer, PDWORD pdwBufferSize, PDWORD pdwDataType) PURE;
+    STDMETHOD(AddComponent)(THIS_ const WCHAR* pwszName, const void* lpvData, DWORD dwDataSize, DWORD dwDataType) PURE;
     STDMETHOD(GetDevice)(THIS_ GUID* pDevGuid) PURE;
-    STDMETHOD(SetDevice)(THIS_ CONST GUID* CONST devGuid) PURE;
+    STDMETHOD(SetDevice)(THIS_ const GUID* devGuid) PURE;
     STDMETHOD(BuildFromDirectPlay4Address)(THIS_ LPVOID pvAddress, DWORD dwDataSize) PURE;
 };
 #undef INTERFACE
@@ -313,9 +313,9 @@ DECLARE_INTERFACE_(IDirectPlay8AddressIP,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8AddressIP methods ***/
-    STDMETHOD(BuildFromSockAddr)(THIS_ CONST SOCKADDR* CONST pSockAddr) PURE;
-    STDMETHOD(BuildAddress)(THIS_ CONST WCHAR* CONST wszAddress, CONST USHORT usPort) PURE;
-    STDMETHOD(BuildLocalAddress)(THIS_ CONST GUID* CONST pguidAdapter, CONST USHORT usPort) PURE;
+    STDMETHOD(BuildFromSockAddr)(THIS_ const SOCKADDR* pSockAddr) PURE;
+    STDMETHOD(BuildAddress)(THIS_ const WCHAR* wszAddress, USHORT usPort) PURE;
+    STDMETHOD(BuildLocalAddress)(THIS_ const GUID* pguidAdapter, USHORT usPort) PURE;
     STDMETHOD(GetSockAddress)(THIS_ SOCKADDR* pSockAddr, PDWORD) PURE;
     STDMETHOD(GetLocalAddress)(THIS_ GUID* pguidAdapter, USHORT* pusPort) PURE;
     STDMETHOD(GetAddress)(THIS_ WCHAR* wszAddress, PDWORD pdwAddressLength, USHORT* psPort) PURE;
@@ -350,7 +350,7 @@ DECLARE_INTERFACE_(IDirectPlay8AddressIP,IUnknown)
 
 /* Export functions */
 
-HRESULT WINAPI DirectPlay8AddressCreate(CONST GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
+HRESULT WINAPI DirectPlay8AddressCreate(const GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
 
 #ifdef __cplusplus
 }
diff --git a/mingw-w64-headers/direct-x/include/dplay8.h b/mingw-w64-headers/direct-x/include/dplay8.h
index 516f18e..678cef9 100644
--- a/mingw-w64-headers/direct-x/include/dplay8.h
+++ b/mingw-w64-headers/direct-x/include/dplay8.h
@@ -578,25 +578,25 @@ DECLARE_INTERFACE_(IDirectPlay8Client,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8Client methods ***/
-    STDMETHOD(Initialize)(THIS_ PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumServiceProviders)(THIS_ CONST GUID * CONST pguidServiceProvider, CONST GUID * CONST pguidApplication, DPN_SERVICE_PROVIDER_INFO * CONST pSPInfoBuffer, PDWORD CONST pcbEnumData, PDWORD CONST pcReturned, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumHosts)(THIS_ PDPN_APPLICATION_DESC CONST pApplicationDesc,IDirectPlay8Address * CONST pAddrHost,IDirectPlay8Address * CONST pDeviceInfo, PVOID CONST pUserEnumData, CONST DWORD dwUserEnumDataSize, CONST DWORD dwEnumCount, CONST DWORD dwRetryInterval, CONST DWORD dwTimeOut, PVOID CONST pvUserContext, DPNHANDLE * CONST pAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(CancelAsyncOperation)(THIS_ CONST DPNHANDLE hAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Connect)(THIS_ CONST DPN_APPLICATION_DESC * CONST pdnAppDesc,IDirectPlay8Address * CONST pHostAddr,IDirectPlay8Address * CONST pDeviceInfo, CONST DPN_SECURITY_DESC * CONST pdnSecurity, CONST DPN_SECURITY_CREDENTIALS * CONST pdnCredentials, CONST void * CONST pvUserConnectData, CONST DWORD dwUserConnectDataSize,void * CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Send)(THIS_ CONST DPN_BUFFER_DESC * CONST prgBufferDesc, CONST DWORD cBufferDesc, CONST DWORD dwTimeOut, void * CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetSendQueueInfo)(THIS_ DWORD * CONST pdwNumMsgs, DWORD * CONST pdwNumBytes, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC * CONST pAppDescBuffer, DWORD * CONST pcbDataSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetClientInfo)(THIS_ CONST DPN_PLAYER_INFO * CONST pdpnPlayerInfo, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetServerInfo)(THIS_ DPN_PLAYER_INFO * CONST pdpnPlayerInfo, DWORD * CONST pdwSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetServerAddress)(THIS_ IDirectPlay8Address ** CONST pAddress, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(ReturnBuffer)(THIS_ CONST DPNHANDLE hBufferHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetCaps)(THIS_ DPN_CAPS * CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetCaps)(THIS_ CONST DPN_CAPS * CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetSPCaps)(THIS_ CONST GUID * CONST pguidSP, CONST DPN_SP_CAPS * CONST pdpspCaps, CONST DWORD dwFlags ) PURE;
-    STDMETHOD(GetSPCaps)(THIS_ CONST GUID * CONST pguidSP, DPN_SP_CAPS * CONST pdpspCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetConnectionInfo)(THIS_ DPN_CONNECTION_INFO * CONST pdpConnectionInfo, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RegisterLobby)(THIS_ CONST DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication * CONST pIDP8LobbiedApplication, CONST DWORD dwFlags) PURE;
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(EnumServiceProviders)(THIS_ const GUID *pguidServiceProvider, const GUID *pguidApplication, DPN_SERVICE_PROVIDER_INFO *pSPInfoBuffer, PDWORD pcbEnumData, PDWORD pcReturned, DWORD dwFlags) PURE;
+    STDMETHOD(EnumHosts)(THIS_ PDPN_APPLICATION_DESC pApplicationDesc,IDirectPlay8Address *pAddrHost,IDirectPlay8Address *pDeviceInfo, PVOID pUserEnumData, DWORD dwUserEnumDataSize, DWORD dwEnumCount, DWORD dwRetryInterval, DWORD dwTimeOut, PVOID pvUserContext, DPNHANDLE *pAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(CancelAsyncOperation)(THIS_ DPNHANDLE hAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(Connect)(THIS_ const DPN_APPLICATION_DESC *pdnAppDesc,IDirectPlay8Address *pHostAddr,IDirectPlay8Address *pDeviceInfo, const DPN_SECURITY_DESC *pdnSecurity, const DPN_SECURITY_CREDENTIALS *pdnCredentials, const void *pvUserConnectData, DWORD dwUserConnectDataSize,void *pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(Send)(THIS_ const DPN_BUFFER_DESC *prgBufferDesc, DWORD cBufferDesc, DWORD dwTimeOut, void *pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetSendQueueInfo)(THIS_ DWORD *pdwNumMsgs, DWORD *pdwNumBytes, DWORD dwFlags) PURE;
+    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC *pAppDescBuffer, DWORD *pcbDataSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetClientInfo)(THIS_ const DPN_PLAYER_INFO *pdpnPlayerInfo, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetServerInfo)(THIS_ DPN_PLAYER_INFO *pdpnPlayerInfo, DWORD *pdwSize, DWORD dwFlags) PURE;
+    STDMETHOD(GetServerAddress)(THIS_ IDirectPlay8Address ** pAddress, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(ReturnBuffer)(THIS_ DPNHANDLE hBufferHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetCaps)(THIS_ DPN_CAPS *pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetCaps)(THIS_ const DPN_CAPS *pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetSPCaps)(THIS_ const GUID *pguidSP, const DPN_SP_CAPS *pdpspCaps, DWORD dwFlags ) PURE;
+    STDMETHOD(GetSPCaps)(THIS_ const GUID *pguidSP, DPN_SP_CAPS *pdpspCaps, DWORD dwFlags) PURE;
+    STDMETHOD(GetConnectionInfo)(THIS_ DPN_CONNECTION_INFO *pdpConnectionInfo, DWORD dwFlags) PURE;
+    STDMETHOD(RegisterLobby)(THIS_ DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication *pIDP8LobbiedApplication, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -663,37 +663,37 @@ DECLARE_INTERFACE_(IDirectPlay8Server,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8Server methods ***/
-    STDMETHOD(Initialize)(THIS_ PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumServiceProviders)(THIS_ CONST GUID * CONST pguidServiceProvider, CONST GUID * CONST pguidApplication, DPN_SERVICE_PROVIDER_INFO * CONST pSPInfoBuffer, PDWORD CONST pcbEnumData, PDWORD CONST pcReturned, CONST DWORD dwFlags) PURE;
-    STDMETHOD(CancelAsyncOperation)(THIS_ CONST DPNHANDLE hAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetSendQueueInfo)(THIS_ CONST DPNID dpnid, DWORD * CONST pdwNumMsgs, DWORD * CONST pdwNumBytes, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC * CONST pAppDescBuffer, DWORD * CONST pcbDataSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetServerInfo)(THIS_ CONST DPN_PLAYER_INFO * CONST pdpnPlayerInfo, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetClientInfo)(THIS_ CONST DPNID dpnid, DPN_PLAYER_INFO * CONST pdpnPlayerInfo, DWORD * CONST pdwSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetClientAddress)(THIS_ CONST DPNID dpnid, IDirectPlay8Address ** CONST pAddress, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetLocalHostAddresses)(THIS_ IDirectPlay8Address ** CONST prgpAddress, DWORD * CONST pcAddress, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetApplicationDesc)(THIS_ CONST DPN_APPLICATION_DESC * CONST pad, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Host)(THIS_ CONST DPN_APPLICATION_DESC * CONST pdnAppDesc, IDirectPlay8Address ** CONST prgpDeviceInfo, CONST DWORD cDeviceInfo, CONST DPN_SECURITY_DESC * CONST pdnSecurity, CONST DPN_SECURITY_CREDENTIALS * CONST pdnCredentials, void * CONST pvPlayerContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SendTo)(THIS_ CONST DPNID dpnid, CONST DPN_BUFFER_DESC * CONST prgBufferDesc, CONST DWORD cBufferDesc, CONST DWORD dwTimeOut, void * CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(CreateGroup)(THIS_ CONST DPN_GROUP_INFO * CONST pdpnGroupInfo, void * CONST pvGroupContext, void * CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(DestroyGroup)(THIS_ CONST DPNID idGroup, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(AddPlayerToGroup)(THIS_ CONST DPNID idGroup, CONST DPNID idClient, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RemovePlayerFromGroup)(THIS_ CONST DPNID idGroup, CONST DPNID idClient, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetGroupInfo)(THIS_ CONST DPNID dpnid, DPN_GROUP_INFO * CONST pdpnGroupInfo, PVOID CONST pvAsyncContext, DPNHANDLE * CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetGroupInfo)(THIS_ CONST DPNID dpnid, DPN_GROUP_INFO * CONST pdpnGroupInfo, DWORD * CONST pdwSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumPlayersAndGroups)(THIS_ DPNID * CONST prgdpnid, DWORD * CONST pcdpnid, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumGroupMembers)(THIS_ CONST DPNID dpnid, DPNID * CONST prgdpnid, DWORD * CONST pcdpnid, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(DestroyClient)(THIS_ CONST DPNID dpnidClient, CONST void * CONST pvDestroyData, CONST DWORD dwDestroyDataSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(ReturnBuffer)(THIS_ CONST DPNHANDLE hBufferHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetPlayerContext)(THIS_ CONST DPNID dpnid, PVOID * CONST ppvPlayerContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetGroupContext)(THIS_ CONST DPNID dpnid, PVOID * CONST ppvGroupContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetCaps)(THIS_ DPN_CAPS * CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetCaps)(THIS_ CONST DPN_CAPS * CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetSPCaps)(THIS_ CONST GUID * CONST pguidSP, CONST DPN_SP_CAPS * CONST pdpspCaps, CONST DWORD dwFlags ) PURE;
-    STDMETHOD(GetSPCaps)(THIS_ CONST GUID * CONST pguidSP, DPN_SP_CAPS * CONST pdpspCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetConnectionInfo)(THIS_ CONST DPNID dpnid, DPN_CONNECTION_INFO * CONST pdpConnectionInfo, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RegisterLobby)(THIS_ CONST DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication * CONST pIDP8LobbiedApplication, CONST DWORD dwFlags) PURE;
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(EnumServiceProviders)(THIS_ const GUID *pguidServiceProvider, const GUID *pguidApplication, DPN_SERVICE_PROVIDER_INFO *pSPInfoBuffer, PDWORD pcbEnumData, PDWORD pcReturned, DWORD dwFlags) PURE;
+    STDMETHOD(CancelAsyncOperation)(THIS_ DPNHANDLE hAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetSendQueueInfo)(THIS_ DPNID dpnid, DWORD *pdwNumMsgs, DWORD *pdwNumBytes, DWORD dwFlags) PURE;
+    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC *pAppDescBuffer, DWORD *pcbDataSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetServerInfo)(THIS_ const DPN_PLAYER_INFO *pdpnPlayerInfo, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetClientInfo)(THIS_ DPNID dpnid, DPN_PLAYER_INFO *pdpnPlayerInfo, DWORD *pdwSize, DWORD dwFlags) PURE;
+    STDMETHOD(GetClientAddress)(THIS_ DPNID dpnid, IDirectPlay8Address ** pAddress, DWORD dwFlags) PURE;
+    STDMETHOD(GetLocalHostAddresses)(THIS_ IDirectPlay8Address ** prgpAddress, DWORD *pcAddress, DWORD dwFlags) PURE;
+    STDMETHOD(SetApplicationDesc)(THIS_ const DPN_APPLICATION_DESC *pad, DWORD dwFlags) PURE;
+    STDMETHOD(Host)(THIS_ const DPN_APPLICATION_DESC *pdnAppDesc, IDirectPlay8Address ** prgpDeviceInfo, DWORD cDeviceInfo, const DPN_SECURITY_DESC *pdnSecurity, const DPN_SECURITY_CREDENTIALS *pdnCredentials, void *pvPlayerContext, DWORD dwFlags) PURE;
+    STDMETHOD(SendTo)(THIS_ DPNID dpnid, const DPN_BUFFER_DESC *prgBufferDesc, DWORD cBufferDesc, DWORD dwTimeOut, void *pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(CreateGroup)(THIS_ const DPN_GROUP_INFO *pdpnGroupInfo, void *pvGroupContext, void *pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(DestroyGroup)(THIS_ DPNID idGroup, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(AddPlayerToGroup)(THIS_ DPNID idGroup, DPNID idClient, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(RemovePlayerFromGroup)(THIS_ DPNID idGroup, DPNID idClient, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(SetGroupInfo)(THIS_ DPNID dpnid, DPN_GROUP_INFO *pdpnGroupInfo, PVOID pvAsyncContext, DPNHANDLE *phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetGroupInfo)(THIS_ DPNID dpnid, DPN_GROUP_INFO *pdpnGroupInfo, DWORD *pdwSize, DWORD dwFlags) PURE;
+    STDMETHOD(EnumPlayersAndGroups)(THIS_ DPNID *prgdpnid, DWORD *pcdpnid, DWORD dwFlags) PURE;
+    STDMETHOD(EnumGroupMembers)(THIS_ DPNID dpnid, DPNID *prgdpnid, DWORD *pcdpnid, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(DestroyClient)(THIS_ DPNID dpnidClient, const void *pvDestroyData, DWORD dwDestroyDataSize, DWORD dwFlags) PURE;
+    STDMETHOD(ReturnBuffer)(THIS_ DPNHANDLE hBufferHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetPlayerContext)(THIS_ DPNID dpnid, PVOID *ppvPlayerContext, DWORD dwFlags) PURE;
+    STDMETHOD(GetGroupContext)(THIS_ DPNID dpnid, PVOID *ppvGroupContext, DWORD dwFlags) PURE;
+    STDMETHOD(GetCaps)(THIS_ DPN_CAPS *pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetCaps)(THIS_ const DPN_CAPS *pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetSPCaps)(THIS_ const GUID *pguidSP, const DPN_SP_CAPS *pdpspCaps, DWORD dwFlags ) PURE;
+    STDMETHOD(GetSPCaps)(THIS_ const GUID *pguidSP, DPN_SP_CAPS *pdpspCaps, DWORD dwFlags) PURE;
+    STDMETHOD(GetConnectionInfo)(THIS_ DPNID dpnid, DPN_CONNECTION_INFO *pdpConnectionInfo, DWORD dwFlags) PURE;
+    STDMETHOD(RegisterLobby)(THIS_ DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication *pIDP8LobbiedApplication, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -784,40 +784,40 @@ DECLARE_INTERFACE_(IDirectPlay8Peer,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8Peer methods ***/
-    STDMETHOD(Initialize)(THIS_ PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumServiceProviders)(THIS_ CONST GUID* CONST pguidServiceProvider, CONST GUID* CONST pguidApplication, DPN_SERVICE_PROVIDER_INFO* CONST pSPInfoBuffer, DWORD* CONST pcbEnumData, DWORD* CONST pcReturned, CONST DWORD dwFlags) PURE;
-    STDMETHOD(CancelAsyncOperation)(THIS_ CONST DPNHANDLE hAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Connect)(THIS_ CONST DPN_APPLICATION_DESC* CONST pdnAppDesc, IDirectPlay8Address* CONST pHostAddr, IDirectPlay8Address* CONST pDeviceInfo, CONST DPN_SECURITY_DESC* CONST pdnSecurity, CONST DPN_SECURITY_CREDENTIALS* CONST pdnCredentials, CONST void* CONST pvUserConnectData, CONST DWORD dwUserConnectDataSize, void* CONST pvPlayerContext, void* CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SendTo)(THIS_ CONST DPNID dpnid, CONST DPN_BUFFER_DESC* CONST prgBufferDesc, CONST DWORD cBufferDesc, CONST DWORD dwTimeOut, void* CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetSendQueueInfo)(THIS_ CONST DPNID dpnid, DWORD* CONST pdwNumMsgs, DWORD* CONST pdwNumBytes, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Host)(THIS_ CONST DPN_APPLICATION_DESC* CONST pdnAppDesc, IDirectPlay8Address **CONST prgpDeviceInfo, CONST DWORD cDeviceInfo, CONST DPN_SECURITY_DESC* CONST pdnSecurity, CONST DPN_SECURITY_CREDENTIALS* CONST pdnCredentials, void* CONST pvPlayerContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC* CONST pAppDescBuffer, DWORD* CONST pcbDataSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetApplicationDesc)(THIS_ CONST DPN_APPLICATION_DESC* CONST pad, CONST DWORD dwFlags) PURE;
-    STDMETHOD(CreateGroup)(THIS_ CONST DPN_GROUP_INFO* CONST pdpnGroupInfo, void* CONST pvGroupContext, void* CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(DestroyGroup)(THIS_ CONST DPNID idGroup, PVOID CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(AddPlayerToGroup)(THIS_ CONST DPNID idGroup, CONST DPNID idClient, PVOID CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RemovePlayerFromGroup)(THIS_ CONST DPNID idGroup, CONST DPNID idClient, PVOID CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetGroupInfo)(THIS_ CONST DPNID dpnid, DPN_GROUP_INFO* CONST pdpnGroupInfo,PVOID CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetGroupInfo)(THIS_ CONST DPNID dpnid, DPN_GROUP_INFO* CONST pdpnGroupInfo, DWORD* CONST pdwSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumPlayersAndGroups)(THIS_ DPNID* CONST prgdpnid, DWORD* CONST pcdpnid, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumGroupMembers)(THIS_ CONST DPNID dpnid, DPNID* CONST prgdpnid, DWORD* CONST pcdpnid, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetPeerInfo)(THIS_ CONST DPN_PLAYER_INFO* CONST pdpnPlayerInfo,PVOID CONST pvAsyncContext, DPNHANDLE* CONST phAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetPeerInfo)(THIS_ CONST DPNID dpnid, DPN_PLAYER_INFO* CONST pdpnPlayerInfo, DWORD* CONST pdwSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetPeerAddress)(THIS_ CONST DPNID dpnid, IDirectPlay8Address** CONST pAddress, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetLocalHostAddresses)(THIS_ IDirectPlay8Address** CONST prgpAddress, DWORD* CONST pcAddress, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumHosts)(THIS_ PDPN_APPLICATION_DESC CONST pApplicationDesc, IDirectPlay8Address* CONST pAddrHost, IDirectPlay8Address* CONST pDeviceInfo,PVOID CONST pUserEnumData, CONST DWORD dwUserEnumDataSize, CONST DWORD dwEnumCount, CONST DWORD dwRetryInterval, CONST DWORD dwTimeOut,PVOID CONST pvUserContext, DPNHANDLE* CONST pAsyncHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(DestroyPeer)(THIS_ CONST DPNID dpnidClient, CONST void* CONST pvDestroyData, CONST DWORD dwDestroyDataSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(ReturnBuffer)(THIS_ CONST DPNHANDLE hBufferHandle, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetPlayerContext)(THIS_ CONST DPNID dpnid,PVOID* CONST ppvPlayerContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetGroupContext)(THIS_ CONST DPNID dpnid,PVOID* CONST ppvGroupContext, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetCaps)(THIS_ DPN_CAPS* CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetCaps)(THIS_ CONST DPN_CAPS* CONST pdpCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetSPCaps)(THIS_ CONST GUID* CONST pguidSP, CONST DPN_SP_CAPS* CONST pdpspCaps, CONST DWORD dwFlags ) PURE;
-    STDMETHOD(GetSPCaps)(THIS_ CONST GUID* CONST pguidSP, DPN_SP_CAPS* CONST pdpspCaps, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetConnectionInfo)(THIS_ CONST DPNID dpnid, DPN_CONNECTION_INFO* CONST pdpConnectionInfo, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RegisterLobby)(THIS_ CONST DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication* CONST pIDP8LobbiedApplication, CONST DWORD dwFlags) PURE;
-    STDMETHOD(TerminateSession)(THIS_ void* CONST pvTerminateData, CONST DWORD dwTerminateDataSize, CONST DWORD dwFlags) PURE;
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(EnumServiceProviders)(THIS_ const GUID* pguidServiceProvider, const GUID* pguidApplication, DPN_SERVICE_PROVIDER_INFO* pSPInfoBuffer, DWORD* pcbEnumData, DWORD* pcReturned, DWORD dwFlags) PURE;
+    STDMETHOD(CancelAsyncOperation)(THIS_ DPNHANDLE hAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(Connect)(THIS_ const DPN_APPLICATION_DESC* pdnAppDesc, IDirectPlay8Address* pHostAddr, IDirectPlay8Address* pDeviceInfo, const DPN_SECURITY_DESC* pdnSecurity, const DPN_SECURITY_CREDENTIALS* pdnCredentials, const void* pvUserConnectData, DWORD dwUserConnectDataSize, void* pvPlayerContext, void* pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(SendTo)(THIS_ DPNID dpnid, const DPN_BUFFER_DESC* prgBufferDesc, DWORD cBufferDesc, DWORD dwTimeOut, void* pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetSendQueueInfo)(THIS_ DPNID dpnid, DWORD* pdwNumMsgs, DWORD* pdwNumBytes, DWORD dwFlags) PURE;
+    STDMETHOD(Host)(THIS_ const DPN_APPLICATION_DESC* pdnAppDesc, IDirectPlay8Address **prgpDeviceInfo, DWORD cDeviceInfo, const DPN_SECURITY_DESC* pdnSecurity, const DPN_SECURITY_CREDENTIALS* pdnCredentials, void* pvPlayerContext, DWORD dwFlags) PURE;
+    STDMETHOD(GetApplicationDesc)(THIS_ DPN_APPLICATION_DESC* pAppDescBuffer, DWORD* pcbDataSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetApplicationDesc)(THIS_ const DPN_APPLICATION_DESC* pad, DWORD dwFlags) PURE;
+    STDMETHOD(CreateGroup)(THIS_ const DPN_GROUP_INFO* pdpnGroupInfo, void* pvGroupContext, void* pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(DestroyGroup)(THIS_ DPNID idGroup, PVOID pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(AddPlayerToGroup)(THIS_ DPNID idGroup, DPNID idClient, PVOID pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(RemovePlayerFromGroup)(THIS_ DPNID idGroup, DPNID idClient, PVOID pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(SetGroupInfo)(THIS_ DPNID dpnid, DPN_GROUP_INFO* pdpnGroupInfo,PVOID pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetGroupInfo)(THIS_ DPNID dpnid, DPN_GROUP_INFO* pdpnGroupInfo, DWORD* pdwSize, DWORD dwFlags) PURE;
+    STDMETHOD(EnumPlayersAndGroups)(THIS_ DPNID* prgdpnid, DWORD* pcdpnid, DWORD dwFlags) PURE;
+    STDMETHOD(EnumGroupMembers)(THIS_ DPNID dpnid, DPNID* prgdpnid, DWORD* pcdpnid, DWORD dwFlags) PURE;
+    STDMETHOD(SetPeerInfo)(THIS_ const DPN_PLAYER_INFO* pdpnPlayerInfo,PVOID pvAsyncContext, DPNHANDLE* phAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetPeerInfo)(THIS_ DPNID dpnid, DPN_PLAYER_INFO* pdpnPlayerInfo, DWORD* pdwSize, DWORD dwFlags) PURE;
+    STDMETHOD(GetPeerAddress)(THIS_ DPNID dpnid, IDirectPlay8Address** pAddress, DWORD dwFlags) PURE;
+    STDMETHOD(GetLocalHostAddresses)(THIS_ IDirectPlay8Address** prgpAddress, DWORD* pcAddress, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(EnumHosts)(THIS_ PDPN_APPLICATION_DESC pApplicationDesc, IDirectPlay8Address* pAddrHost, IDirectPlay8Address* pDeviceInfo,PVOID pUserEnumData, DWORD dwUserEnumDataSize, DWORD dwEnumCount, DWORD dwRetryInterval, DWORD dwTimeOut,PVOID pvUserContext, DPNHANDLE* pAsyncHandle, DWORD dwFlags) PURE;
+    STDMETHOD(DestroyPeer)(THIS_ DPNID dpnidClient, const void* pvDestroyData, DWORD dwDestroyDataSize, DWORD dwFlags) PURE;
+    STDMETHOD(ReturnBuffer)(THIS_ DPNHANDLE hBufferHandle, DWORD dwFlags) PURE;
+    STDMETHOD(GetPlayerContext)(THIS_ DPNID dpnid,PVOID* ppvPlayerContext, DWORD dwFlags) PURE;
+    STDMETHOD(GetGroupContext)(THIS_ DPNID dpnid,PVOID* ppvGroupContext, DWORD dwFlags) PURE;
+    STDMETHOD(GetCaps)(THIS_ DPN_CAPS* pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetCaps)(THIS_ const DPN_CAPS* pdpCaps, DWORD dwFlags) PURE;
+    STDMETHOD(SetSPCaps)(THIS_ const GUID* pguidSP, const DPN_SP_CAPS* pdpspCaps, DWORD dwFlags ) PURE;
+    STDMETHOD(GetSPCaps)(THIS_ const GUID* pguidSP, DPN_SP_CAPS* pdpspCaps, DWORD dwFlags) PURE;
+    STDMETHOD(GetConnectionInfo)(THIS_ DPNID dpnid, DPN_CONNECTION_INFO* pdpConnectionInfo, DWORD dwFlags) PURE;
+    STDMETHOD(RegisterLobby)(THIS_ DPNHANDLE dpnHandle, struct IDirectPlay8LobbiedApplication* pIDP8LobbiedApplication, DWORD dwFlags) PURE;
+    STDMETHOD(TerminateSession)(THIS_ void* pvTerminateData, DWORD dwTerminateDataSize, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -915,12 +915,12 @@ DECLARE_INTERFACE_(IDirectPlay8ThreadPool,IUnknown)
     STDMETHOD_(HRESULT,QueryInterface)(THIS_ REFIID riid, void** ppvObject) PURE;
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
-    /*** IDirectPlay8ThreadPool methods ***/	
-    STDMETHOD(Initialize)(THIS_ PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetThreadCount)(THIS_ CONST DWORD dwProcessorNum, DWORD* CONST pdwNumThreads, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetThreadCount)(THIS_ CONST DWORD dwProcessorNum, CONST DWORD dwNumThreads, CONST DWORD dwFlags) PURE;
-    STDMETHOD(DoWork)(THIS_ CONST DWORD dwAllowedTimeSlice, CONST DWORD dwFlags) PURE;
+    /*** IDirectPlay8ThreadPool methods ***/
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(GetThreadCount)(THIS_ DWORD dwProcessorNum, DWORD* pdwNumThreads, DWORD dwFlags) PURE;
+    STDMETHOD(SetThreadCount)(THIS_ DWORD dwProcessorNum, DWORD dwNumThreads, DWORD dwFlags) PURE;
+    STDMETHOD(DoWork)(THIS_ DWORD dwAllowedTimeSlice, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -958,12 +958,12 @@ DECLARE_INTERFACE_(IDirectPlay8NATResolver,IUnknown)
     STDMETHOD_(HRESULT,QueryInterface)(THIS_ REFIID riid, void** ppvObject) PURE;
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
-    /*** IDirectPlay8NATResolver methods ***/	
-    STDMETHOD(Initialize)(THIS_ PVOID CONST pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Start)(THIS_ IDirectPlay8Address** CONST ppDevices, CONST DWORD dwNumDevices, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumDevices)(THIS_ DPN_SERVICE_PROVIDER_INFO* CONST pSPInfoBuffer, PDWORD CONST pdwBufferSize, PDWORD CONST pdwNumDevices, CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetAddresses)(THIS_ IDirectPlay8Address** CONST ppAddresses, DWORD* CONST pdwNumAddresses, CONST DWORD dwFlags) PURE;
+    /*** IDirectPlay8NATResolver methods ***/
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(Start)(THIS_ IDirectPlay8Address** ppDevices, DWORD dwNumDevices, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(EnumDevices)(THIS_ DPN_SERVICE_PROVIDER_INFO* pSPInfoBuffer, PDWORD pdwBufferSize, PDWORD pdwNumDevices, DWORD dwFlags) PURE;
+    STDMETHOD(GetAddresses)(THIS_ IDirectPlay8Address** ppAddresses, DWORD* pdwNumAddresses, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -993,7 +993,7 @@ DECLARE_INTERFACE_(IDirectPlay8NATResolver,IUnknown)
 
 /* Export functions */
 
-HRESULT WINAPI DirectPlay8Create(CONST CLSID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
+HRESULT WINAPI DirectPlay8Create(const CLSID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
 
 #ifdef __cplusplus
 }
diff --git a/mingw-w64-headers/direct-x/include/dplobby8.h b/mingw-w64-headers/direct-x/include/dplobby8.h
index cf3a00a..dbd3bc1 100644
--- a/mingw-w64-headers/direct-x/include/dplobby8.h
+++ b/mingw-w64-headers/direct-x/include/dplobby8.h
@@ -152,15 +152,15 @@ DECLARE_INTERFACE_(IDirectPlay8LobbiedApplication,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8LobbiedApplication methods ***/
-    STDMETHOD(Initialize)(THIS_ CONST PVOID pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, DPNHANDLE* CONST pdpnhConnection, CONST DWORD dwFlags) PURE;
-    STDMETHOD(RegisterProgram)(THIS_ PDPL_PROGRAM_DESC pdplProgramDesc, CONST DWORD dwFlags) PURE;
-    STDMETHOD(UnRegisterProgram)(THIS_ GUID* pguidApplication, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Send)(THIS_ CONST DPNHANDLE hConnection, BYTE* CONST pBuffer, CONST DWORD pBufferSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetAppAvailable)(THIS_ CONST WINBOOL fAvailable, CONST DWORD dwFlags) PURE;
-    STDMETHOD(UpdateStatus)(THIS_ CONST DPNHANDLE hConnection, CONST DWORD dwStatus, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetConnectionSettings)(THIS_ CONST DPNHANDLE hConnection, DPL_CONNECTION_SETTINGS* CONST pdplSessionInfo, DWORD* pdwInfoSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(SetConnectionSettings)(THIS_ CONST DPNHANDLE hConnection, CONST DPL_CONNECTION_SETTINGS* CONST pdplSessionInfo, CONST DWORD dwFlags) PURE;
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DPNHANDLE* pdpnhConnection, DWORD dwFlags) PURE;
+    STDMETHOD(RegisterProgram)(THIS_ PDPL_PROGRAM_DESC pdplProgramDesc, DWORD dwFlags) PURE;
+    STDMETHOD(UnRegisterProgram)(THIS_ GUID* pguidApplication, DWORD dwFlags) PURE;
+    STDMETHOD(Send)(THIS_ DPNHANDLE hConnection, BYTE* pBuffer, DWORD pBufferSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetAppAvailable)(THIS_ WINBOOL fAvailable, DWORD dwFlags) PURE;
+    STDMETHOD(UpdateStatus)(THIS_ DPNHANDLE hConnection, DWORD dwStatus, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(GetConnectionSettings)(THIS_ DPNHANDLE hConnection, DPL_CONNECTION_SETTINGS* pdplSessionInfo, DWORD* pdwInfoSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetConnectionSettings)(THIS_ DPNHANDLE hConnection, const DPL_CONNECTION_SETTINGS* pdplSessionInfo, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -207,14 +207,14 @@ DECLARE_INTERFACE_(IDirectPlay8LobbyClient,IUnknown)
     STDMETHOD_(ULONG,AddRef)(THIS) PURE;
     STDMETHOD_(ULONG,Release)(THIS) PURE;
     /*** IDirectPlay8LobbyClient methods ***/
-    STDMETHOD(Initialize)(THIS_ CONST PVOID pvUserContext, CONST PFNDPNMESSAGEHANDLER pfn, CONST DWORD dwFlags) PURE;
-    STDMETHOD(EnumLocalPrograms)(THIS_ GUID* CONST pGuidApplication, BYTE* CONST pEnumData, DWORD* CONST pdwEnumData, DWORD* CONST pdwItems, CONST DWORD dwFlags) PURE;
-    STDMETHOD(ConnectApplication)(THIS_ DPL_CONNECT_INFO* CONST pdplConnectionInfo, CONST PVOID pvConnectionContext, DPNHANDLE* CONST hApplication, CONST DWORD dwTimeOut, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Send)(THIS_ CONST DPNHANDLE hConnection, BYTE* CONST pBuffer, CONST DWORD pBufferSize, CONST DWORD dwFlags) PURE;
-    STDMETHOD(ReleaseApplication)(THIS_ CONST DPNHANDLE hConnection, CONST DWORD dwFlags) PURE;
-    STDMETHOD(Close)(THIS_ CONST DWORD dwFlags) PURE;
-    STDMETHOD(GetConnectionSettings)(THIS_ CONST DPNHANDLE hConnection, DPL_CONNECTION_SETTINGS* CONST pdplSessionInfo, DWORD* pdwInfoSize, CONST DWORD dwFlags) PURE;	
-    STDMETHOD(SetConnectionSettings)(THIS_ CONST DPNHANDLE hConnection, CONST DPL_CONNECTION_SETTINGS* CONST pdplSessionInfo, CONST DWORD dwFlags) PURE;
+    STDMETHOD(Initialize)(THIS_ PVOID pvUserContext, PFNDPNMESSAGEHANDLER pfn, DWORD dwFlags) PURE;
+    STDMETHOD(EnumLocalPrograms)(THIS_ GUID* pGuidApplication, BYTE* pEnumData, DWORD* pdwEnumData, DWORD* pdwItems, DWORD dwFlags) PURE;
+    STDMETHOD(ConnectApplication)(THIS_ DPL_CONNECT_INFO* pdplConnectionInfo, PVOID pvConnectionContext, DPNHANDLE* hApplication, DWORD dwTimeOut, DWORD dwFlags) PURE;
+    STDMETHOD(Send)(THIS_ DPNHANDLE hConnection, BYTE* pBuffer, DWORD pBufferSize, DWORD dwFlags) PURE;
+    STDMETHOD(ReleaseApplication)(THIS_ DPNHANDLE hConnection, DWORD dwFlags) PURE;
+    STDMETHOD(Close)(THIS_ DWORD dwFlags) PURE;
+    STDMETHOD(GetConnectionSettings)(THIS_ DPNHANDLE hConnection, DPL_CONNECTION_SETTINGS* pdplSessionInfo, DWORD* pdwInfoSize, DWORD dwFlags) PURE;
+    STDMETHOD(SetConnectionSettings)(THIS_ DPNHANDLE hConnection, const DPL_CONNECTION_SETTINGS* pdplSessionInfo, DWORD dwFlags) PURE;
 };
 #undef INTERFACE
 
@@ -251,7 +251,7 @@ DECLARE_INTERFACE_(IDirectPlay8LobbyClient,IUnknown)
 
 /* Export functions */
 
-HRESULT WINAPI DirectPlay8LobbyCreate(CONST GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
+HRESULT WINAPI DirectPlay8LobbyCreate(const GUID* pcIID, LPVOID* ppvInterface, IUnknown* pUnknown);
 
 #ifdef __cplusplus
 }
diff --git a/mingw-w64-headers/direct-x/include/dpnathlp.h b/mingw-w64-headers/direct-x/include/dpnathlp.h
index a1b2026..05c6082 100644
--- a/mingw-w64-headers/direct-x/include/dpnathlp.h
+++ b/mingw-w64-headers/direct-x/include/dpnathlp.h
@@ -116,56 +116,56 @@ DECLARE_INTERFACE_(IDirectPlayNATHelp,IUnknown)
 
    /*** IDirectPlayNATHelp functions ***/
    STDMETHOD(Initialize)     (THIS_
-                              const DWORD dwFlags) PURE;
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(Close)          (THIS_
-                              const DWORD dwFlags) PURE;
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(GetCaps)        (THIS_
-                              const PDPNHCAPS pCaps,
-                              const DWORD dwFlags) PURE;
+                              PDPNHCAPS pCaps,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(RegisterPorts)  (THIS_
-                              const PSOCKADDR aLocalAddresses,
-                              const DWORD dwAddressSize,
-                              const DWORD dwAddresses,
-                              const DWORD dwTime,
-                              const PDPNHHANDLE phRegisteredPorts,
-                              const DWORD dwFlags) PURE;
+                              PSOCKADDR aLocalAddresses,
+                              DWORD dwAddressSize,
+                              DWORD dwAddresses,
+                              DWORD dwTime,
+                              PDPNHHANDLE phRegisteredPorts,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(GetRegisteredAddresses) (THIS_
-                              const PDPNHHANDLE hRegisteredPorts,
-                              const PSOCKADDR paPublicAddresses,
+                              PDPNHHANDLE hRegisteredPorts,
+                              PSOCKADDR paPublicAddresses,
                               const DWORD *dwAddressSize,
                               const DWORD *dwAddressFlags,
                               const DWORD *dwRemaining,
-                              const DWORD dwFlags) PURE;
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(DeregisterPorts)(THIS_
-                              const DPNHHANDLE hRegPorts,
-                              const DWORD dwFlags) PURE;
+                              DPNHHANDLE hRegPorts,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(QueryAddress)   (THIS_
-                              const PSOCKADDR pSource,
-                              const PSOCKADDR pQuery,
-                              const PSOCKADDR pResponse,
-                              const INT iAddresses,
-                              const DWORD dwFlags) PURE;
+                              PSOCKADDR pSource,
+                              PSOCKADDR pQuery,
+                              PSOCKADDR pResponse,
+                              INT iAddresses,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(SetAlertEvent)  (THIS_
-                              const HANDLE hEvent,
-                              const DWORD dwFlags) PURE;
+                              HANDLE hEvent,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(SetAlertIOCompletionPort)(THIS_
-                              const HANDLE hIOCompletionPort,
-                              const DWORD dwCompletion,
-                              const DWORD dwMaxThreads,
-                              const DWORD dwFlags) PURE;
+                              HANDLE hIOCompletionPort,
+                              DWORD dwCompletion,
+                              DWORD dwMaxThreads,
+                              DWORD dwFlags) PURE;
 
    STDMETHOD(ExtendRegisteredPortsLease)(THIS_
-                              const DPNHHANDLE hRegisteredPorts,
-                              const DWORD dwLeaseTime,
-                              const DWORD dwFlags) PURE;
+                              DPNHHANDLE hRegisteredPorts,
+                              DWORD dwLeaseTime,
+                              DWORD dwFlags) PURE;
 };
 
 #undef INTERFACE
diff --git a/mingw-w64-headers/direct-x/include/vfwmsgs.h b/mingw-w64-headers/direct-x/include/vfwmsgs.h
index 16b25c3..be5ff84 100644
--- a/mingw-w64-headers/direct-x/include/vfwmsgs.h
+++ b/mingw-w64-headers/direct-x/include/vfwmsgs.h
@@ -155,7 +155,18 @@
 #define VFW_E_VMR_NOT_IN_MIXER_MODE      ((HRESULT)0x80040296)
 #define VFW_E_VMR_NO_AP_SUPPLIED         ((HRESULT)0x80040297)
 #define VFW_E_VMR_NO_DEINTERLACE_HW      ((HRESULT)0x80040298)
+#define VFW_E_VMR_NO_PROCAMP_HW          ((HRESULT)0x80040299)
 #define VFW_E_DVD_VMR9_INCOMPATIBLEDEC   ((HRESULT)0x8004029A)
+#define VFW_E_NO_COPP_HW                 ((HRESULT)0x8004029B)
+#define VFW_E_DVD_NONBLOCKING            ((HRESULT)0x8004029C)
+#define VFW_E_DVD_TOO_MANY_RENDERERS_IN_FILTER_GRAPH    ((HRESULT)0x8004029D)
+#define VFW_E_DVD_NON_EVR_RENDERER_IN_FILTER_GRAPH      ((HRESULT)0x8004029E)
+#define VFW_E_DVD_RESOLUTION_ERROR       ((HRESULT)0x8004029F)
+#define VFW_E_CODECAPI_LINEAR_RANGE      ((HRESULT)0x80040310)
+#define VFW_E_CODECAPI_ENUMERATED        ((HRESULT)0x80040311)
+#define VFW_E_CODECAPI_NO_DEFAULT        ((HRESULT)0x80040313)
+#define VFW_E_CODECAPI_NO_CURRENT_VALUE  ((HRESULT)0x80040314)
+#define VFW_E_DVD_CHAPTER_DOES_NOT_EXIST ((HRESULT)0x80040315)
 #define VFW_E_BAD_KEY                    ((HRESULT)0x800403F2)
 
 #ifndef E_PROP_ID_UNSUPPORTED
diff --git a/mingw-w64-headers/include/axextend.idl b/mingw-w64-headers/include/axextend.idl
index acc66a5..207dbce 100644
--- a/mingw-w64-headers/include/axextend.idl
+++ b/mingw-w64-headers/include/axextend.idl
@@ -22,6 +22,8 @@ interface IAMAudioInputMixer;
 interface IAMAudioRendererStats;
 interface IAMBufferNegotiation;
 interface IAMCameraControl;
+interface IAMCertifiedOutputProtection;
+interface IAMClockSlave;
 interface IAMCopyCaptureFileProgress;
 interface IAMCrossbar;
 interface IAMDevMemoryAllocator;
@@ -731,6 +733,122 @@ interface ICaptureGraphBuilder2 : IUnknown
         [out] IPin **ppPin);
 }
 
+[
+    local,
+    object,
+    uuid(5acd6aa0-f482-11ce-8b67-00aa00a3f1a6),
+    pointer_default(unique)
+]
+interface IConfigAviMux : IUnknown
+{
+    HRESULT SetMasterStream(
+        [in] LONG iStream);
+
+    HRESULT GetMasterStream(
+        [out] LONG *pStream);
+
+    HRESULT SetOutputCompatibilityIndex(
+        [in] BOOL fOldIndex);
+
+    HRESULT GetOutputCompatibilityIndex(
+        [out] BOOL *pfOldIndex);
+}
+
+[
+    local,
+    object,
+    uuid(bee3d220-157b-11d0-bd23-00a0c911ce86),
+    pointer_default(unique)
+]
+interface IConfigInterleaving : IUnknown
+{
+    typedef enum InterleavingMode {
+        INTERLEAVE_NONE,
+        INTERLEAVE_CAPTURE,
+        INTERLEAVE_FULL,
+        INTERLEAVE_NONE_BUFFERED
+    } InterleavingMode;
+
+    HRESULT put_Mode(
+        [in] InterleavingMode mode);
+
+    HRESULT get_Mode(
+        [out] InterleavingMode *pMode);
+
+    HRESULT put_Interleaving(
+        [in] const REFERENCE_TIME *prtInterleave,
+        [in] const REFERENCE_TIME *prtPreroll);
+
+    HRESULT get_Interleaving(
+        [out] REFERENCE_TIME *prtInterleave,
+        [out] REFERENCE_TIME *prtPreroll);
+}
+
+[
+    local,
+    object,
+    uuid(9fd52741-176d-4b36-8f51-ca8f933223be),
+    pointer_default(unique)
+]
+interface IAMClockSlave : IUnknown
+{
+    HRESULT SetErrorTolerance(
+        [in] DWORD dwTolerance);
+
+    HRESULT GetErrorTolerance(
+        [out] DWORD *pdwTolerance);
+}
+
+typedef struct _AMCOPPSignature {
+    BYTE Signature[256];
+} AMCOPPSignature;
+
+typedef struct _AMCOPPCommand {
+    GUID macKDI;
+    GUID guidCommandID;
+    DWORD dwSequence;
+    DWORD bSizeData;
+    BYTE CommandData[4056];
+} AMCOPPCommand, *LPAMCOPPCommand;
+
+typedef struct _AMCOPPStatusInput {
+    GUID rApp;
+    GUID guidStatusRequestID;
+    DWORD dwSequence;
+    DWORD cbSizeData;
+    BYTE StatusData[4056];
+} AMCOPPStatusInput, *LPAMCOPPStatusInput;
+
+typedef struct _AMCOPPStatusOutput {
+    GUID macKDI;
+    DWORD cbSizeData;
+    BYTE COPPStatus[4076];
+} AMCOPPStatusOutput, *LPAMCOPPStatusOutput;
+
+[
+    local,
+    object,
+    uuid(6feded3e-0ff1-4901-a2f1-43f7012c8515),
+    pointer_default(unique)
+]
+interface IAMCertifiedOutputProtection : IUnknown
+{
+    HRESULT KeyExchange (
+        [out] GUID* pRandom,
+        [out] BYTE** VarLenCertGH,
+        [out] DWORD* pdwLengthCertGH);
+
+    HRESULT SessionSequenceStart(
+        [in] AMCOPPSignature* pSig);
+
+    HRESULT ProtectionCommand(
+        [in] const AMCOPPCommand* cmd);
+
+    HRESULT ProtectionStatus(
+        [in] const AMCOPPStatusInput* pStatusInput,
+        [out] AMCOPPStatusOutput* pStatusOutput);
+};
+
 enum _AM_RENSDEREXFLAGS
 {
     AM_RENDEREX_RENDERTOEXISTINGRENDERERS = 0x01
@@ -988,6 +1106,44 @@ interface IResourceManager : IUnknown
 
 }
 
+typedef enum AM_STREAM_INFO_FLAGS
+{
+    AM_STREAM_INFO_START_DEFINED   = 0x01,
+    AM_STREAM_INFO_STOP_DEFINED    = 0x02,
+    AM_STREAM_INFO_DISCARDING      = 0x04,
+    AM_STREAM_INFO_STOP_SEND_EXTRA = 0x10
+} AM_STREAM_INFO_FLAGS;
+
+typedef struct AM_STREAM_INFO
+{
+    REFERENCE_TIME tStart;
+    REFERENCE_TIME tStop;
+    DWORD dwStartCookie;
+    DWORD dwStopCookie;
+    DWORD dwFlags;
+} AM_STREAM_INFO;
+
+[
+    local,
+    object,
+    uuid(36b73881-c2c8-11cf-8b46-00805f6cef60),
+    pointer_default(unique)
+]
+interface IAMStreamControl : IUnknown
+{
+    HRESULT StartAt(
+        [in] const REFERENCE_TIME *ptStart,
+        [in] DWORD dwCookie);
+
+    HRESULT StopAt(
+        [in] const REFERENCE_TIME *ptStop,
+        [in] BOOL bSendExtra,
+        [in] DWORD dwCookie);
+
+    HRESULT GetInfo(
+        [out] AM_STREAM_INFO *pInfo);
+}
+
 cpp_quote("#ifndef _IKsPropertySet_")
 cpp_quote("#define _IKsPropertySet_")
 cpp_quote("#define KSPROPERTY_SUPPORT_GET  1")
@@ -1023,6 +1179,45 @@ interface IKsPropertySet : IUnknown
 cpp_quote("#endif /* _IKsPropertySet_ */")
 
 [
+    local,
+    object,
+    uuid(6025a880-c0d5-11d0-bd4e-00a0c911ce86),
+    pointer_default(unique)
+]
+interface IMediaPropertyBag : IPropertyBag
+{
+    typedef IMediaPropertyBag *LPMEDIAPROPERTYBAG;
+
+    HRESULT EnumProperty(
+            [in]  ULONG iProperty,
+            [in, out] VARIANT *pvarPropertyName,
+            [in, out] VARIANT *pvarPropertyValue);
+}
+
+
+[
+    local,
+    object,
+    uuid(5738e040-b67f-11d0-bd4d-00a0c911ce86),
+    pointer_default(unique)
+]
+interface IPersistMediaPropertyBag : IPersist
+{
+    HRESULT InitNew(void);
+
+    HRESULT Load(
+            [in] IMediaPropertyBag *pPropBag,
+            [in] IErrorLog *pErrorLog);
+
+    HRESULT Save(
+            [in] IMediaPropertyBag *pPropBag,
+            [in] BOOL fClearDirty,
+            [in] BOOL fSaveAllProperties);
+
+    typedef IPersistMediaPropertyBag *LPPERSISTMEDIAPROPERTYBAG;
+}
+
+[
     object,
     uuid(36b73883-c2c8-11cf-8b46-00805f6cef60),
     pointer_default(unique)
diff --git a/mingw-w64-headers/include/corerror.h b/mingw-w64-headers/include/corerror.h
index 3ddfe47..6419ea1 100644
--- a/mingw-w64-headers/include/corerror.h
+++ b/mingw-w64-headers/include/corerror.h
@@ -126,5 +126,9 @@
 
 #define CLR_E_SHIM_RUNTIME              EMAKEHR(0x1700)
 #define CLR_E_SHIM_RUNTIMEEXPORT        EMAKEHR(0x1701)
+#define CLR_E_SHIM_INSTALLROOT          EMAKEHR(0x1702)
+#define CLR_E_SHIM_INSTALLCOMP          EMAKEHR(0x1703)
+#define CLR_E_SHIM_LEGACYRUNTIMEALREADYBOUND EMAKEHR(0x1704)
+#define CLR_E_SHIM_SHUTDOWNINPROGRESS   EMAKEHR(0x1705)
 
-#endif	/* __WINE_CORERROR_H */
+#endif    /* __WINE_CORERROR_H */
diff --git a/mingw-w64-headers/include/msctf.h b/mingw-w64-headers/include/msctf.h
index f714d46..15cc6a6 100644
--- a/mingw-w64-headers/include/msctf.h
+++ b/mingw-w64-headers/include/msctf.h
@@ -237,6 +237,11 @@ typedef interface ITfSourceSingle ITfSourceSingle;
 typedef interface ITfThreadFocusSink ITfThreadFocusSink;
 #endif
 
+#ifndef __ITfInputProcessorProfileActivationSink_FWD_DEFINED__
+#define __ITfInputProcessorProfileActivationSink_FWD_DEFINED__
+typedef interface ITfInputProcessorProfileActivationSink ITfInputProcessorProfileActivationSink;
+#endif
+
 /* Headers for imported files */
 
 #include <oaidl.h>
@@ -298,6 +303,7 @@ typedef DWORD TfGuidAtom;
 #define TF_MOD_IGNORE_ALL_MODIFIER   0x0400
 #define TF_PROFILETYPE_INPUTPROCESSOR  0x0001
 #define TF_PROFILETYPE_KEYBOARDLAYOUT  0x0002
+#define TF_IPSINK_FLAG_ACTIVE 0x0001
 #ifndef __ITfDocumentMgr_FWD_DEFINED__
 #define __ITfDocumentMgr_FWD_DEFINED__
 typedef interface ITfDocumentMgr ITfDocumentMgr;
@@ -1442,6 +1448,8 @@ void __RPC_STUB ITfContext_CreateRangeBackup_Stub(
 
 #endif  /* __ITfContext_INTERFACE_DEFINED__ */
 
+#define TF_INVALID_COOKIE (0xffffffff)
+
 /*****************************************************************************
  * ITfSource interface
  */
@@ -8783,6 +8791,108 @@ void __RPC_STUB ITfThreadFocusSink_OnKillThreadFocus_Stub(
 
 #endif  /* __ITfThreadFocusSink_INTERFACE_DEFINED__ */
 
+/*****************************************************************************
+ * ITfInputProcessorProfileActivationSink interface
+ */
+#ifndef __ITfInputProcessorProfileActivationSink_INTERFACE_DEFINED__
+#define __ITfInputProcessorProfileActivationSink_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_ITfInputProcessorProfileActivationSink, 0x71c6e74e, 0x0f28, 0x11d8, 0xa8,0x2a, 0x00,0x06,0x5b,0x84,0x43,0x5c);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("71c6e74e-0f28-11d8-a82a-00065b84435c")
+ITfInputProcessorProfileActivationSink : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE OnActivated(
+        DWORD dwProfileType,
+        LANGID langid,
+        REFCLSID clsid,
+        REFGUID catid,
+        REFGUID guidProfile,
+        HKL hkl,
+        DWORD dwFlags) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(ITfInputProcessorProfileActivationSink, 0x71c6e74e, 0x0f28, 0x11d8, 0xa8,0x2a, 0x00,0x06,0x5b,0x84,0x43,0x5c)
+#endif
+#else
+typedef struct ITfInputProcessorProfileActivationSinkVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        ITfInputProcessorProfileActivationSink* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        ITfInputProcessorProfileActivationSink* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        ITfInputProcessorProfileActivationSink* This);
+
+    /*** ITfInputProcessorProfileActivationSink methods ***/
+    HRESULT (STDMETHODCALLTYPE *OnActivated)(
+        ITfInputProcessorProfileActivationSink* This,
+        DWORD dwProfileType,
+        LANGID langid,
+        REFCLSID clsid,
+        REFGUID catid,
+        REFGUID guidProfile,
+        HKL hkl,
+        DWORD dwFlags);
+
+    END_INTERFACE
+} ITfInputProcessorProfileActivationSinkVtbl;
+interface ITfInputProcessorProfileActivationSink {
+    CONST_VTBL ITfInputProcessorProfileActivationSinkVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define ITfInputProcessorProfileActivationSink_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define ITfInputProcessorProfileActivationSink_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define ITfInputProcessorProfileActivationSink_Release(This) (This)->lpVtbl->Release(This)
+/*** ITfInputProcessorProfileActivationSink methods ***/
+#define ITfInputProcessorProfileActivationSink_OnActivated(This,dwProfileType,langid,clsid,catid,guidProfile,hkl,dwFlags) (This)->lpVtbl->OnActivated(This,dwProfileType,langid,clsid,catid,guidProfile,hkl,dwFlags)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT ITfInputProcessorProfileActivationSink_QueryInterface(ITfInputProcessorProfileActivationSink* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG ITfInputProcessorProfileActivationSink_AddRef(ITfInputProcessorProfileActivationSink* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG ITfInputProcessorProfileActivationSink_Release(ITfInputProcessorProfileActivationSink* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** ITfInputProcessorProfileActivationSink methods ***/
+static FORCEINLINE HRESULT ITfInputProcessorProfileActivationSink_OnActivated(ITfInputProcessorProfileActivationSink* This,DWORD dwProfileType,LANGID langid,REFCLSID clsid,REFGUID catid,REFGUID guidProfile,HKL hkl,DWORD dwFlags) {
+    return This->lpVtbl->OnActivated(This,dwProfileType,langid,clsid,catid,guidProfile,hkl,dwFlags);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE ITfInputProcessorProfileActivationSink_OnActivated_Proxy(
+    ITfInputProcessorProfileActivationSink* This,
+    DWORD dwProfileType,
+    LANGID langid,
+    REFCLSID clsid,
+    REFGUID catid,
+    REFGUID guidProfile,
+    HKL hkl,
+    DWORD dwFlags);
+void __RPC_STUB ITfInputProcessorProfileActivationSink_OnActivated_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __ITfInputProcessorProfileActivationSink_INTERFACE_DEFINED__ */
+
 /* Begin additional prototypes for all interfaces */
 
 ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
diff --git a/mingw-w64-headers/include/msctf.idl b/mingw-w64-headers/include/msctf.idl
index a3db32e..e4b54e4 100644
--- a/mingw-w64-headers/include/msctf.idl
+++ b/mingw-w64-headers/include/msctf.idl
@@ -84,6 +84,8 @@ cpp_quote("#define TF_MOD_IGNORE_ALL_MODIFIER   0x0400")
 cpp_quote("#define TF_PROFILETYPE_INPUTPROCESSOR  0x0001")
 cpp_quote("#define TF_PROFILETYPE_KEYBOARDLAYOUT  0x0002")
 
+cpp_quote("#define TF_IPSINK_FLAG_ACTIVE 0x0001")
+
 interface ITfDocumentMgr;
 interface ITfContext;
 interface IEnumTfDocumentMgrs;
@@ -326,6 +328,8 @@ interface ITfContext : IUnknown
 
 };
 
+const DWORD TF_INVALID_COOKIE = 0xffffffff;
+
 [
   object,
   uuid(4ea48a35-60ae-446f-8fd6-e6a8d82459f7),
@@ -1522,3 +1526,20 @@ interface ITfThreadFocusSink : IUnknown
 
     HRESULT OnKillThreadFocus();
 };
+
+[
+  object,
+  uuid(71c6e74e-0f28-11d8-a82a-00065b84435c),
+  pointer_default(unique)
+]
+interface ITfInputProcessorProfileActivationSink : IUnknown
+{
+    HRESULT OnActivated(
+        [in] DWORD dwProfileType,
+        [in] LANGID langid,
+        [in] REFCLSID clsid,
+        [in] REFGUID catid,
+        [in] REFGUID guidProfile,
+        [in] HKL hkl,
+        [in] DWORD dwFlags);
+}
diff --git a/mingw-w64-headers/include/strmif.h b/mingw-w64-headers/include/strmif.h
index 6284089..827a830 100644
--- a/mingw-w64-headers/include/strmif.h
+++ b/mingw-w64-headers/include/strmif.h
@@ -1,4 +1,4 @@
-/*** Autogenerated by WIDL 1.5.25 from include/strmif.idl - Do not edit ***/
+/*** Autogenerated by WIDL 1.6 from include/strmif.idl - Do not edit ***/
 
 #ifndef __REQUIRED_RPCNDR_H_VERSION__
 #define __REQUIRED_RPCNDR_H_VERSION__ 475
@@ -62,6 +62,16 @@ typedef interface IBaseFilter IBaseFilter;
 typedef interface IReferenceClock IReferenceClock;
 #endif
 
+#ifndef __IReferenceClockTimerControl_FWD_DEFINED__
+#define __IReferenceClockTimerControl_FWD_DEFINED__
+typedef interface IReferenceClockTimerControl IReferenceClockTimerControl;
+#endif
+
+#ifndef __IReferenceClock2_FWD_DEFINED__
+#define __IReferenceClock2_FWD_DEFINED__
+typedef interface IReferenceClock2 IReferenceClock2;
+#endif
+
 #ifndef __IMediaSample_FWD_DEFINED__
 #define __IMediaSample_FWD_DEFINED__
 typedef interface IMediaSample IMediaSample;
@@ -72,6 +82,11 @@ typedef interface IMediaSample IMediaSample;
 typedef interface IMediaSample2 IMediaSample2;
 #endif
 
+#ifndef __IMediaSample2Config_FWD_DEFINED__
+#define __IMediaSample2Config_FWD_DEFINED__
+typedef interface IMediaSample2Config IMediaSample2Config;
+#endif
+
 #ifndef __IMemAllocator_FWD_DEFINED__
 #define __IMemAllocator_FWD_DEFINED__
 typedef interface IMemAllocator IMemAllocator;
@@ -182,6 +197,26 @@ typedef interface IAMCopyCaptureFileProgress IAMCopyCaptureFileProgress;
 typedef interface ICaptureGraphBuilder2 ICaptureGraphBuilder2;
 #endif
 
+#ifndef __IConfigAviMux_FWD_DEFINED__
+#define __IConfigAviMux_FWD_DEFINED__
+typedef interface IConfigAviMux IConfigAviMux;
+#endif
+
+#ifndef __IConfigInterleaving_FWD_DEFINED__
+#define __IConfigInterleaving_FWD_DEFINED__
+typedef interface IConfigInterleaving IConfigInterleaving;
+#endif
+
+#ifndef __IAMClockSlave_FWD_DEFINED__
+#define __IAMClockSlave_FWD_DEFINED__
+typedef interface IAMClockSlave IAMClockSlave;
+#endif
+
+#ifndef __IAMCertifiedOutputProtection_FWD_DEFINED__
+#define __IAMCertifiedOutputProtection_FWD_DEFINED__
+typedef interface IAMCertifiedOutputProtection IAMCertifiedOutputProtection;
+#endif
+
 #ifndef __IFilterGraph2_FWD_DEFINED__
 #define __IFilterGraph2_FWD_DEFINED__
 typedef interface IFilterGraph2 IFilterGraph2;
@@ -222,11 +257,26 @@ typedef interface IResourceConsumer IResourceConsumer;
 typedef interface IResourceManager IResourceManager;
 #endif
 
+#ifndef __IAMStreamControl_FWD_DEFINED__
+#define __IAMStreamControl_FWD_DEFINED__
+typedef interface IAMStreamControl IAMStreamControl;
+#endif
+
 #ifndef __IKsPropertySet_FWD_DEFINED__
 #define __IKsPropertySet_FWD_DEFINED__
 typedef interface IKsPropertySet IKsPropertySet;
 #endif
 
+#ifndef __IMediaPropertyBag_FWD_DEFINED__
+#define __IMediaPropertyBag_FWD_DEFINED__
+typedef interface IMediaPropertyBag IMediaPropertyBag;
+#endif
+
+#ifndef __IPersistMediaPropertyBag_FWD_DEFINED__
+#define __IPersistMediaPropertyBag_FWD_DEFINED__
+typedef interface IPersistMediaPropertyBag IPersistMediaPropertyBag;
+#endif
+
 #ifndef __ISeekingPassThru_FWD_DEFINED__
 #define __ISeekingPassThru_FWD_DEFINED__
 typedef interface ISeekingPassThru ISeekingPassThru;
@@ -252,14 +302,26 @@ typedef interface IAMGraphBuilderCallback IAMGraphBuilderCallback;
 extern "C" {
 #endif
 
-#define CDEF_CLASS_DEFAULT 0x0001
-#define CDEF_BYPASS_CLASS_MANAGER 0x0002
-#define CDEF_MERIT_ABOVE_DO_NOT_USE 0x0008
-#define CDEF_DEVMON_CMGR_DEVICE 0x0010
-#define CDEF_DEVMON_DMO 0x0020
-#define CDEF_DEVMON_PNP_DEVICE 0x0040
-#define CDEF_DEVMON_FILTER 0x0080
-#define CDEF_DEVMON_SELECTIVE_MASK 0x00f0
+/**
+ * This file is part of the mingw-w64 runtime package.
+ * No warranty is given; refer to the file DISCLAIMER within this package.
+ */
+
+#include <winapifamily.h>
+
+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+
+#define CDEF_CLASS_DEFAULT 0x1
+#define CDEF_BYPASS_CLASS_MANAGER 0x2
+#define CDEF_MERIT_ABOVE_DO_NOT_USE 0x8
+#define CDEF_DEVMON_CMGR_DEVICE 0x10
+#define CDEF_DEVMON_DMO 0x20
+#define CDEF_DEVMON_PNP_DEVICE 0x40
+#define CDEF_DEVMON_FILTER 0x80
+
+#define CDEF_DEVMON_SELECTIVE_MASK 0xf0
+
+
 /*****************************************************************************
  * ICreateDevEnum interface
  */
@@ -350,10 +412,22 @@ void __RPC_STUB ICreateDevEnum_CreateClassEnumerator_Stub(
 
 #endif  /* __ICreateDevEnum_INTERFACE_DEFINED__ */
 
+#endif
+/**
+ * This file is part of the mingw-w64 runtime package.
+ * No warranty is given; refer to the file DISCLAIMER within this package.
+ */
+
+#include <winapifamily.h>
+
+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+
 #define CHARS_IN_GUID 39
+
 #ifdef WINE_NO_UNICODE_MACROS
 #undef GetTimeFormat
 #endif
+
 typedef struct _AMMediaType {
     GUID majortype;
     GUID subtype;
@@ -365,28 +439,35 @@ typedef struct _AMMediaType {
     ULONG cbFormat;
     BYTE *pbFormat;
 } AM_MEDIA_TYPE;
+
 typedef enum _PinDirection {
     PINDIR_INPUT = 0,
     PINDIR_OUTPUT = 1
 } PIN_DIRECTION;
-#define MAX_PIN_NAME    128
+
+#define MAX_PIN_NAME 128
 #define MAX_FILTER_NAME 128
+
 #ifndef REFERENCE_TIME_DEFINED
 #define REFERENCE_TIME_DEFINED
 typedef LONGLONG REFERENCE_TIME;
 #endif
+
 #ifndef REFTIME_DEFINED
 #define REFTIME_DEFINED
-typedef DOUBLE REFTIME;
+typedef double REFTIME;
 #endif
+
 typedef DWORD_PTR HSEMAPHORE;
 typedef DWORD_PTR HEVENT;
+
 typedef struct _AllocatorProperties {
     LONG cBuffers;
     LONG cbBuffer;
     LONG cbAlign;
     LONG cbPrefix;
 } ALLOCATOR_PROPERTIES;
+
 #ifndef __IAMovieSetup_FWD_DEFINED__
 #define __IAMovieSetup_FWD_DEFINED__
 typedef interface IAMovieSetup IAMovieSetup;
@@ -457,6 +538,7 @@ typedef interface IPin IPin;
 typedef interface IReferenceClock IReferenceClock;
 #endif
 
+
 /*****************************************************************************
  * IPin interface
  */
@@ -468,6 +550,7 @@ typedef struct _PinInfo {
     PIN_DIRECTION dir;
     WCHAR achName[128];
 } PIN_INFO;
+
 DEFINE_GUID(IID_IPin, 0x56a86891, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70);
 #if defined(__cplusplus) && !defined(CINTERFACE)
 MIDL_INTERFACE("56a86891-0ad4-11ce-b03a-0020af0ba770")
@@ -820,6 +903,7 @@ void __RPC_STUB IPin_NewSegment_Stub(
 #endif  /* __IPin_INTERFACE_DEFINED__ */
 
 typedef IPin *PPIN;
+
 /*****************************************************************************
  * IEnumPins interface
  */
@@ -966,6 +1050,7 @@ void __RPC_STUB IEnumPins_Clone_Stub(
 #endif  /* __IEnumPins_INTERFACE_DEFINED__ */
 
 typedef IEnumPins *PENUMPINS;
+
 /*****************************************************************************
  * IEnumMediaTypes interface
  */
@@ -1112,6 +1197,7 @@ void __RPC_STUB IEnumMediaTypes_Clone_Stub(
 #endif  /* __IEnumMediaTypes_INTERFACE_DEFINED__ */
 
 typedef IEnumMediaTypes *PENUMMEDIATYPES;
+
 /*****************************************************************************
  * IFilterGraph interface
  */
@@ -1340,6 +1426,7 @@ void __RPC_STUB IFilterGraph_SetDefaultSyncSource_Stub(
 #endif  /* __IFilterGraph_INTERFACE_DEFINED__ */
 
 typedef IFilterGraph *PFILTERGRAPH;
+
 /*****************************************************************************
  * IEnumFilters interface
  */
@@ -1486,6 +1573,7 @@ void __RPC_STUB IEnumFilters_Clone_Stub(
 #endif  /* __IEnumFilters_INTERFACE_DEFINED__ */
 
 typedef IEnumFilters *PENUMFILTERS;
+
 /*****************************************************************************
  * IMediaFilter interface
  */
@@ -1497,6 +1585,7 @@ typedef enum _FilterState {
     State_Paused = 1,
     State_Running = 2
 } FILTER_STATE;
+
 DEFINE_GUID(IID_IMediaFilter, 0x56a86899, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70);
 #if defined(__cplusplus) && !defined(CINTERFACE)
 MIDL_INTERFACE("56a86899-0ad4-11ce-b03a-0020af0ba770")
@@ -1681,6 +1770,7 @@ void __RPC_STUB IMediaFilter_GetSyncSource_Stub(
 #endif  /* __IMediaFilter_INTERFACE_DEFINED__ */
 
 typedef IMediaFilter *PMEDIAFILTER;
+
 /*****************************************************************************
  * IBaseFilter interface
  */
@@ -1691,6 +1781,7 @@ typedef struct _FilterInfo {
     WCHAR achName[128];
     IFilterGraph *pGraph;
 } FILTER_INFO;
+
 DEFINE_GUID(IID_IBaseFilter, 0x56a86895, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70);
 #if defined(__cplusplus) && !defined(CINTERFACE)
 MIDL_INTERFACE("56a86895-0ad4-11ce-b03a-0020af0ba770")
@@ -1913,6 +2004,7 @@ void __RPC_STUB IBaseFilter_QueryVendorInfo_Stub(
 #endif  /* __IBaseFilter_INTERFACE_DEFINED__ */
 
 typedef IBaseFilter *PFILTER;
+
 /*****************************************************************************
  * IReferenceClock interface
  */
@@ -2073,6 +2165,216 @@ void __RPC_STUB IReferenceClock_Unadvise_Stub(
 #endif  /* __IReferenceClock_INTERFACE_DEFINED__ */
 
 typedef IReferenceClock *PREFERENCECLOCK;
+
+/*****************************************************************************
+ * IReferenceClockTimerControl interface
+ */
+#ifndef __IReferenceClockTimerControl_INTERFACE_DEFINED__
+#define __IReferenceClockTimerControl_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IReferenceClockTimerControl, 0xebec459c, 0x2eca, 0x4d42, 0xa8,0xaf, 0x30,0xdf,0x55,0x76,0x14,0xb8);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("ebec459c-2eca-4d42-a8af-30df557614b8")
+IReferenceClockTimerControl : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE SetDefaultTimerResolution(
+        REFERENCE_TIME timerResolution) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetDefaultTimerResolution(
+        REFERENCE_TIME *pTimerResolution) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IReferenceClockTimerControl, 0xebec459c, 0x2eca, 0x4d42, 0xa8,0xaf, 0x30,0xdf,0x55,0x76,0x14,0xb8)
+#endif
+#else
+typedef struct IReferenceClockTimerControlVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IReferenceClockTimerControl* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IReferenceClockTimerControl* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IReferenceClockTimerControl* This);
+
+    /*** IReferenceClockTimerControl methods ***/
+    HRESULT (STDMETHODCALLTYPE *SetDefaultTimerResolution)(
+        IReferenceClockTimerControl* This,
+        REFERENCE_TIME timerResolution);
+
+    HRESULT (STDMETHODCALLTYPE *GetDefaultTimerResolution)(
+        IReferenceClockTimerControl* This,
+        REFERENCE_TIME *pTimerResolution);
+
+    END_INTERFACE
+} IReferenceClockTimerControlVtbl;
+interface IReferenceClockTimerControl {
+    CONST_VTBL IReferenceClockTimerControlVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IReferenceClockTimerControl_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IReferenceClockTimerControl_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IReferenceClockTimerControl_Release(This) (This)->lpVtbl->Release(This)
+/*** IReferenceClockTimerControl methods ***/
+#define IReferenceClockTimerControl_SetDefaultTimerResolution(This,timerResolution) (This)->lpVtbl->SetDefaultTimerResolution(This,timerResolution)
+#define IReferenceClockTimerControl_GetDefaultTimerResolution(This,pTimerResolution) (This)->lpVtbl->GetDefaultTimerResolution(This,pTimerResolution)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IReferenceClockTimerControl_QueryInterface(IReferenceClockTimerControl* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IReferenceClockTimerControl_AddRef(IReferenceClockTimerControl* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IReferenceClockTimerControl_Release(IReferenceClockTimerControl* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IReferenceClockTimerControl methods ***/
+static FORCEINLINE HRESULT IReferenceClockTimerControl_SetDefaultTimerResolution(IReferenceClockTimerControl* This,REFERENCE_TIME timerResolution) {
+    return This->lpVtbl->SetDefaultTimerResolution(This,timerResolution);
+}
+static FORCEINLINE HRESULT IReferenceClockTimerControl_GetDefaultTimerResolution(IReferenceClockTimerControl* This,REFERENCE_TIME *pTimerResolution) {
+    return This->lpVtbl->GetDefaultTimerResolution(This,pTimerResolution);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IReferenceClockTimerControl_SetDefaultTimerResolution_Proxy(
+    IReferenceClockTimerControl* This,
+    REFERENCE_TIME timerResolution);
+void __RPC_STUB IReferenceClockTimerControl_SetDefaultTimerResolution_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IReferenceClockTimerControl_GetDefaultTimerResolution_Proxy(
+    IReferenceClockTimerControl* This,
+    REFERENCE_TIME *pTimerResolution);
+void __RPC_STUB IReferenceClockTimerControl_GetDefaultTimerResolution_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IReferenceClockTimerControl_INTERFACE_DEFINED__ */
+
+
+/*****************************************************************************
+ * IReferenceClock2 interface
+ */
+#ifndef __IReferenceClock2_INTERFACE_DEFINED__
+#define __IReferenceClock2_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IReferenceClock2, 0x36b73885, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("36b73885-c2c8-11cf-8b46-00805f6cef60")
+IReferenceClock2 : public IReferenceClock
+{
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IReferenceClock2, 0x36b73885, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60)
+#endif
+#else
+typedef struct IReferenceClock2Vtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IReferenceClock2* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IReferenceClock2* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IReferenceClock2* This);
+
+    /*** IReferenceClock methods ***/
+    HRESULT (STDMETHODCALLTYPE *GetTime)(
+        IReferenceClock2* This,
+        REFERENCE_TIME *pTime);
+
+    HRESULT (STDMETHODCALLTYPE *AdviseTime)(
+        IReferenceClock2* This,
+        REFERENCE_TIME baseTime,
+        REFERENCE_TIME streamTime,
+        HEVENT hEvent,
+        DWORD_PTR *pdwAdviseCookie);
+
+    HRESULT (STDMETHODCALLTYPE *AdvisePeriodic)(
+        IReferenceClock2* This,
+        REFERENCE_TIME startTime,
+        REFERENCE_TIME periodTime,
+        HSEMAPHORE hSemaphore,
+        DWORD_PTR *pdwAdviseCookie);
+
+    HRESULT (STDMETHODCALLTYPE *Unadvise)(
+        IReferenceClock2* This,
+        DWORD_PTR dwAdviseCookie);
+
+    END_INTERFACE
+} IReferenceClock2Vtbl;
+interface IReferenceClock2 {
+    CONST_VTBL IReferenceClock2Vtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IReferenceClock2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IReferenceClock2_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IReferenceClock2_Release(This) (This)->lpVtbl->Release(This)
+/*** IReferenceClock methods ***/
+#define IReferenceClock2_GetTime(This,pTime) (This)->lpVtbl->GetTime(This,pTime)
+#define IReferenceClock2_AdviseTime(This,baseTime,streamTime,hEvent,pdwAdviseCookie) (This)->lpVtbl->AdviseTime(This,baseTime,streamTime,hEvent,pdwAdviseCookie)
+#define IReferenceClock2_AdvisePeriodic(This,startTime,periodTime,hSemaphore,pdwAdviseCookie) (This)->lpVtbl->AdvisePeriodic(This,startTime,periodTime,hSemaphore,pdwAdviseCookie)
+#define IReferenceClock2_Unadvise(This,dwAdviseCookie) (This)->lpVtbl->Unadvise(This,dwAdviseCookie)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IReferenceClock2_QueryInterface(IReferenceClock2* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IReferenceClock2_AddRef(IReferenceClock2* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IReferenceClock2_Release(IReferenceClock2* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IReferenceClock methods ***/
+static FORCEINLINE HRESULT IReferenceClock2_GetTime(IReferenceClock2* This,REFERENCE_TIME *pTime) {
+    return This->lpVtbl->GetTime(This,pTime);
+}
+static FORCEINLINE HRESULT IReferenceClock2_AdviseTime(IReferenceClock2* This,REFERENCE_TIME baseTime,REFERENCE_TIME streamTime,HEVENT hEvent,DWORD_PTR *pdwAdviseCookie) {
+    return This->lpVtbl->AdviseTime(This,baseTime,streamTime,hEvent,pdwAdviseCookie);
+}
+static FORCEINLINE HRESULT IReferenceClock2_AdvisePeriodic(IReferenceClock2* This,REFERENCE_TIME startTime,REFERENCE_TIME periodTime,HSEMAPHORE hSemaphore,DWORD_PTR *pdwAdviseCookie) {
+    return This->lpVtbl->AdvisePeriodic(This,startTime,periodTime,hSemaphore,pdwAdviseCookie);
+}
+static FORCEINLINE HRESULT IReferenceClock2_Unadvise(IReferenceClock2* This,DWORD_PTR dwAdviseCookie) {
+    return This->lpVtbl->Unadvise(This,dwAdviseCookie);
+}
+#endif
+#endif
+
+#endif
+
+
+#endif  /* __IReferenceClock2_INTERFACE_DEFINED__ */
+
+typedef IReferenceClock2 *PREFERENCECLOCK2;
+
 /*****************************************************************************
  * IMediaSample interface
  */
@@ -2114,7 +2416,7 @@ IMediaSample : public IUnknown
         ) = 0;
 
     virtual HRESULT STDMETHODCALLTYPE SetActualDataLength(
-        LONG length) = 0;
+        LONG a) = 0;
 
     virtual HRESULT STDMETHODCALLTYPE GetMediaType(
         AM_MEDIA_TYPE **ppMediaType) = 0;
@@ -2193,7 +2495,7 @@ typedef struct IMediaSampleVtbl {
 
     HRESULT (STDMETHODCALLTYPE *SetActualDataLength)(
         IMediaSample* This,
-        LONG length);
+        LONG a);
 
     HRESULT (STDMETHODCALLTYPE *GetMediaType)(
         IMediaSample* This,
@@ -2242,7 +2544,7 @@ interface IMediaSample {
 #define IMediaSample_IsPreroll(This) (This)->lpVtbl->IsPreroll(This)
 #define IMediaSample_SetPreroll(This,bIsPreroll) (This)->lpVtbl->SetPreroll(This,bIsPreroll)
 #define IMediaSample_GetActualDataLength(This) (This)->lpVtbl->GetActualDataLength(This)
-#define IMediaSample_SetActualDataLength(This,length) (This)->lpVtbl->SetActualDataLength(This,length)
+#define IMediaSample_SetActualDataLength(This,a) (This)->lpVtbl->SetActualDataLength(This,a)
 #define IMediaSample_GetMediaType(This,ppMediaType) (This)->lpVtbl->GetMediaType(This,ppMediaType)
 #define IMediaSample_SetMediaType(This,pMediaType) (This)->lpVtbl->SetMediaType(This,pMediaType)
 #define IMediaSample_IsDiscontinuity(This) (This)->lpVtbl->IsDiscontinuity(This)
@@ -2288,8 +2590,8 @@ static FORCEINLINE HRESULT IMediaSample_SetPreroll(IMediaSample* This,WINBOOL bI
 static FORCEINLINE LONG IMediaSample_GetActualDataLength(IMediaSample* This) {
     return This->lpVtbl->GetActualDataLength(This);
 }
-static FORCEINLINE HRESULT IMediaSample_SetActualDataLength(IMediaSample* This,LONG length) {
-    return This->lpVtbl->SetActualDataLength(This,length);
+static FORCEINLINE HRESULT IMediaSample_SetActualDataLength(IMediaSample* This,LONG a) {
+    return This->lpVtbl->SetActualDataLength(This,a);
 }
 static FORCEINLINE HRESULT IMediaSample_GetMediaType(IMediaSample* This,AM_MEDIA_TYPE **ppMediaType) {
     return This->lpVtbl->GetMediaType(This,ppMediaType);
@@ -2386,7 +2688,7 @@ void __RPC_STUB IMediaSample_GetActualDataLength_Stub(
     DWORD* pdwStubPhase);
 HRESULT STDMETHODCALLTYPE IMediaSample_SetActualDataLength_Proxy(
     IMediaSample* This,
-    LONG length);
+    LONG a);
 void __RPC_STUB IMediaSample_SetActualDataLength_Stub(
     IRpcStubBuffer* This,
     IRpcChannelBuffer* pRpcChannelBuffer,
@@ -2445,6 +2747,7 @@ void __RPC_STUB IMediaSample_SetMediaTime_Stub(
 #endif  /* __IMediaSample_INTERFACE_DEFINED__ */
 
 typedef IMediaSample *PMEDIASAMPLE;
+
 enum tagAM_SAMPLE_PROPERTY_FLAGS {
     AM_SAMPLE_SPLICEPOINT = 0x1,
     AM_SAMPLE_PREROLL = 0x2,
@@ -2459,6 +2762,7 @@ enum tagAM_SAMPLE_PROPERTY_FLAGS {
     AM_STREAM_CONTROL = 1
 };
 
+
 typedef struct tagAM_SAMPLE2_PROPERTIES {
     DWORD cbData;
     DWORD dwTypeSpecificFlags;
@@ -2471,6 +2775,7 @@ typedef struct tagAM_SAMPLE2_PROPERTIES {
     BYTE *pbBuffer;
     LONG cbBuffer;
 } AM_SAMPLE2_PROPERTIES;
+
 /*****************************************************************************
  * IMediaSample2 interface
  */
@@ -2547,7 +2852,7 @@ typedef struct IMediaSample2Vtbl {
 
     HRESULT (STDMETHODCALLTYPE *SetActualDataLength)(
         IMediaSample2* This,
-        LONG length);
+        LONG a);
 
     HRESULT (STDMETHODCALLTYPE *GetMediaType)(
         IMediaSample2* This,
@@ -2607,7 +2912,7 @@ interface IMediaSample2 {
 #define IMediaSample2_IsPreroll(This) (This)->lpVtbl->IsPreroll(This)
 #define IMediaSample2_SetPreroll(This,bIsPreroll) (This)->lpVtbl->SetPreroll(This,bIsPreroll)
 #define IMediaSample2_GetActualDataLength(This) (This)->lpVtbl->GetActualDataLength(This)
-#define IMediaSample2_SetActualDataLength(This,length) (This)->lpVtbl->SetActualDataLength(This,length)
+#define IMediaSample2_SetActualDataLength(This,a) (This)->lpVtbl->SetActualDataLength(This,a)
 #define IMediaSample2_GetMediaType(This,ppMediaType) (This)->lpVtbl->GetMediaType(This,ppMediaType)
 #define IMediaSample2_SetMediaType(This,pMediaType) (This)->lpVtbl->SetMediaType(This,pMediaType)
 #define IMediaSample2_IsDiscontinuity(This) (This)->lpVtbl->IsDiscontinuity(This)
@@ -2656,8 +2961,8 @@ static FORCEINLINE HRESULT IMediaSample2_SetPreroll(IMediaSample2* This,WINBOOL
 static FORCEINLINE LONG IMediaSample2_GetActualDataLength(IMediaSample2* This) {
     return This->lpVtbl->GetActualDataLength(This);
 }
-static FORCEINLINE HRESULT IMediaSample2_SetActualDataLength(IMediaSample2* This,LONG length) {
-    return This->lpVtbl->SetActualDataLength(This,length);
+static FORCEINLINE HRESULT IMediaSample2_SetActualDataLength(IMediaSample2* This,LONG a) {
+    return This->lpVtbl->SetActualDataLength(This,a);
 }
 static FORCEINLINE HRESULT IMediaSample2_GetMediaType(IMediaSample2* This,AM_MEDIA_TYPE **ppMediaType) {
     return This->lpVtbl->GetMediaType(This,ppMediaType);
@@ -2711,72 +3016,159 @@ void __RPC_STUB IMediaSample2_SetProperties_Stub(
 #endif  /* __IMediaSample2_INTERFACE_DEFINED__ */
 
 typedef IMediaSample2 *PMEDIASAMPLE2;
-#define AM_GBF_PREVFRAMESKIPPED 1
-#define AM_GBF_NOTASYNCPOINT 2
-#define AM_GBF_NOWAIT 4
-#define AM_GBF_NODDSURFACELOCK 8
+
 /*****************************************************************************
- * IMemAllocator interface
+ * IMediaSample2Config interface
  */
-#ifndef __IMemAllocator_INTERFACE_DEFINED__
-#define __IMemAllocator_INTERFACE_DEFINED__
+#ifndef __IMediaSample2Config_INTERFACE_DEFINED__
+#define __IMediaSample2Config_INTERFACE_DEFINED__
 
-DEFINE_GUID(IID_IMemAllocator, 0x56a8689c, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70);
+DEFINE_GUID(IID_IMediaSample2Config, 0x68961e68, 0x832b, 0x41ea, 0xbc,0x91, 0x63,0x59,0x3f,0x3e,0x70,0xe3);
 #if defined(__cplusplus) && !defined(CINTERFACE)
-MIDL_INTERFACE("56a8689c-0ad4-11ce-b03a-0020af0ba770")
-IMemAllocator : public IUnknown
+MIDL_INTERFACE("68961e68-832b-41ea-bc91-63593f3e70e3")
+IMediaSample2Config : public IUnknown
 {
-    virtual HRESULT STDMETHODCALLTYPE SetProperties(
-        ALLOCATOR_PROPERTIES *pRequest,
-        ALLOCATOR_PROPERTIES *pActual) = 0;
-
-    virtual HRESULT STDMETHODCALLTYPE GetProperties(
-        ALLOCATOR_PROPERTIES *pProps) = 0;
-
-    virtual HRESULT STDMETHODCALLTYPE Commit(
-        ) = 0;
-
-    virtual HRESULT STDMETHODCALLTYPE Decommit(
-        ) = 0;
-
-    virtual HRESULT STDMETHODCALLTYPE GetBuffer(
-        IMediaSample **ppBuffer,
-        REFERENCE_TIME *pStartTime,
-        REFERENCE_TIME *pEndTime,
-        DWORD dwFlags) = 0;
-
-    virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer(
-        IMediaSample *pBuffer) = 0;
+    virtual HRESULT STDMETHODCALLTYPE GetSurface(
+        IUnknown **ppDirect3DSurface9) = 0;
 
 };
 #ifdef __CRT_UUID_DECL
-__CRT_UUID_DECL(IMemAllocator, 0x56a8689c, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70)
+__CRT_UUID_DECL(IMediaSample2Config, 0x68961e68, 0x832b, 0x41ea, 0xbc,0x91, 0x63,0x59,0x3f,0x3e,0x70,0xe3)
 #endif
 #else
-typedef struct IMemAllocatorVtbl {
+typedef struct IMediaSample2ConfigVtbl {
     BEGIN_INTERFACE
 
     /*** IUnknown methods ***/
     HRESULT (STDMETHODCALLTYPE *QueryInterface)(
-        IMemAllocator* This,
+        IMediaSample2Config* This,
         REFIID riid,
         void **ppvObject);
 
     ULONG (STDMETHODCALLTYPE *AddRef)(
-        IMemAllocator* This);
+        IMediaSample2Config* This);
 
     ULONG (STDMETHODCALLTYPE *Release)(
-        IMemAllocator* This);
-
-    /*** IMemAllocator methods ***/
-    HRESULT (STDMETHODCALLTYPE *SetProperties)(
-        IMemAllocator* This,
-        ALLOCATOR_PROPERTIES *pRequest,
-        ALLOCATOR_PROPERTIES *pActual);
+        IMediaSample2Config* This);
 
-    HRESULT (STDMETHODCALLTYPE *GetProperties)(
-        IMemAllocator* This,
-        ALLOCATOR_PROPERTIES *pProps);
+    /*** IMediaSample2Config methods ***/
+    HRESULT (STDMETHODCALLTYPE *GetSurface)(
+        IMediaSample2Config* This,
+        IUnknown **ppDirect3DSurface9);
+
+    END_INTERFACE
+} IMediaSample2ConfigVtbl;
+interface IMediaSample2Config {
+    CONST_VTBL IMediaSample2ConfigVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IMediaSample2Config_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IMediaSample2Config_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IMediaSample2Config_Release(This) (This)->lpVtbl->Release(This)
+/*** IMediaSample2Config methods ***/
+#define IMediaSample2Config_GetSurface(This,ppDirect3DSurface9) (This)->lpVtbl->GetSurface(This,ppDirect3DSurface9)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IMediaSample2Config_QueryInterface(IMediaSample2Config* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IMediaSample2Config_AddRef(IMediaSample2Config* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IMediaSample2Config_Release(IMediaSample2Config* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IMediaSample2Config methods ***/
+static FORCEINLINE HRESULT IMediaSample2Config_GetSurface(IMediaSample2Config* This,IUnknown **ppDirect3DSurface9) {
+    return This->lpVtbl->GetSurface(This,ppDirect3DSurface9);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IMediaSample2Config_GetSurface_Proxy(
+    IMediaSample2Config* This,
+    IUnknown **ppDirect3DSurface9);
+void __RPC_STUB IMediaSample2Config_GetSurface_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IMediaSample2Config_INTERFACE_DEFINED__ */
+
+
+#define AM_GBF_PREVFRAMESKIPPED 1
+#define AM_GBF_NOTASYNCPOINT 2
+#define AM_GBF_NOWAIT 4
+#define AM_GBF_NODDSURFACELOCK 8
+
+/*****************************************************************************
+ * IMemAllocator interface
+ */
+#ifndef __IMemAllocator_INTERFACE_DEFINED__
+#define __IMemAllocator_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IMemAllocator, 0x56a8689c, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("56a8689c-0ad4-11ce-b03a-0020af0ba770")
+IMemAllocator : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE SetProperties(
+        ALLOCATOR_PROPERTIES *pRequest,
+        ALLOCATOR_PROPERTIES *pActual) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetProperties(
+        ALLOCATOR_PROPERTIES *pProps) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE Commit(
+        ) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE Decommit(
+        ) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetBuffer(
+        IMediaSample **ppBuffer,
+        REFERENCE_TIME *pStartTime,
+        REFERENCE_TIME *pEndTime,
+        DWORD dwFlags) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE ReleaseBuffer(
+        IMediaSample *pBuffer) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IMemAllocator, 0x56a8689c, 0x0ad4, 0x11ce, 0xb0,0x3a, 0x00,0x20,0xaf,0x0b,0xa7,0x70)
+#endif
+#else
+typedef struct IMemAllocatorVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IMemAllocator* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IMemAllocator* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IMemAllocator* This);
+
+    /*** IMemAllocator methods ***/
+    HRESULT (STDMETHODCALLTYPE *SetProperties)(
+        IMemAllocator* This,
+        ALLOCATOR_PROPERTIES *pRequest,
+        ALLOCATOR_PROPERTIES *pActual);
+
+    HRESULT (STDMETHODCALLTYPE *GetProperties)(
+        IMemAllocator* This,
+        ALLOCATOR_PROPERTIES *pProps);
 
     HRESULT (STDMETHODCALLTYPE *Commit)(
         IMemAllocator* This);
@@ -2903,6 +3295,7 @@ void __RPC_STUB IMemAllocator_ReleaseBuffer_Stub(
 #endif  /* __IMemAllocator_INTERFACE_DEFINED__ */
 
 typedef IMemAllocator *PMEMALLOCATOR;
+
 /*****************************************************************************
  * IMemAllocatorCallbackTemp interface
  */
@@ -3059,6 +3452,7 @@ void __RPC_STUB IMemAllocatorCallbackTemp_GetFreeCount_Stub(
 
 #endif  /* __IMemAllocatorCallbackTemp_INTERFACE_DEFINED__ */
 
+
 /*****************************************************************************
  * IMemAllocatorNotifyCallbackTemp interface
  */
@@ -3141,6 +3535,7 @@ void __RPC_STUB IMemAllocatorNotifyCallbackTemp_NotifyRelease_Stub(
 
 #endif  /* __IMemAllocatorNotifyCallbackTemp_INTERFACE_DEFINED__ */
 
+
 /*****************************************************************************
  * IMemInputPin interface
  */
@@ -3328,6 +3723,7 @@ void __RPC_STUB IMemInputPin_ReceiveCanBlock_Stub(
 #endif  /* __IMemInputPin_INTERFACE_DEFINED__ */
 
 typedef IMemInputPin *PMEMINPUTPIN;
+
 /*****************************************************************************
  * IAMovieSetup interface
  */
@@ -3428,6 +3824,7 @@ void __RPC_STUB IAMovieSetup_Unregister_Stub(
 #endif  /* __IAMovieSetup_INTERFACE_DEFINED__ */
 
 typedef IAMovieSetup *PAMOVIESETUP;
+
 typedef enum AM_SEEKING_SeekingFlags {
     AM_SEEKING_NoPositioning = 0x0,
     AM_SEEKING_AbsolutePositioning = 0x1,
@@ -3439,6 +3836,7 @@ typedef enum AM_SEEKING_SeekingFlags {
     AM_SEEKING_Segment = 0x10,
     AM_SEEKING_NoFlush = 0x20
 } AM_SEEKING_SEEKING_FLAGS;
+
 typedef enum AM_SEEKING_SeekingCapabilities {
     AM_SEEKING_CanSeekAbsolute = 0x1,
     AM_SEEKING_CanSeekForwards = 0x2,
@@ -3450,6 +3848,7 @@ typedef enum AM_SEEKING_SeekingCapabilities {
     AM_SEEKING_CanDoSegments = 0x80,
     AM_SEEKING_Source = 0x100
 } AM_SEEKING_SEEKING_CAPABILITIES;
+
 /*****************************************************************************
  * IMediaSeeking interface
  */
@@ -3863,10 +4262,12 @@ void __RPC_STUB IMediaSeeking_GetPreroll_Stub(
 #endif  /* __IMediaSeeking_INTERFACE_DEFINED__ */
 
 typedef IMediaSeeking *PMEDIASEEKING;
+
 enum tagAM_MEDIAEVENT_FLAGS {
-    AM_MEDIAEVENT_NONOTIFY = 0x1
+  AM_MEDIAEVENT_NONOTIFY = 0x1
 };
 
+#endif
 #ifndef __IAMAnalogVideoDecoder_FWD_DEFINED__
 #define __IAMAnalogVideoDecoder_FWD_DEFINED__
 typedef interface IAMAnalogVideoDecoder IAMAnalogVideoDecoder;
@@ -3897,6 +4298,16 @@ typedef interface IAMBufferNegotiation IAMBufferNegotiation;
 typedef interface IAMCameraControl IAMCameraControl;
 #endif
 
+#ifndef __IAMCertifiedOutputProtection_FWD_DEFINED__
+#define __IAMCertifiedOutputProtection_FWD_DEFINED__
+typedef interface IAMCertifiedOutputProtection IAMCertifiedOutputProtection;
+#endif
+
+#ifndef __IAMClockSlave_FWD_DEFINED__
+#define __IAMClockSlave_FWD_DEFINED__
+typedef interface IAMClockSlave IAMClockSlave;
+#endif
+
 #ifndef __IAMCopyCaptureFileProgress_FWD_DEFINED__
 #define __IAMCopyCaptureFileProgress_FWD_DEFINED__
 typedef interface IAMCopyCaptureFileProgress IAMCopyCaptureFileProgress;
@@ -4132,7 +4543,7 @@ typedef interface IQualityControl IQualityControl;
 typedef interface ISeekingPassThru ISeekingPassThru;
 #endif
 
-typedef struct __WIDL_axextend_generated_name_00000000 {
+typedef struct __WIDL_strmif_generated_name_00000002 {
     CLSID Clsid;
     LPWSTR Name;
 } REGFILTER;
@@ -4577,11 +4988,11 @@ void __RPC_STUB IFilterMapper_EnumMatchingFilters_Stub(
 
 #endif  /* __IFilterMapper_INTERFACE_DEFINED__ */
 
-typedef struct __WIDL_axextend_generated_name_00000001 {
+typedef struct __WIDL_strmif_generated_name_00000003 {
     const CLSID *clsMajorType;
     const CLSID *clsMinorType;
 } REGPINTYPES;
-typedef struct __WIDL_axextend_generated_name_00000002 {
+typedef struct __WIDL_strmif_generated_name_00000004 {
     LPWSTR strName;
     WINBOOL bRendered;
     WINBOOL bOutput;
@@ -4592,7 +5003,7 @@ typedef struct __WIDL_axextend_generated_name_00000002 {
     UINT nMediaTypes;
     const REGPINTYPES *lpMediaType;
 } REGFILTERPINS;
-typedef struct __WIDL_axextend_generated_name_00000003 {
+typedef struct __WIDL_strmif_generated_name_00000005 {
     CLSID clsMedium;
     DWORD dw1;
     DWORD dw2;
@@ -4604,7 +5015,7 @@ enum {
     REG_PINFLAG_B_OUTPUT = 0x8
 };
 
-typedef struct __WIDL_axextend_generated_name_00000004 {
+typedef struct __WIDL_strmif_generated_name_00000006 {
     DWORD dwFlags;
     UINT cInstances;
     UINT nMediaTypes;
@@ -4613,7 +5024,7 @@ typedef struct __WIDL_axextend_generated_name_00000004 {
     const REGPINMEDIUM *lpMedium;
     const CLSID *clsPinCategory;
 } REGFILTERPINS2;
-typedef struct __WIDL_axextend_generated_name_00000005 {
+typedef struct __WIDL_strmif_generated_name_00000007 {
     DWORD dwVersion;
     DWORD dwMerit;
     __C89_NAMELESS union {
@@ -6123,7 +6534,7 @@ void __RPC_STUB IFileSinkFilter2_GetMode_Stub(
 #endif  /* __IFileSinkFilter2_INTERFACE_DEFINED__ */
 
 typedef IFileSinkFilter2 *PFILESINKFILTER2;
-typedef enum __WIDL_axextend_generated_name_00000006 {
+typedef enum __WIDL_strmif_generated_name_00000008 {
     AM_FILE_OVERWRITE = 0x1
 } AM_FILESINK_FLAGS;
 /*****************************************************************************
@@ -7100,130 +7511,702 @@ HRESULT __RPC_STUB ICaptureGraphBuilder2_FindInterface_Stub(
 
 #endif  /* __ICaptureGraphBuilder2_INTERFACE_DEFINED__ */
 
-enum _AM_RENSDEREXFLAGS {
-    AM_RENDEREX_RENDERTOEXISTINGRENDERERS = 0x1
-};
-
 /*****************************************************************************
- * IFilterGraph2 interface
+ * IConfigAviMux interface
  */
-#ifndef __IFilterGraph2_INTERFACE_DEFINED__
-#define __IFilterGraph2_INTERFACE_DEFINED__
+#ifndef __IConfigAviMux_INTERFACE_DEFINED__
+#define __IConfigAviMux_INTERFACE_DEFINED__
 
-DEFINE_GUID(IID_IFilterGraph2, 0x36b73882, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60);
+DEFINE_GUID(IID_IConfigAviMux, 0x5acd6aa0, 0xf482, 0x11ce, 0x8b,0x67, 0x00,0xaa,0x00,0xa3,0xf1,0xa6);
 #if defined(__cplusplus) && !defined(CINTERFACE)
-MIDL_INTERFACE("36b73882-c2c8-11cf-8b46-00805f6cef60")
-IFilterGraph2 : public IGraphBuilder
+MIDL_INTERFACE("5acd6aa0-f482-11ce-8b67-00aa00a3f1a6")
+IConfigAviMux : public IUnknown
 {
-    virtual HRESULT STDMETHODCALLTYPE AddSourceFilterForMoniker(
-        IMoniker *pMoniker,
-        IBindCtx *pCtx,
-        LPCWSTR lpcwstrFilterName,
-        IBaseFilter **ppFilter) = 0;
+    virtual HRESULT STDMETHODCALLTYPE SetMasterStream(
+        LONG iStream) = 0;
 
-    virtual HRESULT STDMETHODCALLTYPE ReconnectEx(
-        IPin *ppin,
-        const AM_MEDIA_TYPE *pmt) = 0;
+    virtual HRESULT STDMETHODCALLTYPE GetMasterStream(
+        LONG *pStream) = 0;
 
-    virtual HRESULT STDMETHODCALLTYPE RenderEx(
-        IPin *pPinOut,
-        DWORD dwFlags,
-        DWORD *pvContext) = 0;
+    virtual HRESULT STDMETHODCALLTYPE SetOutputCompatibilityIndex(
+        WINBOOL fOldIndex) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetOutputCompatibilityIndex(
+        WINBOOL *pfOldIndex) = 0;
 
 };
 #ifdef __CRT_UUID_DECL
-__CRT_UUID_DECL(IFilterGraph2, 0x36b73882, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60)
+__CRT_UUID_DECL(IConfigAviMux, 0x5acd6aa0, 0xf482, 0x11ce, 0x8b,0x67, 0x00,0xaa,0x00,0xa3,0xf1,0xa6)
 #endif
 #else
-typedef struct IFilterGraph2Vtbl {
+typedef struct IConfigAviMuxVtbl {
     BEGIN_INTERFACE
 
     /*** IUnknown methods ***/
     HRESULT (STDMETHODCALLTYPE *QueryInterface)(
-        IFilterGraph2* This,
+        IConfigAviMux* This,
         REFIID riid,
         void **ppvObject);
 
     ULONG (STDMETHODCALLTYPE *AddRef)(
-        IFilterGraph2* This);
+        IConfigAviMux* This);
 
     ULONG (STDMETHODCALLTYPE *Release)(
-        IFilterGraph2* This);
+        IConfigAviMux* This);
 
-    /*** IFilterGraph methods ***/
-    HRESULT (STDMETHODCALLTYPE *AddFilter)(
-        IFilterGraph2* This,
-        IBaseFilter *pFilter,
-        LPCWSTR pName);
+    /*** IConfigAviMux methods ***/
+    HRESULT (STDMETHODCALLTYPE *SetMasterStream)(
+        IConfigAviMux* This,
+        LONG iStream);
 
-    HRESULT (STDMETHODCALLTYPE *RemoveFilter)(
-        IFilterGraph2* This,
-        IBaseFilter *pFilter);
+    HRESULT (STDMETHODCALLTYPE *GetMasterStream)(
+        IConfigAviMux* This,
+        LONG *pStream);
 
-    HRESULT (STDMETHODCALLTYPE *EnumFilters)(
-        IFilterGraph2* This,
-        IEnumFilters **ppEnum);
+    HRESULT (STDMETHODCALLTYPE *SetOutputCompatibilityIndex)(
+        IConfigAviMux* This,
+        WINBOOL fOldIndex);
 
-    HRESULT (STDMETHODCALLTYPE *FindFilterByName)(
-        IFilterGraph2* This,
-        LPCWSTR pName,
-        IBaseFilter **ppFilter);
+    HRESULT (STDMETHODCALLTYPE *GetOutputCompatibilityIndex)(
+        IConfigAviMux* This,
+        WINBOOL *pfOldIndex);
 
-    HRESULT (STDMETHODCALLTYPE *ConnectDirect)(
-        IFilterGraph2* This,
-        IPin *ppinOut,
-        IPin *ppinIn,
-        const AM_MEDIA_TYPE *pmt);
+    END_INTERFACE
+} IConfigAviMuxVtbl;
+interface IConfigAviMux {
+    CONST_VTBL IConfigAviMuxVtbl* lpVtbl;
+};
 
-    HRESULT (STDMETHODCALLTYPE *Reconnect)(
-        IFilterGraph2* This,
-        IPin *ppin);
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IConfigAviMux_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IConfigAviMux_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IConfigAviMux_Release(This) (This)->lpVtbl->Release(This)
+/*** IConfigAviMux methods ***/
+#define IConfigAviMux_SetMasterStream(This,iStream) (This)->lpVtbl->SetMasterStream(This,iStream)
+#define IConfigAviMux_GetMasterStream(This,pStream) (This)->lpVtbl->GetMasterStream(This,pStream)
+#define IConfigAviMux_SetOutputCompatibilityIndex(This,fOldIndex) (This)->lpVtbl->SetOutputCompatibilityIndex(This,fOldIndex)
+#define IConfigAviMux_GetOutputCompatibilityIndex(This,pfOldIndex) (This)->lpVtbl->GetOutputCompatibilityIndex(This,pfOldIndex)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IConfigAviMux_QueryInterface(IConfigAviMux* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IConfigAviMux_AddRef(IConfigAviMux* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IConfigAviMux_Release(IConfigAviMux* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IConfigAviMux methods ***/
+static FORCEINLINE HRESULT IConfigAviMux_SetMasterStream(IConfigAviMux* This,LONG iStream) {
+    return This->lpVtbl->SetMasterStream(This,iStream);
+}
+static FORCEINLINE HRESULT IConfigAviMux_GetMasterStream(IConfigAviMux* This,LONG *pStream) {
+    return This->lpVtbl->GetMasterStream(This,pStream);
+}
+static FORCEINLINE HRESULT IConfigAviMux_SetOutputCompatibilityIndex(IConfigAviMux* This,WINBOOL fOldIndex) {
+    return This->lpVtbl->SetOutputCompatibilityIndex(This,fOldIndex);
+}
+static FORCEINLINE HRESULT IConfigAviMux_GetOutputCompatibilityIndex(IConfigAviMux* This,WINBOOL *pfOldIndex) {
+    return This->lpVtbl->GetOutputCompatibilityIndex(This,pfOldIndex);
+}
+#endif
+#endif
 
-    HRESULT (STDMETHODCALLTYPE *Disconnect)(
-        IFilterGraph2* This,
-        IPin *ppin);
+#endif
 
-    HRESULT (STDMETHODCALLTYPE *SetDefaultSyncSource)(
-        IFilterGraph2* This);
+HRESULT STDMETHODCALLTYPE IConfigAviMux_SetMasterStream_Proxy(
+    IConfigAviMux* This,
+    LONG iStream);
+void __RPC_STUB IConfigAviMux_SetMasterStream_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigAviMux_GetMasterStream_Proxy(
+    IConfigAviMux* This,
+    LONG *pStream);
+void __RPC_STUB IConfigAviMux_GetMasterStream_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigAviMux_SetOutputCompatibilityIndex_Proxy(
+    IConfigAviMux* This,
+    WINBOOL fOldIndex);
+void __RPC_STUB IConfigAviMux_SetOutputCompatibilityIndex_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigAviMux_GetOutputCompatibilityIndex_Proxy(
+    IConfigAviMux* This,
+    WINBOOL *pfOldIndex);
+void __RPC_STUB IConfigAviMux_GetOutputCompatibilityIndex_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
 
-    /*** IGraphBuilder methods ***/
-    HRESULT (STDMETHODCALLTYPE *Connect)(
-        IFilterGraph2* This,
-        IPin *ppinOut,
-        IPin *ppinIn);
+#endif  /* __IConfigAviMux_INTERFACE_DEFINED__ */
 
-    HRESULT (STDMETHODCALLTYPE *Render)(
-        IFilterGraph2* This,
-        IPin *ppinOut);
+/*****************************************************************************
+ * IConfigInterleaving interface
+ */
+#ifndef __IConfigInterleaving_INTERFACE_DEFINED__
+#define __IConfigInterleaving_INTERFACE_DEFINED__
 
-    HRESULT (STDMETHODCALLTYPE *RenderFile)(
-        IFilterGraph2* This,
-        LPCWSTR lpcwstrFile,
-        LPCWSTR lpcwstrPlayList);
+typedef enum InterleavingMode {
+    INTERLEAVE_NONE = 0,
+    INTERLEAVE_CAPTURE = 1,
+    INTERLEAVE_FULL = 2,
+    INTERLEAVE_NONE_BUFFERED = 3
+} InterleavingMode;
+DEFINE_GUID(IID_IConfigInterleaving, 0xbee3d220, 0x157b, 0x11d0, 0xbd,0x23, 0x00,0xa0,0xc9,0x11,0xce,0x86);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("bee3d220-157b-11d0-bd23-00a0c911ce86")
+IConfigInterleaving : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE put_Mode(
+        InterleavingMode mode) = 0;
 
-    HRESULT (STDMETHODCALLTYPE *AddSourceFilter)(
-        IFilterGraph2* This,
-        LPCWSTR lpcwstrFileName,
-        LPCWSTR lpcwstrFilterName,
-        IBaseFilter **ppFilter);
+    virtual HRESULT STDMETHODCALLTYPE get_Mode(
+        InterleavingMode *pMode) = 0;
 
-    HRESULT (STDMETHODCALLTYPE *SetLogFile)(
-        IFilterGraph2* This,
-        DWORD_PTR hFile);
+    virtual HRESULT STDMETHODCALLTYPE put_Interleaving(
+        const REFERENCE_TIME *prtInterleave,
+        const REFERENCE_TIME *prtPreroll) = 0;
 
-    HRESULT (STDMETHODCALLTYPE *Abort)(
-        IFilterGraph2* This);
+    virtual HRESULT STDMETHODCALLTYPE get_Interleaving(
+        REFERENCE_TIME *prtInterleave,
+        REFERENCE_TIME *prtPreroll) = 0;
 
-    HRESULT (STDMETHODCALLTYPE *ShouldOperationContinue)(
-        IFilterGraph2* This);
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IConfigInterleaving, 0xbee3d220, 0x157b, 0x11d0, 0xbd,0x23, 0x00,0xa0,0xc9,0x11,0xce,0x86)
+#endif
+#else
+typedef struct IConfigInterleavingVtbl {
+    BEGIN_INTERFACE
 
-    /*** IFilterGraph2 methods ***/
-    HRESULT (STDMETHODCALLTYPE *AddSourceFilterForMoniker)(
-        IFilterGraph2* This,
-        IMoniker *pMoniker,
-        IBindCtx *pCtx,
-        LPCWSTR lpcwstrFilterName,
-        IBaseFilter **ppFilter);
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IConfigInterleaving* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IConfigInterleaving* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IConfigInterleaving* This);
+
+    /*** IConfigInterleaving methods ***/
+    HRESULT (STDMETHODCALLTYPE *put_Mode)(
+        IConfigInterleaving* This,
+        InterleavingMode mode);
+
+    HRESULT (STDMETHODCALLTYPE *get_Mode)(
+        IConfigInterleaving* This,
+        InterleavingMode *pMode);
+
+    HRESULT (STDMETHODCALLTYPE *put_Interleaving)(
+        IConfigInterleaving* This,
+        const REFERENCE_TIME *prtInterleave,
+        const REFERENCE_TIME *prtPreroll);
+
+    HRESULT (STDMETHODCALLTYPE *get_Interleaving)(
+        IConfigInterleaving* This,
+        REFERENCE_TIME *prtInterleave,
+        REFERENCE_TIME *prtPreroll);
+
+    END_INTERFACE
+} IConfigInterleavingVtbl;
+interface IConfigInterleaving {
+    CONST_VTBL IConfigInterleavingVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IConfigInterleaving_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IConfigInterleaving_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IConfigInterleaving_Release(This) (This)->lpVtbl->Release(This)
+/*** IConfigInterleaving methods ***/
+#define IConfigInterleaving_put_Mode(This,mode) (This)->lpVtbl->put_Mode(This,mode)
+#define IConfigInterleaving_get_Mode(This,pMode) (This)->lpVtbl->get_Mode(This,pMode)
+#define IConfigInterleaving_put_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->put_Interleaving(This,prtInterleave,prtPreroll)
+#define IConfigInterleaving_get_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->get_Interleaving(This,prtInterleave,prtPreroll)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IConfigInterleaving_QueryInterface(IConfigInterleaving* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IConfigInterleaving_AddRef(IConfigInterleaving* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IConfigInterleaving_Release(IConfigInterleaving* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IConfigInterleaving methods ***/
+static FORCEINLINE HRESULT IConfigInterleaving_put_Mode(IConfigInterleaving* This,InterleavingMode mode) {
+    return This->lpVtbl->put_Mode(This,mode);
+}
+static FORCEINLINE HRESULT IConfigInterleaving_get_Mode(IConfigInterleaving* This,InterleavingMode *pMode) {
+    return This->lpVtbl->get_Mode(This,pMode);
+}
+static FORCEINLINE HRESULT IConfigInterleaving_put_Interleaving(IConfigInterleaving* This,const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll) {
+    return This->lpVtbl->put_Interleaving(This,prtInterleave,prtPreroll);
+}
+static FORCEINLINE HRESULT IConfigInterleaving_get_Interleaving(IConfigInterleaving* This,REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll) {
+    return This->lpVtbl->get_Interleaving(This,prtInterleave,prtPreroll);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IConfigInterleaving_put_Mode_Proxy(
+    IConfigInterleaving* This,
+    InterleavingMode mode);
+void __RPC_STUB IConfigInterleaving_put_Mode_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigInterleaving_get_Mode_Proxy(
+    IConfigInterleaving* This,
+    InterleavingMode *pMode);
+void __RPC_STUB IConfigInterleaving_get_Mode_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigInterleaving_put_Interleaving_Proxy(
+    IConfigInterleaving* This,
+    const REFERENCE_TIME *prtInterleave,
+    const REFERENCE_TIME *prtPreroll);
+void __RPC_STUB IConfigInterleaving_put_Interleaving_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IConfigInterleaving_get_Interleaving_Proxy(
+    IConfigInterleaving* This,
+    REFERENCE_TIME *prtInterleave,
+    REFERENCE_TIME *prtPreroll);
+void __RPC_STUB IConfigInterleaving_get_Interleaving_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IConfigInterleaving_INTERFACE_DEFINED__ */
+
+/*****************************************************************************
+ * IAMClockSlave interface
+ */
+#ifndef __IAMClockSlave_INTERFACE_DEFINED__
+#define __IAMClockSlave_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IAMClockSlave, 0x9fd52741, 0x176d, 0x4b36, 0x8f,0x51, 0xca,0x8f,0x93,0x32,0x23,0xbe);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("9fd52741-176d-4b36-8f51-ca8f933223be")
+IAMClockSlave : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE SetErrorTolerance(
+        DWORD dwTolerance) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetErrorTolerance(
+        DWORD *pdwTolerance) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IAMClockSlave, 0x9fd52741, 0x176d, 0x4b36, 0x8f,0x51, 0xca,0x8f,0x93,0x32,0x23,0xbe)
+#endif
+#else
+typedef struct IAMClockSlaveVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IAMClockSlave* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IAMClockSlave* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IAMClockSlave* This);
+
+    /*** IAMClockSlave methods ***/
+    HRESULT (STDMETHODCALLTYPE *SetErrorTolerance)(
+        IAMClockSlave* This,
+        DWORD dwTolerance);
+
+    HRESULT (STDMETHODCALLTYPE *GetErrorTolerance)(
+        IAMClockSlave* This,
+        DWORD *pdwTolerance);
+
+    END_INTERFACE
+} IAMClockSlaveVtbl;
+interface IAMClockSlave {
+    CONST_VTBL IAMClockSlaveVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IAMClockSlave_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IAMClockSlave_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IAMClockSlave_Release(This) (This)->lpVtbl->Release(This)
+/*** IAMClockSlave methods ***/
+#define IAMClockSlave_SetErrorTolerance(This,dwTolerance) (This)->lpVtbl->SetErrorTolerance(This,dwTolerance)
+#define IAMClockSlave_GetErrorTolerance(This,pdwTolerance) (This)->lpVtbl->GetErrorTolerance(This,pdwTolerance)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IAMClockSlave_QueryInterface(IAMClockSlave* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IAMClockSlave_AddRef(IAMClockSlave* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IAMClockSlave_Release(IAMClockSlave* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IAMClockSlave methods ***/
+static FORCEINLINE HRESULT IAMClockSlave_SetErrorTolerance(IAMClockSlave* This,DWORD dwTolerance) {
+    return This->lpVtbl->SetErrorTolerance(This,dwTolerance);
+}
+static FORCEINLINE HRESULT IAMClockSlave_GetErrorTolerance(IAMClockSlave* This,DWORD *pdwTolerance) {
+    return This->lpVtbl->GetErrorTolerance(This,pdwTolerance);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IAMClockSlave_SetErrorTolerance_Proxy(
+    IAMClockSlave* This,
+    DWORD dwTolerance);
+void __RPC_STUB IAMClockSlave_SetErrorTolerance_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMClockSlave_GetErrorTolerance_Proxy(
+    IAMClockSlave* This,
+    DWORD *pdwTolerance);
+void __RPC_STUB IAMClockSlave_GetErrorTolerance_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IAMClockSlave_INTERFACE_DEFINED__ */
+
+typedef struct _AMCOPPSignature {
+    BYTE Signature[256];
+} AMCOPPSignature;
+typedef struct _AMCOPPCommand {
+    GUID macKDI;
+    GUID guidCommandID;
+    DWORD dwSequence;
+    DWORD bSizeData;
+    BYTE CommandData[4056];
+} AMCOPPCommand;
+typedef struct _AMCOPPCommand *LPAMCOPPCommand;
+typedef struct _AMCOPPStatusInput {
+    GUID rApp;
+    GUID guidStatusRequestID;
+    DWORD dwSequence;
+    DWORD cbSizeData;
+    BYTE StatusData[4056];
+} AMCOPPStatusInput;
+typedef struct _AMCOPPStatusInput *LPAMCOPPStatusInput;
+typedef struct _AMCOPPStatusOutput {
+    GUID macKDI;
+    DWORD cbSizeData;
+    BYTE COPPStatus[4076];
+} AMCOPPStatusOutput;
+typedef struct _AMCOPPStatusOutput *LPAMCOPPStatusOutput;
+/*****************************************************************************
+ * IAMCertifiedOutputProtection interface
+ */
+#ifndef __IAMCertifiedOutputProtection_INTERFACE_DEFINED__
+#define __IAMCertifiedOutputProtection_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IAMCertifiedOutputProtection, 0x6feded3e, 0x0ff1, 0x4901, 0xa2,0xf1, 0x43,0xf7,0x01,0x2c,0x85,0x15);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("6feded3e-0ff1-4901-a2f1-43f7012c8515")
+IAMCertifiedOutputProtection : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE KeyExchange(
+        GUID *pRandom,
+        BYTE **VarLenCertGH,
+        DWORD *pdwLengthCertGH) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE SessionSequenceStart(
+        AMCOPPSignature *pSig) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE ProtectionCommand(
+        const AMCOPPCommand *cmd) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE ProtectionStatus(
+        const AMCOPPStatusInput *pStatusInput,
+        AMCOPPStatusOutput *pStatusOutput) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IAMCertifiedOutputProtection, 0x6feded3e, 0x0ff1, 0x4901, 0xa2,0xf1, 0x43,0xf7,0x01,0x2c,0x85,0x15)
+#endif
+#else
+typedef struct IAMCertifiedOutputProtectionVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IAMCertifiedOutputProtection* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IAMCertifiedOutputProtection* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IAMCertifiedOutputProtection* This);
+
+    /*** IAMCertifiedOutputProtection methods ***/
+    HRESULT (STDMETHODCALLTYPE *KeyExchange)(
+        IAMCertifiedOutputProtection* This,
+        GUID *pRandom,
+        BYTE **VarLenCertGH,
+        DWORD *pdwLengthCertGH);
+
+    HRESULT (STDMETHODCALLTYPE *SessionSequenceStart)(
+        IAMCertifiedOutputProtection* This,
+        AMCOPPSignature *pSig);
+
+    HRESULT (STDMETHODCALLTYPE *ProtectionCommand)(
+        IAMCertifiedOutputProtection* This,
+        const AMCOPPCommand *cmd);
+
+    HRESULT (STDMETHODCALLTYPE *ProtectionStatus)(
+        IAMCertifiedOutputProtection* This,
+        const AMCOPPStatusInput *pStatusInput,
+        AMCOPPStatusOutput *pStatusOutput);
+
+    END_INTERFACE
+} IAMCertifiedOutputProtectionVtbl;
+interface IAMCertifiedOutputProtection {
+    CONST_VTBL IAMCertifiedOutputProtectionVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IAMCertifiedOutputProtection_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IAMCertifiedOutputProtection_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IAMCertifiedOutputProtection_Release(This) (This)->lpVtbl->Release(This)
+/*** IAMCertifiedOutputProtection methods ***/
+#define IAMCertifiedOutputProtection_KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH) (This)->lpVtbl->KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH)
+#define IAMCertifiedOutputProtection_SessionSequenceStart(This,pSig) (This)->lpVtbl->SessionSequenceStart(This,pSig)
+#define IAMCertifiedOutputProtection_ProtectionCommand(This,cmd) (This)->lpVtbl->ProtectionCommand(This,cmd)
+#define IAMCertifiedOutputProtection_ProtectionStatus(This,pStatusInput,pStatusOutput) (This)->lpVtbl->ProtectionStatus(This,pStatusInput,pStatusOutput)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IAMCertifiedOutputProtection_QueryInterface(IAMCertifiedOutputProtection* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IAMCertifiedOutputProtection_AddRef(IAMCertifiedOutputProtection* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IAMCertifiedOutputProtection_Release(IAMCertifiedOutputProtection* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IAMCertifiedOutputProtection methods ***/
+static FORCEINLINE HRESULT IAMCertifiedOutputProtection_KeyExchange(IAMCertifiedOutputProtection* This,GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH) {
+    return This->lpVtbl->KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH);
+}
+static FORCEINLINE HRESULT IAMCertifiedOutputProtection_SessionSequenceStart(IAMCertifiedOutputProtection* This,AMCOPPSignature *pSig) {
+    return This->lpVtbl->SessionSequenceStart(This,pSig);
+}
+static FORCEINLINE HRESULT IAMCertifiedOutputProtection_ProtectionCommand(IAMCertifiedOutputProtection* This,const AMCOPPCommand *cmd) {
+    return This->lpVtbl->ProtectionCommand(This,cmd);
+}
+static FORCEINLINE HRESULT IAMCertifiedOutputProtection_ProtectionStatus(IAMCertifiedOutputProtection* This,const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput) {
+    return This->lpVtbl->ProtectionStatus(This,pStatusInput,pStatusOutput);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IAMCertifiedOutputProtection_KeyExchange_Proxy(
+    IAMCertifiedOutputProtection* This,
+    GUID *pRandom,
+    BYTE **VarLenCertGH,
+    DWORD *pdwLengthCertGH);
+void __RPC_STUB IAMCertifiedOutputProtection_KeyExchange_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMCertifiedOutputProtection_SessionSequenceStart_Proxy(
+    IAMCertifiedOutputProtection* This,
+    AMCOPPSignature *pSig);
+void __RPC_STUB IAMCertifiedOutputProtection_SessionSequenceStart_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMCertifiedOutputProtection_ProtectionCommand_Proxy(
+    IAMCertifiedOutputProtection* This,
+    const AMCOPPCommand *cmd);
+void __RPC_STUB IAMCertifiedOutputProtection_ProtectionCommand_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMCertifiedOutputProtection_ProtectionStatus_Proxy(
+    IAMCertifiedOutputProtection* This,
+    const AMCOPPStatusInput *pStatusInput,
+    AMCOPPStatusOutput *pStatusOutput);
+void __RPC_STUB IAMCertifiedOutputProtection_ProtectionStatus_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IAMCertifiedOutputProtection_INTERFACE_DEFINED__ */
+
+enum _AM_RENSDEREXFLAGS {
+    AM_RENDEREX_RENDERTOEXISTINGRENDERERS = 0x1
+};
+
+/*****************************************************************************
+ * IFilterGraph2 interface
+ */
+#ifndef __IFilterGraph2_INTERFACE_DEFINED__
+#define __IFilterGraph2_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IFilterGraph2, 0x36b73882, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("36b73882-c2c8-11cf-8b46-00805f6cef60")
+IFilterGraph2 : public IGraphBuilder
+{
+    virtual HRESULT STDMETHODCALLTYPE AddSourceFilterForMoniker(
+        IMoniker *pMoniker,
+        IBindCtx *pCtx,
+        LPCWSTR lpcwstrFilterName,
+        IBaseFilter **ppFilter) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE ReconnectEx(
+        IPin *ppin,
+        const AM_MEDIA_TYPE *pmt) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE RenderEx(
+        IPin *pPinOut,
+        DWORD dwFlags,
+        DWORD *pvContext) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IFilterGraph2, 0x36b73882, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60)
+#endif
+#else
+typedef struct IFilterGraph2Vtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IFilterGraph2* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IFilterGraph2* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IFilterGraph2* This);
+
+    /*** IFilterGraph methods ***/
+    HRESULT (STDMETHODCALLTYPE *AddFilter)(
+        IFilterGraph2* This,
+        IBaseFilter *pFilter,
+        LPCWSTR pName);
+
+    HRESULT (STDMETHODCALLTYPE *RemoveFilter)(
+        IFilterGraph2* This,
+        IBaseFilter *pFilter);
+
+    HRESULT (STDMETHODCALLTYPE *EnumFilters)(
+        IFilterGraph2* This,
+        IEnumFilters **ppEnum);
+
+    HRESULT (STDMETHODCALLTYPE *FindFilterByName)(
+        IFilterGraph2* This,
+        LPCWSTR pName,
+        IBaseFilter **ppFilter);
+
+    HRESULT (STDMETHODCALLTYPE *ConnectDirect)(
+        IFilterGraph2* This,
+        IPin *ppinOut,
+        IPin *ppinIn,
+        const AM_MEDIA_TYPE *pmt);
+
+    HRESULT (STDMETHODCALLTYPE *Reconnect)(
+        IFilterGraph2* This,
+        IPin *ppin);
+
+    HRESULT (STDMETHODCALLTYPE *Disconnect)(
+        IFilterGraph2* This,
+        IPin *ppin);
+
+    HRESULT (STDMETHODCALLTYPE *SetDefaultSyncSource)(
+        IFilterGraph2* This);
+
+    /*** IGraphBuilder methods ***/
+    HRESULT (STDMETHODCALLTYPE *Connect)(
+        IFilterGraph2* This,
+        IPin *ppinOut,
+        IPin *ppinIn);
+
+    HRESULT (STDMETHODCALLTYPE *Render)(
+        IFilterGraph2* This,
+        IPin *ppinOut);
+
+    HRESULT (STDMETHODCALLTYPE *RenderFile)(
+        IFilterGraph2* This,
+        LPCWSTR lpcwstrFile,
+        LPCWSTR lpcwstrPlayList);
+
+    HRESULT (STDMETHODCALLTYPE *AddSourceFilter)(
+        IFilterGraph2* This,
+        LPCWSTR lpcwstrFileName,
+        LPCWSTR lpcwstrFilterName,
+        IBaseFilter **ppFilter);
+
+    HRESULT (STDMETHODCALLTYPE *SetLogFile)(
+        IFilterGraph2* This,
+        DWORD_PTR hFile);
+
+    HRESULT (STDMETHODCALLTYPE *Abort)(
+        IFilterGraph2* This);
+
+    HRESULT (STDMETHODCALLTYPE *ShouldOperationContinue)(
+        IFilterGraph2* This);
+
+    /*** IFilterGraph2 methods ***/
+    HRESULT (STDMETHODCALLTYPE *AddSourceFilterForMoniker)(
+        IFilterGraph2* This,
+        IMoniker *pMoniker,
+        IBindCtx *pCtx,
+        LPCWSTR lpcwstrFilterName,
+        IBaseFilter **ppFilter);
 
     HRESULT (STDMETHODCALLTYPE *ReconnectEx)(
         IFilterGraph2* This,
@@ -8511,6 +9494,150 @@ void __RPC_STUB IResourceManager_ReleaseFocus_Stub(
 
 #endif  /* __IResourceManager_INTERFACE_DEFINED__ */
 
+typedef enum AM_STREAM_INFO_FLAGS {
+    AM_STREAM_INFO_START_DEFINED = 0x1,
+    AM_STREAM_INFO_STOP_DEFINED = 0x2,
+    AM_STREAM_INFO_DISCARDING = 0x4,
+    AM_STREAM_INFO_STOP_SEND_EXTRA = 0x10
+} AM_STREAM_INFO_FLAGS;
+typedef struct AM_STREAM_INFO {
+    REFERENCE_TIME tStart;
+    REFERENCE_TIME tStop;
+    DWORD dwStartCookie;
+    DWORD dwStopCookie;
+    DWORD dwFlags;
+} AM_STREAM_INFO;
+/*****************************************************************************
+ * IAMStreamControl interface
+ */
+#ifndef __IAMStreamControl_INTERFACE_DEFINED__
+#define __IAMStreamControl_INTERFACE_DEFINED__
+
+DEFINE_GUID(IID_IAMStreamControl, 0x36b73881, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("36b73881-c2c8-11cf-8b46-00805f6cef60")
+IAMStreamControl : public IUnknown
+{
+    virtual HRESULT STDMETHODCALLTYPE StartAt(
+        const REFERENCE_TIME *ptStart,
+        DWORD dwCookie) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE StopAt(
+        const REFERENCE_TIME *ptStop,
+        WINBOOL bSendExtra,
+        DWORD dwCookie) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE GetInfo(
+        AM_STREAM_INFO *pInfo) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IAMStreamControl, 0x36b73881, 0xc2c8, 0x11cf, 0x8b,0x46, 0x00,0x80,0x5f,0x6c,0xef,0x60)
+#endif
+#else
+typedef struct IAMStreamControlVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IAMStreamControl* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IAMStreamControl* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IAMStreamControl* This);
+
+    /*** IAMStreamControl methods ***/
+    HRESULT (STDMETHODCALLTYPE *StartAt)(
+        IAMStreamControl* This,
+        const REFERENCE_TIME *ptStart,
+        DWORD dwCookie);
+
+    HRESULT (STDMETHODCALLTYPE *StopAt)(
+        IAMStreamControl* This,
+        const REFERENCE_TIME *ptStop,
+        WINBOOL bSendExtra,
+        DWORD dwCookie);
+
+    HRESULT (STDMETHODCALLTYPE *GetInfo)(
+        IAMStreamControl* This,
+        AM_STREAM_INFO *pInfo);
+
+    END_INTERFACE
+} IAMStreamControlVtbl;
+interface IAMStreamControl {
+    CONST_VTBL IAMStreamControlVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IAMStreamControl_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IAMStreamControl_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IAMStreamControl_Release(This) (This)->lpVtbl->Release(This)
+/*** IAMStreamControl methods ***/
+#define IAMStreamControl_StartAt(This,ptStart,dwCookie) (This)->lpVtbl->StartAt(This,ptStart,dwCookie)
+#define IAMStreamControl_StopAt(This,ptStop,bSendExtra,dwCookie) (This)->lpVtbl->StopAt(This,ptStop,bSendExtra,dwCookie)
+#define IAMStreamControl_GetInfo(This,pInfo) (This)->lpVtbl->GetInfo(This,pInfo)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IAMStreamControl_QueryInterface(IAMStreamControl* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IAMStreamControl_AddRef(IAMStreamControl* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IAMStreamControl_Release(IAMStreamControl* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IAMStreamControl methods ***/
+static FORCEINLINE HRESULT IAMStreamControl_StartAt(IAMStreamControl* This,const REFERENCE_TIME *ptStart,DWORD dwCookie) {
+    return This->lpVtbl->StartAt(This,ptStart,dwCookie);
+}
+static FORCEINLINE HRESULT IAMStreamControl_StopAt(IAMStreamControl* This,const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie) {
+    return This->lpVtbl->StopAt(This,ptStop,bSendExtra,dwCookie);
+}
+static FORCEINLINE HRESULT IAMStreamControl_GetInfo(IAMStreamControl* This,AM_STREAM_INFO *pInfo) {
+    return This->lpVtbl->GetInfo(This,pInfo);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IAMStreamControl_StartAt_Proxy(
+    IAMStreamControl* This,
+    const REFERENCE_TIME *ptStart,
+    DWORD dwCookie);
+void __RPC_STUB IAMStreamControl_StartAt_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMStreamControl_StopAt_Proxy(
+    IAMStreamControl* This,
+    const REFERENCE_TIME *ptStop,
+    WINBOOL bSendExtra,
+    DWORD dwCookie);
+void __RPC_STUB IAMStreamControl_StopAt_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IAMStreamControl_GetInfo_Proxy(
+    IAMStreamControl* This,
+    AM_STREAM_INFO *pInfo);
+void __RPC_STUB IAMStreamControl_GetInfo_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IAMStreamControl_INTERFACE_DEFINED__ */
+
 #ifndef _IKsPropertySet_
 #define _IKsPropertySet_
 #define KSPROPERTY_SUPPORT_GET  1
@@ -8603,80 +9730,334 @@ interface IKsPropertySet {
 #ifdef COBJMACROS
 #ifndef WIDL_C_INLINE_WRAPPERS
 /*** IUnknown methods ***/
-#define IKsPropertySet_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IKsPropertySet_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IKsPropertySet_Release(This) (This)->lpVtbl->Release(This)
-/*** IKsPropertySet methods ***/
-#define IKsPropertySet_Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData) (This)->lpVtbl->Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData)
-#define IKsPropertySet_Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned) (This)->lpVtbl->Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned)
-#define IKsPropertySet_QuerySupported(This,guidPropSet,dwPropID,pTypeSupport) (This)->lpVtbl->QuerySupported(This,guidPropSet,dwPropID,pTypeSupport)
+#define IKsPropertySet_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IKsPropertySet_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IKsPropertySet_Release(This) (This)->lpVtbl->Release(This)
+/*** IKsPropertySet methods ***/
+#define IKsPropertySet_Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData) (This)->lpVtbl->Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData)
+#define IKsPropertySet_Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned) (This)->lpVtbl->Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned)
+#define IKsPropertySet_QuerySupported(This,guidPropSet,dwPropID,pTypeSupport) (This)->lpVtbl->QuerySupported(This,guidPropSet,dwPropID,pTypeSupport)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IKsPropertySet_QueryInterface(IKsPropertySet* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IKsPropertySet_AddRef(IKsPropertySet* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IKsPropertySet_Release(IKsPropertySet* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IKsPropertySet methods ***/
+static FORCEINLINE HRESULT IKsPropertySet_Set(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,LPVOID pInstanceData,DWORD cbInstanceData,LPVOID pPropData,DWORD cbPropData) {
+    return This->lpVtbl->Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData);
+}
+static FORCEINLINE HRESULT IKsPropertySet_Get(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,LPVOID pInstanceData,DWORD cbInstanceData,LPVOID pPropData,DWORD cbPropData,DWORD *pcbReturned) {
+    return This->lpVtbl->Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned);
+}
+static FORCEINLINE HRESULT IKsPropertySet_QuerySupported(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,DWORD *pTypeSupport) {
+    return This->lpVtbl->QuerySupported(This,guidPropSet,dwPropID,pTypeSupport);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IKsPropertySet_Set_Proxy(
+    IKsPropertySet* This,
+    REFGUID guidPropSet,
+    DWORD dwPropID,
+    LPVOID pInstanceData,
+    DWORD cbInstanceData,
+    LPVOID pPropData,
+    DWORD cbPropData);
+void __RPC_STUB IKsPropertySet_Set_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IKsPropertySet_Get_Proxy(
+    IKsPropertySet* This,
+    REFGUID guidPropSet,
+    DWORD dwPropID,
+    LPVOID pInstanceData,
+    DWORD cbInstanceData,
+    LPVOID pPropData,
+    DWORD cbPropData,
+    DWORD *pcbReturned);
+void __RPC_STUB IKsPropertySet_Get_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+HRESULT STDMETHODCALLTYPE IKsPropertySet_QuerySupported_Proxy(
+    IKsPropertySet* This,
+    REFGUID guidPropSet,
+    DWORD dwPropID,
+    DWORD *pTypeSupport);
+void __RPC_STUB IKsPropertySet_QuerySupported_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IKsPropertySet_INTERFACE_DEFINED__ */
+
+#endif /* _IKsPropertySet_ */
+/*****************************************************************************
+ * IMediaPropertyBag interface
+ */
+#ifndef __IMediaPropertyBag_INTERFACE_DEFINED__
+#define __IMediaPropertyBag_INTERFACE_DEFINED__
+
+typedef IMediaPropertyBag *LPMEDIAPROPERTYBAG;
+DEFINE_GUID(IID_IMediaPropertyBag, 0x6025a880, 0xc0d5, 0x11d0, 0xbd,0x4e, 0x00,0xa0,0xc9,0x11,0xce,0x86);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("6025a880-c0d5-11d0-bd4e-00a0c911ce86")
+IMediaPropertyBag : public IPropertyBag
+{
+    virtual HRESULT STDMETHODCALLTYPE EnumProperty(
+        ULONG iProperty,
+        VARIANT *pvarPropertyName,
+        VARIANT *pvarPropertyValue) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IMediaPropertyBag, 0x6025a880, 0xc0d5, 0x11d0, 0xbd,0x4e, 0x00,0xa0,0xc9,0x11,0xce,0x86)
+#endif
+#else
+typedef struct IMediaPropertyBagVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IMediaPropertyBag* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IMediaPropertyBag* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IMediaPropertyBag* This);
+
+    /*** IPropertyBag methods ***/
+    HRESULT (STDMETHODCALLTYPE *Read)(
+        IMediaPropertyBag* This,
+        LPCOLESTR pszPropName,
+        VARIANT *pVar,
+        IErrorLog *pErrorLog);
+
+    HRESULT (STDMETHODCALLTYPE *Write)(
+        IMediaPropertyBag* This,
+        LPCOLESTR pszPropName,
+        VARIANT *pVar);
+
+    /*** IMediaPropertyBag methods ***/
+    HRESULT (STDMETHODCALLTYPE *EnumProperty)(
+        IMediaPropertyBag* This,
+        ULONG iProperty,
+        VARIANT *pvarPropertyName,
+        VARIANT *pvarPropertyValue);
+
+    END_INTERFACE
+} IMediaPropertyBagVtbl;
+interface IMediaPropertyBag {
+    CONST_VTBL IMediaPropertyBagVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)
+/*** IPropertyBag methods ***/
+#define IMediaPropertyBag_Read(This,pszPropName,pVar,pErrorLog) (This)->lpVtbl->Read(This,pszPropName,pVar,pErrorLog)
+#define IMediaPropertyBag_Write(This,pszPropName,pVar) (This)->lpVtbl->Write(This,pszPropName,pVar)
+/*** IMediaPropertyBag methods ***/
+#define IMediaPropertyBag_EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue) (This)->lpVtbl->EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue)
+#else
+/*** IUnknown methods ***/
+static FORCEINLINE HRESULT IMediaPropertyBag_QueryInterface(IMediaPropertyBag* This,REFIID riid,void **ppvObject) {
+    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
+}
+static FORCEINLINE ULONG IMediaPropertyBag_AddRef(IMediaPropertyBag* This) {
+    return This->lpVtbl->AddRef(This);
+}
+static FORCEINLINE ULONG IMediaPropertyBag_Release(IMediaPropertyBag* This) {
+    return This->lpVtbl->Release(This);
+}
+/*** IPropertyBag methods ***/
+static FORCEINLINE HRESULT IMediaPropertyBag_Read(IMediaPropertyBag* This,LPCOLESTR pszPropName,VARIANT *pVar,IErrorLog *pErrorLog) {
+    return This->lpVtbl->Read(This,pszPropName,pVar,pErrorLog);
+}
+static FORCEINLINE HRESULT IMediaPropertyBag_Write(IMediaPropertyBag* This,LPCOLESTR pszPropName,VARIANT *pVar) {
+    return This->lpVtbl->Write(This,pszPropName,pVar);
+}
+/*** IMediaPropertyBag methods ***/
+static FORCEINLINE HRESULT IMediaPropertyBag_EnumProperty(IMediaPropertyBag* This,ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue) {
+    return This->lpVtbl->EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue);
+}
+#endif
+#endif
+
+#endif
+
+HRESULT STDMETHODCALLTYPE IMediaPropertyBag_EnumProperty_Proxy(
+    IMediaPropertyBag* This,
+    ULONG iProperty,
+    VARIANT *pvarPropertyName,
+    VARIANT *pvarPropertyValue);
+void __RPC_STUB IMediaPropertyBag_EnumProperty_Stub(
+    IRpcStubBuffer* This,
+    IRpcChannelBuffer* pRpcChannelBuffer,
+    PRPC_MESSAGE pRpcMessage,
+    DWORD* pdwStubPhase);
+
+#endif  /* __IMediaPropertyBag_INTERFACE_DEFINED__ */
+
+/*****************************************************************************
+ * IPersistMediaPropertyBag interface
+ */
+#ifndef __IPersistMediaPropertyBag_INTERFACE_DEFINED__
+#define __IPersistMediaPropertyBag_INTERFACE_DEFINED__
+
+typedef IPersistMediaPropertyBag *LPPERSISTMEDIAPROPERTYBAG;
+DEFINE_GUID(IID_IPersistMediaPropertyBag, 0x5738e040, 0xb67f, 0x11d0, 0xbd,0x4d, 0x00,0xa0,0xc9,0x11,0xce,0x86);
+#if defined(__cplusplus) && !defined(CINTERFACE)
+MIDL_INTERFACE("5738e040-b67f-11d0-bd4d-00a0c911ce86")
+IPersistMediaPropertyBag : public IPersist
+{
+    virtual HRESULT STDMETHODCALLTYPE InitNew(
+        ) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE Load(
+        IMediaPropertyBag *pPropBag,
+        IErrorLog *pErrorLog) = 0;
+
+    virtual HRESULT STDMETHODCALLTYPE Save(
+        IMediaPropertyBag *pPropBag,
+        WINBOOL fClearDirty,
+        WINBOOL fSaveAllProperties) = 0;
+
+};
+#ifdef __CRT_UUID_DECL
+__CRT_UUID_DECL(IPersistMediaPropertyBag, 0x5738e040, 0xb67f, 0x11d0, 0xbd,0x4d, 0x00,0xa0,0xc9,0x11,0xce,0x86)
+#endif
+#else
+typedef struct IPersistMediaPropertyBagVtbl {
+    BEGIN_INTERFACE
+
+    /*** IUnknown methods ***/
+    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
+        IPersistMediaPropertyBag* This,
+        REFIID riid,
+        void **ppvObject);
+
+    ULONG (STDMETHODCALLTYPE *AddRef)(
+        IPersistMediaPropertyBag* This);
+
+    ULONG (STDMETHODCALLTYPE *Release)(
+        IPersistMediaPropertyBag* This);
+
+    /*** IPersist methods ***/
+    HRESULT (STDMETHODCALLTYPE *GetClassID)(
+        IPersistMediaPropertyBag* This,
+        CLSID *pClassID);
+
+    /*** IPersistMediaPropertyBag methods ***/
+    HRESULT (STDMETHODCALLTYPE *InitNew)(
+        IPersistMediaPropertyBag* This);
+
+    HRESULT (STDMETHODCALLTYPE *Load)(
+        IPersistMediaPropertyBag* This,
+        IMediaPropertyBag *pPropBag,
+        IErrorLog *pErrorLog);
+
+    HRESULT (STDMETHODCALLTYPE *Save)(
+        IPersistMediaPropertyBag* This,
+        IMediaPropertyBag *pPropBag,
+        WINBOOL fClearDirty,
+        WINBOOL fSaveAllProperties);
+
+    END_INTERFACE
+} IPersistMediaPropertyBagVtbl;
+interface IPersistMediaPropertyBag {
+    CONST_VTBL IPersistMediaPropertyBagVtbl* lpVtbl;
+};
+
+#ifdef COBJMACROS
+#ifndef WIDL_C_INLINE_WRAPPERS
+/*** IUnknown methods ***/
+#define IPersistMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
+#define IPersistMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)
+#define IPersistMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)
+/*** IPersist methods ***/
+#define IPersistMediaPropertyBag_GetClassID(This,pClassID) (This)->lpVtbl->GetClassID(This,pClassID)
+/*** IPersistMediaPropertyBag methods ***/
+#define IPersistMediaPropertyBag_InitNew(This) (This)->lpVtbl->InitNew(This)
+#define IPersistMediaPropertyBag_Load(This,pPropBag,pErrorLog) (This)->lpVtbl->Load(This,pPropBag,pErrorLog)
+#define IPersistMediaPropertyBag_Save(This,pPropBag,fClearDirty,fSaveAllProperties) (This)->lpVtbl->Save(This,pPropBag,fClearDirty,fSaveAllProperties)
 #else
 /*** IUnknown methods ***/
-static FORCEINLINE HRESULT IKsPropertySet_QueryInterface(IKsPropertySet* This,REFIID riid,void **ppvObject) {
+static FORCEINLINE HRESULT IPersistMediaPropertyBag_QueryInterface(IPersistMediaPropertyBag* This,REFIID riid,void **ppvObject) {
     return This->lpVtbl->QueryInterface(This,riid,ppvObject);
 }
-static FORCEINLINE ULONG IKsPropertySet_AddRef(IKsPropertySet* This) {
+static FORCEINLINE ULONG IPersistMediaPropertyBag_AddRef(IPersistMediaPropertyBag* This) {
     return This->lpVtbl->AddRef(This);
 }
-static FORCEINLINE ULONG IKsPropertySet_Release(IKsPropertySet* This) {
+static FORCEINLINE ULONG IPersistMediaPropertyBag_Release(IPersistMediaPropertyBag* This) {
     return This->lpVtbl->Release(This);
 }
-/*** IKsPropertySet methods ***/
-static FORCEINLINE HRESULT IKsPropertySet_Set(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,LPVOID pInstanceData,DWORD cbInstanceData,LPVOID pPropData,DWORD cbPropData) {
-    return This->lpVtbl->Set(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData);
+/*** IPersist methods ***/
+static FORCEINLINE HRESULT IPersistMediaPropertyBag_GetClassID(IPersistMediaPropertyBag* This,CLSID *pClassID) {
+    return This->lpVtbl->GetClassID(This,pClassID);
 }
-static FORCEINLINE HRESULT IKsPropertySet_Get(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,LPVOID pInstanceData,DWORD cbInstanceData,LPVOID pPropData,DWORD cbPropData,DWORD *pcbReturned) {
-    return This->lpVtbl->Get(This,guidPropSet,dwPropID,pInstanceData,cbInstanceData,pPropData,cbPropData,pcbReturned);
+/*** IPersistMediaPropertyBag methods ***/
+static FORCEINLINE HRESULT IPersistMediaPropertyBag_InitNew(IPersistMediaPropertyBag* This) {
+    return This->lpVtbl->InitNew(This);
 }
-static FORCEINLINE HRESULT IKsPropertySet_QuerySupported(IKsPropertySet* This,REFGUID guidPropSet,DWORD dwPropID,DWORD *pTypeSupport) {
-    return This->lpVtbl->QuerySupported(This,guidPropSet,dwPropID,pTypeSupport);
+static FORCEINLINE HRESULT IPersistMediaPropertyBag_Load(IPersistMediaPropertyBag* This,IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog) {
+    return This->lpVtbl->Load(This,pPropBag,pErrorLog);
+}
+static FORCEINLINE HRESULT IPersistMediaPropertyBag_Save(IPersistMediaPropertyBag* This,IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties) {
+    return This->lpVtbl->Save(This,pPropBag,fClearDirty,fSaveAllProperties);
 }
 #endif
 #endif
 
 #endif
 
-HRESULT STDMETHODCALLTYPE IKsPropertySet_Set_Proxy(
-    IKsPropertySet* This,
-    REFGUID guidPropSet,
-    DWORD dwPropID,
-    LPVOID pInstanceData,
-    DWORD cbInstanceData,
-    LPVOID pPropData,
-    DWORD cbPropData);
-void __RPC_STUB IKsPropertySet_Set_Stub(
+HRESULT STDMETHODCALLTYPE IPersistMediaPropertyBag_InitNew_Proxy(
+    IPersistMediaPropertyBag* This);
+void __RPC_STUB IPersistMediaPropertyBag_InitNew_Stub(
     IRpcStubBuffer* This,
     IRpcChannelBuffer* pRpcChannelBuffer,
     PRPC_MESSAGE pRpcMessage,
     DWORD* pdwStubPhase);
-HRESULT STDMETHODCALLTYPE IKsPropertySet_Get_Proxy(
-    IKsPropertySet* This,
-    REFGUID guidPropSet,
-    DWORD dwPropID,
-    LPVOID pInstanceData,
-    DWORD cbInstanceData,
-    LPVOID pPropData,
-    DWORD cbPropData,
-    DWORD *pcbReturned);
-void __RPC_STUB IKsPropertySet_Get_Stub(
+HRESULT STDMETHODCALLTYPE IPersistMediaPropertyBag_Load_Proxy(
+    IPersistMediaPropertyBag* This,
+    IMediaPropertyBag *pPropBag,
+    IErrorLog *pErrorLog);
+void __RPC_STUB IPersistMediaPropertyBag_Load_Stub(
     IRpcStubBuffer* This,
     IRpcChannelBuffer* pRpcChannelBuffer,
     PRPC_MESSAGE pRpcMessage,
     DWORD* pdwStubPhase);
-HRESULT STDMETHODCALLTYPE IKsPropertySet_QuerySupported_Proxy(
-    IKsPropertySet* This,
-    REFGUID guidPropSet,
-    DWORD dwPropID,
-    DWORD *pTypeSupport);
-void __RPC_STUB IKsPropertySet_QuerySupported_Stub(
+HRESULT STDMETHODCALLTYPE IPersistMediaPropertyBag_Save_Proxy(
+    IPersistMediaPropertyBag* This,
+    IMediaPropertyBag *pPropBag,
+    WINBOOL fClearDirty,
+    WINBOOL fSaveAllProperties);
+void __RPC_STUB IPersistMediaPropertyBag_Save_Stub(
     IRpcStubBuffer* This,
     IRpcChannelBuffer* pRpcChannelBuffer,
     PRPC_MESSAGE pRpcMessage,
     DWORD* pdwStubPhase);
 
-#endif  /* __IKsPropertySet_INTERFACE_DEFINED__ */
+#endif  /* __IPersistMediaPropertyBag_INTERFACE_DEFINED__ */
 
-#endif /* _IKsPropertySet_ */
 /*****************************************************************************
  * ISeekingPassThru interface
  */
@@ -8963,16 +10344,6 @@ typedef struct IReferenceClock2 IReferenceClock2;
 typedef struct IDistributorNotify IDistributorNotify;
 #endif
 
-#ifndef __IAMStreamControl_FWD_DEFINED__
-#define __IAMStreamControl_FWD_DEFINED__
-typedef struct IAMStreamControl IAMStreamControl;
-#endif
-
-#ifndef __IConfigAviMux_FWD_DEFINED__
-#define __IConfigAviMux_FWD_DEFINED__
-typedef struct IConfigAviMux IConfigAviMux;
-#endif
-
 #ifndef __IAMVideoCompression_FWD_DEFINED__
 #define __IAMVideoCompression_FWD_DEFINED__
 typedef struct IAMVideoCompression IAMVideoCompression;
@@ -9058,16 +10429,6 @@ typedef struct IAMTVAudioNotification IAMTVAudioNotification;
 typedef struct IAMAnalogVideoEncoder IAMAnalogVideoEncoder;
 #endif
 
-#ifndef __IMediaPropertyBag_FWD_DEFINED__
-#define __IMediaPropertyBag_FWD_DEFINED__
-typedef struct IMediaPropertyBag IMediaPropertyBag;
-#endif
-
-#ifndef __IPersistMediaPropertyBag_FWD_DEFINED__
-#define __IPersistMediaPropertyBag_FWD_DEFINED__
-typedef struct IPersistMediaPropertyBag IPersistMediaPropertyBag;
-#endif
-
 #ifndef __IAMPhysicalPinInfo_FWD_DEFINED__
 #define __IAMPhysicalPinInfo_FWD_DEFINED__
 typedef struct IAMPhysicalPinInfo IAMPhysicalPinInfo;
@@ -9218,11 +10579,6 @@ typedef struct IMPEG2StreamIdMap IMPEG2StreamIdMap;
 typedef struct IRegisterServiceProvider IRegisterServiceProvider;
 #endif
 
-#ifndef __IAMClockSlave_FWD_DEFINED__
-#define __IAMClockSlave_FWD_DEFINED__
-typedef struct IAMClockSlave IAMClockSlave;
-#endif
-
 #ifndef __ICodecAPI_FWD_DEFINED__
 #define __ICodecAPI_FWD_DEFINED__
 typedef struct ICodecAPI ICodecAPI;
@@ -9248,11 +10604,6 @@ typedef struct IVideoEncoder IVideoEncoder;
 typedef struct IAMDecoderCaps IAMDecoderCaps;
 #endif
 
-#ifndef __IAMCertifiedOutputProtection_FWD_DEFINED__
-#define __IAMCertifiedOutputProtection_FWD_DEFINED__
-typedef struct IAMCertifiedOutputProtection IAMCertifiedOutputProtection;
-#endif
-
 #ifndef __IDvdControl_FWD_DEFINED__
 #define __IDvdControl_FWD_DEFINED__
 typedef struct IDvdControl IDvdControl;
@@ -9503,158 +10854,6 @@ typedef struct IAMPluginControl IAMPluginControl;
   void __RPC_STUB IDistributorNotify_NotifyGraphChange_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
 #endif
 
-  typedef enum __MIDL___MIDL_itf_strmif_0160_0001 {
-    AM_STREAM_INFO_START_DEFINED = 0x1,AM_STREAM_INFO_STOP_DEFINED = 0x2,AM_STREAM_INFO_DISCARDING = 0x4,AM_STREAM_INFO_STOP_SEND_EXTRA = 0x10
-  } AM_STREAM_INFO_FLAGS;
-
-  typedef struct __MIDL___MIDL_itf_strmif_0160_0002 {
-    REFERENCE_TIME tStart;
-    REFERENCE_TIME tStop;
-    DWORD dwStartCookie;
-    DWORD dwStopCookie;
-    DWORD dwFlags;
-  } AM_STREAM_INFO;
-
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0160_v0_0_c_ifspec;
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0160_v0_0_s_ifspec;
-#ifndef __IAMStreamControl_INTERFACE_DEFINED__
-#define __IAMStreamControl_INTERFACE_DEFINED__
-  EXTERN_C const IID IID_IAMStreamControl;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IAMStreamControl : public IUnknown {
-  public:
-    virtual HRESULT WINAPI StartAt(const REFERENCE_TIME *ptStart,DWORD dwCookie) = 0;
-    virtual HRESULT WINAPI StopAt(const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie) = 0;
-    virtual HRESULT WINAPI GetInfo(AM_STREAM_INFO *pInfo) = 0;
-  };
-#else
-  typedef struct IAMStreamControlVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IAMStreamControl *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IAMStreamControl *This);
-      ULONG (WINAPI *Release)(IAMStreamControl *This);
-      HRESULT (WINAPI *StartAt)(IAMStreamControl *This,const REFERENCE_TIME *ptStart,DWORD dwCookie);
-      HRESULT (WINAPI *StopAt)(IAMStreamControl *This,const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie);
-      HRESULT (WINAPI *GetInfo)(IAMStreamControl *This,AM_STREAM_INFO *pInfo);
-    END_INTERFACE
-  } IAMStreamControlVtbl;
-  struct IAMStreamControl {
-    CONST_VTBL struct IAMStreamControlVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IAMStreamControl_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IAMStreamControl_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IAMStreamControl_Release(This) (This)->lpVtbl->Release(This)
-#define IAMStreamControl_StartAt(This,ptStart,dwCookie) (This)->lpVtbl->StartAt(This,ptStart,dwCookie)
-#define IAMStreamControl_StopAt(This,ptStop,bSendExtra,dwCookie) (This)->lpVtbl->StopAt(This,ptStop,bSendExtra,dwCookie)
-#define IAMStreamControl_GetInfo(This,pInfo) (This)->lpVtbl->GetInfo(This,pInfo)
-#endif
-#endif
-  HRESULT WINAPI IAMStreamControl_StartAt_Proxy(IAMStreamControl *This,const REFERENCE_TIME *ptStart,DWORD dwCookie);
-  void __RPC_STUB IAMStreamControl_StartAt_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMStreamControl_StopAt_Proxy(IAMStreamControl *This,const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie);
-  void __RPC_STUB IAMStreamControl_StopAt_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMStreamControl_GetInfo_Proxy(IAMStreamControl *This,AM_STREAM_INFO *pInfo);
-  void __RPC_STUB IAMStreamControl_GetInfo_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
-#ifndef __IConfigInterleaving_INTERFACE_DEFINED__
-#define __IConfigInterleaving_INTERFACE_DEFINED__
-  typedef enum __MIDL_IConfigInterleaving_0001 {
-    INTERLEAVE_NONE = 0,
-    INTERLEAVE_CAPTURE,INTERLEAVE_FULL,INTERLEAVE_NONE_BUFFERED
-  } InterleavingMode;
-
-  EXTERN_C const IID IID_IConfigInterleaving;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IConfigInterleaving : public IUnknown {
-  public:
-    virtual HRESULT WINAPI put_Mode(InterleavingMode mode) = 0;
-    virtual HRESULT WINAPI get_Mode(InterleavingMode *pMode) = 0;
-    virtual HRESULT WINAPI put_Interleaving(const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll) = 0;
-    virtual HRESULT WINAPI get_Interleaving(REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll) = 0;
-  };
-#else
-  typedef struct IConfigInterleavingVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IConfigInterleaving *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IConfigInterleaving *This);
-      ULONG (WINAPI *Release)(IConfigInterleaving *This);
-      HRESULT (WINAPI *put_Mode)(IConfigInterleaving *This,InterleavingMode mode);
-      HRESULT (WINAPI *get_Mode)(IConfigInterleaving *This,InterleavingMode *pMode);
-      HRESULT (WINAPI *put_Interleaving)(IConfigInterleaving *This,const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll);
-      HRESULT (WINAPI *get_Interleaving)(IConfigInterleaving *This,REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll);
-    END_INTERFACE
-  } IConfigInterleavingVtbl;
-  struct IConfigInterleaving {
-    CONST_VTBL struct IConfigInterleavingVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IConfigInterleaving_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IConfigInterleaving_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IConfigInterleaving_Release(This) (This)->lpVtbl->Release(This)
-#define IConfigInterleaving_put_Mode(This,mode) (This)->lpVtbl->put_Mode(This,mode)
-#define IConfigInterleaving_get_Mode(This,pMode) (This)->lpVtbl->get_Mode(This,pMode)
-#define IConfigInterleaving_put_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->put_Interleaving(This,prtInterleave,prtPreroll)
-#define IConfigInterleaving_get_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->get_Interleaving(This,prtInterleave,prtPreroll)
-#endif
-#endif
-  HRESULT WINAPI IConfigInterleaving_put_Mode_Proxy(IConfigInterleaving *This,InterleavingMode mode);
-  void __RPC_STUB IConfigInterleaving_put_Mode_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigInterleaving_get_Mode_Proxy(IConfigInterleaving *This,InterleavingMode *pMode);
-  void __RPC_STUB IConfigInterleaving_get_Mode_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigInterleaving_put_Interleaving_Proxy(IConfigInterleaving *This,const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll);
-  void __RPC_STUB IConfigInterleaving_put_Interleaving_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigInterleaving_get_Interleaving_Proxy(IConfigInterleaving *This,REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll);
-  void __RPC_STUB IConfigInterleaving_get_Interleaving_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
-#ifndef __IConfigAviMux_INTERFACE_DEFINED__
-#define __IConfigAviMux_INTERFACE_DEFINED__
-  EXTERN_C const IID IID_IConfigAviMux;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IConfigAviMux : public IUnknown {
-  public:
-    virtual HRESULT WINAPI SetMasterStream(LONG iStream) = 0;
-    virtual HRESULT WINAPI GetMasterStream(LONG *pStream) = 0;
-    virtual HRESULT WINAPI SetOutputCompatibilityIndex(WINBOOL fOldIndex) = 0;
-    virtual HRESULT WINAPI GetOutputCompatibilityIndex(WINBOOL *pfOldIndex) = 0;
-  };
-#else
-  typedef struct IConfigAviMuxVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IConfigAviMux *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IConfigAviMux *This);
-      ULONG (WINAPI *Release)(IConfigAviMux *This);
-      HRESULT (WINAPI *SetMasterStream)(IConfigAviMux *This,LONG iStream);
-      HRESULT (WINAPI *GetMasterStream)(IConfigAviMux *This,LONG *pStream);
-      HRESULT (WINAPI *SetOutputCompatibilityIndex)(IConfigAviMux *This,WINBOOL fOldIndex);
-      HRESULT (WINAPI *GetOutputCompatibilityIndex)(IConfigAviMux *This,WINBOOL *pfOldIndex);
-    END_INTERFACE
-  } IConfigAviMuxVtbl;
-  struct IConfigAviMux {
-    CONST_VTBL struct IConfigAviMuxVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IConfigAviMux_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IConfigAviMux_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IConfigAviMux_Release(This) (This)->lpVtbl->Release(This)
-#define IConfigAviMux_SetMasterStream(This,iStream) (This)->lpVtbl->SetMasterStream(This,iStream)
-#define IConfigAviMux_GetMasterStream(This,pStream) (This)->lpVtbl->GetMasterStream(This,pStream)
-#define IConfigAviMux_SetOutputCompatibilityIndex(This,fOldIndex) (This)->lpVtbl->SetOutputCompatibilityIndex(This,fOldIndex)
-#define IConfigAviMux_GetOutputCompatibilityIndex(This,pfOldIndex) (This)->lpVtbl->GetOutputCompatibilityIndex(This,pfOldIndex)
-#endif
-#endif
-  HRESULT WINAPI IConfigAviMux_SetMasterStream_Proxy(IConfigAviMux *This,LONG iStream);
-  void __RPC_STUB IConfigAviMux_SetMasterStream_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigAviMux_GetMasterStream_Proxy(IConfigAviMux *This,LONG *pStream);
-  void __RPC_STUB IConfigAviMux_GetMasterStream_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigAviMux_SetOutputCompatibilityIndex_Proxy(IConfigAviMux *This,WINBOOL fOldIndex);
-  void __RPC_STUB IConfigAviMux_SetOutputCompatibilityIndex_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IConfigAviMux_GetOutputCompatibilityIndex_Proxy(IConfigAviMux *This,WINBOOL *pfOldIndex);
-  void __RPC_STUB IConfigAviMux_GetOutputCompatibilityIndex_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
   typedef enum __MIDL___MIDL_itf_strmif_0167_0001 {
     CompressionCaps_CanQuality = 0x1,CompressionCaps_CanCrunch = 0x2,CompressionCaps_CanKeyFrame = 0x4,CompressionCaps_CanBFrame = 0x8,
     CompressionCaps_CanWindow = 0x10
@@ -10797,90 +11996,6 @@ typedef struct IAMPluginControl IAMPluginControl;
     AMPROPERTY_PIN_CATEGORY = 0,AMPROPERTY_PIN_MEDIUM = AMPROPERTY_PIN_CATEGORY + 1
   } AMPROPERTY_PIN;
 
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0186_v0_0_c_ifspec;
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0186_v0_0_s_ifspec;
-#ifndef __IMediaPropertyBag_INTERFACE_DEFINED__
-#define __IMediaPropertyBag_INTERFACE_DEFINED__
-  typedef IMediaPropertyBag *LPMEDIAPROPERTYBAG;
-
-  EXTERN_C const IID IID_IMediaPropertyBag;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IMediaPropertyBag : public IPropertyBag {
-  public:
-    virtual HRESULT WINAPI EnumProperty(ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue) = 0;
-  };
-#else
-  typedef struct IMediaPropertyBagVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IMediaPropertyBag *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IMediaPropertyBag *This);
-      ULONG (WINAPI *Release)(IMediaPropertyBag *This);
-      HRESULT (WINAPI *Read)(IMediaPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar,IErrorLog *pErrorLog);
-      HRESULT (WINAPI *Write)(IMediaPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar);
-      HRESULT (WINAPI *EnumProperty)(IMediaPropertyBag *This,ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue);
-    END_INTERFACE
-  } IMediaPropertyBagVtbl;
-  struct IMediaPropertyBag {
-    CONST_VTBL struct IMediaPropertyBagVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)
-#define IMediaPropertyBag_Read(This,pszPropName,pVar,pErrorLog) (This)->lpVtbl->Read(This,pszPropName,pVar,pErrorLog)
-#define IMediaPropertyBag_Write(This,pszPropName,pVar) (This)->lpVtbl->Write(This,pszPropName,pVar)
-#define IMediaPropertyBag_EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue) (This)->lpVtbl->EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue)
-#endif
-#endif
-  HRESULT WINAPI IMediaPropertyBag_EnumProperty_Proxy(IMediaPropertyBag *This,ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue);
-  void __RPC_STUB IMediaPropertyBag_EnumProperty_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
-#ifndef __IPersistMediaPropertyBag_INTERFACE_DEFINED__
-#define __IPersistMediaPropertyBag_INTERFACE_DEFINED__
-  typedef IPersistMediaPropertyBag *LPPERSISTMEDIAPROPERTYBAG;
-
-  EXTERN_C const IID IID_IPersistMediaPropertyBag;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IPersistMediaPropertyBag : public IPersist {
-  public:
-    virtual HRESULT WINAPI InitNew(void) = 0;
-    virtual HRESULT WINAPI Load(IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog) = 0;
-    virtual HRESULT WINAPI Save(IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties) = 0;
-  };
-#else
-  typedef struct IPersistMediaPropertyBagVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IPersistMediaPropertyBag *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IPersistMediaPropertyBag *This);
-      ULONG (WINAPI *Release)(IPersistMediaPropertyBag *This);
-      HRESULT (WINAPI *GetClassID)(IPersistMediaPropertyBag *This,CLSID *pClassID);
-      HRESULT (WINAPI *InitNew)(IPersistMediaPropertyBag *This);
-      HRESULT (WINAPI *Load)(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog);
-      HRESULT (WINAPI *Save)(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties);
-    END_INTERFACE
-  } IPersistMediaPropertyBagVtbl;
-  struct IPersistMediaPropertyBag {
-    CONST_VTBL struct IPersistMediaPropertyBagVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IPersistMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IPersistMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IPersistMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)
-#define IPersistMediaPropertyBag_GetClassID(This,pClassID) (This)->lpVtbl->GetClassID(This,pClassID)
-#define IPersistMediaPropertyBag_InitNew(This) (This)->lpVtbl->InitNew(This)
-#define IPersistMediaPropertyBag_Load(This,pPropBag,pErrorLog) (This)->lpVtbl->Load(This,pPropBag,pErrorLog)
-#define IPersistMediaPropertyBag_Save(This,pPropBag,fClearDirty,fSaveAllProperties) (This)->lpVtbl->Save(This,pPropBag,fClearDirty,fSaveAllProperties)
-#endif
-#endif
-  HRESULT WINAPI IPersistMediaPropertyBag_InitNew_Proxy(IPersistMediaPropertyBag *This);
-  void __RPC_STUB IPersistMediaPropertyBag_InitNew_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IPersistMediaPropertyBag_Load_Proxy(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog);
-  void __RPC_STUB IPersistMediaPropertyBag_Load_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IPersistMediaPropertyBag_Save_Proxy(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties);
-  void __RPC_STUB IPersistMediaPropertyBag_Save_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
 #ifndef __IAMPhysicalPinInfo_INTERFACE_DEFINED__
 #define __IAMPhysicalPinInfo_INTERFACE_DEFINED__
   EXTERN_C const IID IID_IAMPhysicalPinInfo;
@@ -12381,42 +13496,6 @@ typedef struct IAMPluginControl IAMPluginControl;
   void __RPC_STUB IRegisterServiceProvider_RegisterService_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
 #endif
 
-#ifndef __IAMClockSlave_INTERFACE_DEFINED__
-#define __IAMClockSlave_INTERFACE_DEFINED__
-  EXTERN_C const IID IID_IAMClockSlave;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IAMClockSlave : public IUnknown {
-  public:
-    virtual HRESULT WINAPI SetErrorTolerance(DWORD dwTolerance) = 0;
-    virtual HRESULT WINAPI GetErrorTolerance(DWORD *pdwTolerance) = 0;
-  };
-#else
-  typedef struct IAMClockSlaveVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IAMClockSlave *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IAMClockSlave *This);
-      ULONG (WINAPI *Release)(IAMClockSlave *This);
-      HRESULT (WINAPI *SetErrorTolerance)(IAMClockSlave *This,DWORD dwTolerance);
-      HRESULT (WINAPI *GetErrorTolerance)(IAMClockSlave *This,DWORD *pdwTolerance);
-    END_INTERFACE
-  } IAMClockSlaveVtbl;
-  struct IAMClockSlave {
-    CONST_VTBL struct IAMClockSlaveVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IAMClockSlave_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IAMClockSlave_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IAMClockSlave_Release(This) (This)->lpVtbl->Release(This)
-#define IAMClockSlave_SetErrorTolerance(This,dwTolerance) (This)->lpVtbl->SetErrorTolerance(This,dwTolerance)
-#define IAMClockSlave_GetErrorTolerance(This,pdwTolerance) (This)->lpVtbl->GetErrorTolerance(This,pdwTolerance)
-#endif
-#endif
-  HRESULT WINAPI IAMClockSlave_SetErrorTolerance_Proxy(IAMClockSlave *This,DWORD dwTolerance);
-  void __RPC_STUB IAMClockSlave_SetErrorTolerance_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMClockSlave_GetErrorTolerance_Proxy(IAMClockSlave *This,DWORD *pdwTolerance);
-  void __RPC_STUB IAMClockSlave_GetErrorTolerance_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
 #ifdef __cplusplus
 #ifndef _IAMFilterGraphCallback_
 #define _IAMFilterGraphCallback_
@@ -12719,86 +13798,6 @@ typedef struct IAMPluginControl IAMPluginControl;
   void __RPC_STUB IAMDecoderCaps_GetDecoderCaps_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
 #endif
 
-  typedef struct _AMCOPPSignature {
-    BYTE Signature[256];
-  } AMCOPPSignature;
-
-  typedef struct _AMCOPPCommand {
-    GUID macKDI;
-    GUID guidCommandID;
-    DWORD dwSequence;
-    DWORD cbSizeData;
-    BYTE CommandData[4056];
-  } AMCOPPCommand;
-
-  typedef struct _AMCOPPCommand *LPAMCOPPCommand;
-
-  typedef struct _AMCOPPStatusInput {
-    GUID rApp;
-    GUID guidStatusRequestID;
-    DWORD dwSequence;
-    DWORD cbSizeData;
-    BYTE StatusData[4056];
-  } AMCOPPStatusInput;
-
-  typedef struct _AMCOPPStatusInput *LPAMCOPPStatusInput;
-
-  typedef struct _AMCOPPStatusOutput {
-    GUID macKDI;
-    DWORD cbSizeData;
-    BYTE COPPStatus[4076];
-  } AMCOPPStatusOutput;
-
-  typedef struct _AMCOPPStatusOutput *LPAMCOPPStatusOutput;
-
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0375_v0_0_c_ifspec;
-  extern RPC_IF_HANDLE __MIDL_itf_strmif_0375_v0_0_s_ifspec;
-#ifndef __IAMCertifiedOutputProtection_INTERFACE_DEFINED__
-#define __IAMCertifiedOutputProtection_INTERFACE_DEFINED__
-  EXTERN_C const IID IID_IAMCertifiedOutputProtection;
-#if defined(__cplusplus) && !defined(CINTERFACE)
-  struct IAMCertifiedOutputProtection : public IUnknown {
-  public:
-    virtual HRESULT WINAPI KeyExchange(GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH) = 0;
-    virtual HRESULT WINAPI SessionSequenceStart(AMCOPPSignature *pSig) = 0;
-    virtual HRESULT WINAPI ProtectionCommand(const AMCOPPCommand *cmd) = 0;
-    virtual HRESULT WINAPI ProtectionStatus(const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput) = 0;
-  };
-#else
-  typedef struct IAMCertifiedOutputProtectionVtbl {
-    BEGIN_INTERFACE
-      HRESULT (WINAPI *QueryInterface)(IAMCertifiedOutputProtection *This,REFIID riid,void **ppvObject);
-      ULONG (WINAPI *AddRef)(IAMCertifiedOutputProtection *This);
-      ULONG (WINAPI *Release)(IAMCertifiedOutputProtection *This);
-      HRESULT (WINAPI *KeyExchange)(IAMCertifiedOutputProtection *This,GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH);
-      HRESULT (WINAPI *SessionSequenceStart)(IAMCertifiedOutputProtection *This,AMCOPPSignature *pSig);
-      HRESULT (WINAPI *ProtectionCommand)(IAMCertifiedOutputProtection *This,const AMCOPPCommand *cmd);
-      HRESULT (WINAPI *ProtectionStatus)(IAMCertifiedOutputProtection *This,const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput);
-    END_INTERFACE
-  } IAMCertifiedOutputProtectionVtbl;
-  struct IAMCertifiedOutputProtection {
-    CONST_VTBL struct IAMCertifiedOutputProtectionVtbl *lpVtbl;
-  };
-#ifdef COBJMACROS
-#define IAMCertifiedOutputProtection_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
-#define IAMCertifiedOutputProtection_AddRef(This) (This)->lpVtbl->AddRef(This)
-#define IAMCertifiedOutputProtection_Release(This) (This)->lpVtbl->Release(This)
-#define IAMCertifiedOutputProtection_KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH) (This)->lpVtbl->KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH)
-#define IAMCertifiedOutputProtection_SessionSequenceStart(This,pSig) (This)->lpVtbl->SessionSequenceStart(This,pSig)
-#define IAMCertifiedOutputProtection_ProtectionCommand(This,cmd) (This)->lpVtbl->ProtectionCommand(This,cmd)
-#define IAMCertifiedOutputProtection_ProtectionStatus(This,pStatusInput,pStatusOutput) (This)->lpVtbl->ProtectionStatus(This,pStatusInput,pStatusOutput)
-#endif
-#endif
-  HRESULT WINAPI IAMCertifiedOutputProtection_KeyExchange_Proxy(IAMCertifiedOutputProtection *This,GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH);
-  void __RPC_STUB IAMCertifiedOutputProtection_KeyExchange_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMCertifiedOutputProtection_SessionSequenceStart_Proxy(IAMCertifiedOutputProtection *This,AMCOPPSignature *pSig);
-  void __RPC_STUB IAMCertifiedOutputProtection_SessionSequenceStart_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMCertifiedOutputProtection_ProtectionCommand_Proxy(IAMCertifiedOutputProtection *This,const AMCOPPCommand *cmd);
-  void __RPC_STUB IAMCertifiedOutputProtection_ProtectionCommand_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-  HRESULT WINAPI IAMCertifiedOutputProtection_ProtectionStatus_Proxy(IAMCertifiedOutputProtection *This,const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput);
-  void __RPC_STUB IAMCertifiedOutputProtection_ProtectionStatus_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
-#endif
-
 #ifdef MINGW_HAS_DDRAW_H
 #include <ddraw.h>
 #else
diff --git a/mingw-w64-headers/include/strmif.idl b/mingw-w64-headers/include/strmif.idl
index c806ec4..700440a 100644
--- a/mingw-w64-headers/include/strmif.idl
+++ b/mingw-w64-headers/include/strmif.idl
@@ -20,16 +20,6 @@ cpp_quote("#define __IDistributorNotify_FWD_DEFINED__")
 cpp_quote("typedef struct IDistributorNotify IDistributorNotify;")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("#ifndef __IAMStreamControl_FWD_DEFINED__")
-cpp_quote("#define __IAMStreamControl_FWD_DEFINED__")
-cpp_quote("typedef struct IAMStreamControl IAMStreamControl;")
-cpp_quote("#endif")
-cpp_quote("")
-cpp_quote("#ifndef __IConfigAviMux_FWD_DEFINED__")
-cpp_quote("#define __IConfigAviMux_FWD_DEFINED__")
-cpp_quote("typedef struct IConfigAviMux IConfigAviMux;")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifndef __IAMVideoCompression_FWD_DEFINED__")
 cpp_quote("#define __IAMVideoCompression_FWD_DEFINED__")
 cpp_quote("typedef struct IAMVideoCompression IAMVideoCompression;")
@@ -115,16 +105,6 @@ cpp_quote("#define __IAMAnalogVideoEncoder_FWD_DEFINED__")
 cpp_quote("typedef struct IAMAnalogVideoEncoder IAMAnalogVideoEncoder;")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("#ifndef __IMediaPropertyBag_FWD_DEFINED__")
-cpp_quote("#define __IMediaPropertyBag_FWD_DEFINED__")
-cpp_quote("typedef struct IMediaPropertyBag IMediaPropertyBag;")
-cpp_quote("#endif")
-cpp_quote("")
-cpp_quote("#ifndef __IPersistMediaPropertyBag_FWD_DEFINED__")
-cpp_quote("#define __IPersistMediaPropertyBag_FWD_DEFINED__")
-cpp_quote("typedef struct IPersistMediaPropertyBag IPersistMediaPropertyBag;")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifndef __IAMPhysicalPinInfo_FWD_DEFINED__")
 cpp_quote("#define __IAMPhysicalPinInfo_FWD_DEFINED__")
 cpp_quote("typedef struct IAMPhysicalPinInfo IAMPhysicalPinInfo;")
@@ -275,11 +255,6 @@ cpp_quote("#define __IRegisterServiceProvider_FWD_DEFINED__")
 cpp_quote("typedef struct IRegisterServiceProvider IRegisterServiceProvider;")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("#ifndef __IAMClockSlave_FWD_DEFINED__")
-cpp_quote("#define __IAMClockSlave_FWD_DEFINED__")
-cpp_quote("typedef struct IAMClockSlave IAMClockSlave;")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifndef __ICodecAPI_FWD_DEFINED__")
 cpp_quote("#define __ICodecAPI_FWD_DEFINED__")
 cpp_quote("typedef struct ICodecAPI ICodecAPI;")
@@ -305,11 +280,6 @@ cpp_quote("#define __IAMDecoderCaps_FWD_DEFINED__")
 cpp_quote("typedef struct IAMDecoderCaps IAMDecoderCaps;")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("#ifndef __IAMCertifiedOutputProtection_FWD_DEFINED__")
-cpp_quote("#define __IAMCertifiedOutputProtection_FWD_DEFINED__")
-cpp_quote("typedef struct IAMCertifiedOutputProtection IAMCertifiedOutputProtection;")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifndef __IDvdControl_FWD_DEFINED__")
 cpp_quote("#define __IDvdControl_FWD_DEFINED__")
 cpp_quote("typedef struct IDvdControl IDvdControl;")
@@ -560,158 +530,6 @@ cpp_quote("  HRESULT WINAPI IDistributorNotify_NotifyGraphChange_Proxy(IDistribu
 cpp_quote("  void __RPC_STUB IDistributorNotify_NotifyGraphChange_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("  typedef enum __MIDL___MIDL_itf_strmif_0160_0001 {")
-cpp_quote("    AM_STREAM_INFO_START_DEFINED = 0x1,AM_STREAM_INFO_STOP_DEFINED = 0x2,AM_STREAM_INFO_DISCARDING = 0x4,AM_STREAM_INFO_STOP_SEND_EXTRA = 0x10")
-cpp_quote("  } AM_STREAM_INFO_FLAGS;")
-cpp_quote("")
-cpp_quote("  typedef struct __MIDL___MIDL_itf_strmif_0160_0002 {")
-cpp_quote("    REFERENCE_TIME tStart;")
-cpp_quote("    REFERENCE_TIME tStop;")
-cpp_quote("    DWORD dwStartCookie;")
-cpp_quote("    DWORD dwStopCookie;")
-cpp_quote("    DWORD dwFlags;")
-cpp_quote("  } AM_STREAM_INFO;")
-cpp_quote("")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0160_v0_0_c_ifspec;")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0160_v0_0_s_ifspec;")
-cpp_quote("#ifndef __IAMStreamControl_INTERFACE_DEFINED__")
-cpp_quote("#define __IAMStreamControl_INTERFACE_DEFINED__")
-cpp_quote("  EXTERN_C const IID IID_IAMStreamControl;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IAMStreamControl : public IUnknown {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI StartAt(const REFERENCE_TIME *ptStart,DWORD dwCookie) = 0;")
-cpp_quote("    virtual HRESULT WINAPI StopAt(const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie) = 0;")
-cpp_quote("    virtual HRESULT WINAPI GetInfo(AM_STREAM_INFO *pInfo) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IAMStreamControlVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IAMStreamControl *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IAMStreamControl *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IAMStreamControl *This);")
-cpp_quote("      HRESULT (WINAPI *StartAt)(IAMStreamControl *This,const REFERENCE_TIME *ptStart,DWORD dwCookie);")
-cpp_quote("      HRESULT (WINAPI *StopAt)(IAMStreamControl *This,const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie);")
-cpp_quote("      HRESULT (WINAPI *GetInfo)(IAMStreamControl *This,AM_STREAM_INFO *pInfo);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IAMStreamControlVtbl;")
-cpp_quote("  struct IAMStreamControl {")
-cpp_quote("    CONST_VTBL struct IAMStreamControlVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IAMStreamControl_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IAMStreamControl_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IAMStreamControl_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IAMStreamControl_StartAt(This,ptStart,dwCookie) (This)->lpVtbl->StartAt(This,ptStart,dwCookie)")
-cpp_quote("#define IAMStreamControl_StopAt(This,ptStop,bSendExtra,dwCookie) (This)->lpVtbl->StopAt(This,ptStop,bSendExtra,dwCookie)")
-cpp_quote("#define IAMStreamControl_GetInfo(This,pInfo) (This)->lpVtbl->GetInfo(This,pInfo)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IAMStreamControl_StartAt_Proxy(IAMStreamControl *This,const REFERENCE_TIME *ptStart,DWORD dwCookie);")
-cpp_quote("  void __RPC_STUB IAMStreamControl_StartAt_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMStreamControl_StopAt_Proxy(IAMStreamControl *This,const REFERENCE_TIME *ptStop,WINBOOL bSendExtra,DWORD dwCookie);")
-cpp_quote("  void __RPC_STUB IAMStreamControl_StopAt_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMStreamControl_GetInfo_Proxy(IAMStreamControl *This,AM_STREAM_INFO *pInfo);")
-cpp_quote("  void __RPC_STUB IAMStreamControl_GetInfo_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
-cpp_quote("#ifndef __IConfigInterleaving_INTERFACE_DEFINED__")
-cpp_quote("#define __IConfigInterleaving_INTERFACE_DEFINED__")
-cpp_quote("  typedef enum __MIDL_IConfigInterleaving_0001 {")
-cpp_quote("    INTERLEAVE_NONE = 0,")
-cpp_quote("    INTERLEAVE_CAPTURE,INTERLEAVE_FULL,INTERLEAVE_NONE_BUFFERED")
-cpp_quote("  } InterleavingMode;")
-cpp_quote("")
-cpp_quote("  EXTERN_C const IID IID_IConfigInterleaving;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IConfigInterleaving : public IUnknown {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI put_Mode(InterleavingMode mode) = 0;")
-cpp_quote("    virtual HRESULT WINAPI get_Mode(InterleavingMode *pMode) = 0;")
-cpp_quote("    virtual HRESULT WINAPI put_Interleaving(const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll) = 0;")
-cpp_quote("    virtual HRESULT WINAPI get_Interleaving(REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IConfigInterleavingVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IConfigInterleaving *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IConfigInterleaving *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IConfigInterleaving *This);")
-cpp_quote("      HRESULT (WINAPI *put_Mode)(IConfigInterleaving *This,InterleavingMode mode);")
-cpp_quote("      HRESULT (WINAPI *get_Mode)(IConfigInterleaving *This,InterleavingMode *pMode);")
-cpp_quote("      HRESULT (WINAPI *put_Interleaving)(IConfigInterleaving *This,const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll);")
-cpp_quote("      HRESULT (WINAPI *get_Interleaving)(IConfigInterleaving *This,REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IConfigInterleavingVtbl;")
-cpp_quote("  struct IConfigInterleaving {")
-cpp_quote("    CONST_VTBL struct IConfigInterleavingVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IConfigInterleaving_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IConfigInterleaving_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IConfigInterleaving_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IConfigInterleaving_put_Mode(This,mode) (This)->lpVtbl->put_Mode(This,mode)")
-cpp_quote("#define IConfigInterleaving_get_Mode(This,pMode) (This)->lpVtbl->get_Mode(This,pMode)")
-cpp_quote("#define IConfigInterleaving_put_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->put_Interleaving(This,prtInterleave,prtPreroll)")
-cpp_quote("#define IConfigInterleaving_get_Interleaving(This,prtInterleave,prtPreroll) (This)->lpVtbl->get_Interleaving(This,prtInterleave,prtPreroll)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IConfigInterleaving_put_Mode_Proxy(IConfigInterleaving *This,InterleavingMode mode);")
-cpp_quote("  void __RPC_STUB IConfigInterleaving_put_Mode_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigInterleaving_get_Mode_Proxy(IConfigInterleaving *This,InterleavingMode *pMode);")
-cpp_quote("  void __RPC_STUB IConfigInterleaving_get_Mode_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigInterleaving_put_Interleaving_Proxy(IConfigInterleaving *This,const REFERENCE_TIME *prtInterleave,const REFERENCE_TIME *prtPreroll);")
-cpp_quote("  void __RPC_STUB IConfigInterleaving_put_Interleaving_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigInterleaving_get_Interleaving_Proxy(IConfigInterleaving *This,REFERENCE_TIME *prtInterleave,REFERENCE_TIME *prtPreroll);")
-cpp_quote("  void __RPC_STUB IConfigInterleaving_get_Interleaving_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
-cpp_quote("#ifndef __IConfigAviMux_INTERFACE_DEFINED__")
-cpp_quote("#define __IConfigAviMux_INTERFACE_DEFINED__")
-cpp_quote("  EXTERN_C const IID IID_IConfigAviMux;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IConfigAviMux : public IUnknown {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI SetMasterStream(LONG iStream) = 0;")
-cpp_quote("    virtual HRESULT WINAPI GetMasterStream(LONG *pStream) = 0;")
-cpp_quote("    virtual HRESULT WINAPI SetOutputCompatibilityIndex(WINBOOL fOldIndex) = 0;")
-cpp_quote("    virtual HRESULT WINAPI GetOutputCompatibilityIndex(WINBOOL *pfOldIndex) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IConfigAviMuxVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IConfigAviMux *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IConfigAviMux *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IConfigAviMux *This);")
-cpp_quote("      HRESULT (WINAPI *SetMasterStream)(IConfigAviMux *This,LONG iStream);")
-cpp_quote("      HRESULT (WINAPI *GetMasterStream)(IConfigAviMux *This,LONG *pStream);")
-cpp_quote("      HRESULT (WINAPI *SetOutputCompatibilityIndex)(IConfigAviMux *This,WINBOOL fOldIndex);")
-cpp_quote("      HRESULT (WINAPI *GetOutputCompatibilityIndex)(IConfigAviMux *This,WINBOOL *pfOldIndex);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IConfigAviMuxVtbl;")
-cpp_quote("  struct IConfigAviMux {")
-cpp_quote("    CONST_VTBL struct IConfigAviMuxVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IConfigAviMux_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IConfigAviMux_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IConfigAviMux_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IConfigAviMux_SetMasterStream(This,iStream) (This)->lpVtbl->SetMasterStream(This,iStream)")
-cpp_quote("#define IConfigAviMux_GetMasterStream(This,pStream) (This)->lpVtbl->GetMasterStream(This,pStream)")
-cpp_quote("#define IConfigAviMux_SetOutputCompatibilityIndex(This,fOldIndex) (This)->lpVtbl->SetOutputCompatibilityIndex(This,fOldIndex)")
-cpp_quote("#define IConfigAviMux_GetOutputCompatibilityIndex(This,pfOldIndex) (This)->lpVtbl->GetOutputCompatibilityIndex(This,pfOldIndex)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IConfigAviMux_SetMasterStream_Proxy(IConfigAviMux *This,LONG iStream);")
-cpp_quote("  void __RPC_STUB IConfigAviMux_SetMasterStream_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigAviMux_GetMasterStream_Proxy(IConfigAviMux *This,LONG *pStream);")
-cpp_quote("  void __RPC_STUB IConfigAviMux_GetMasterStream_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigAviMux_SetOutputCompatibilityIndex_Proxy(IConfigAviMux *This,WINBOOL fOldIndex);")
-cpp_quote("  void __RPC_STUB IConfigAviMux_SetOutputCompatibilityIndex_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IConfigAviMux_GetOutputCompatibilityIndex_Proxy(IConfigAviMux *This,WINBOOL *pfOldIndex);")
-cpp_quote("  void __RPC_STUB IConfigAviMux_GetOutputCompatibilityIndex_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("  typedef enum __MIDL___MIDL_itf_strmif_0167_0001 {")
 cpp_quote("    CompressionCaps_CanQuality = 0x1,CompressionCaps_CanCrunch = 0x2,CompressionCaps_CanKeyFrame = 0x4,CompressionCaps_CanBFrame = 0x8,")
 cpp_quote("    CompressionCaps_CanWindow = 0x10")
@@ -1854,90 +1672,6 @@ cpp_quote("  typedef enum __MIDL___MIDL_itf_strmif_0185_0001 {")
 cpp_quote("    AMPROPERTY_PIN_CATEGORY = 0,AMPROPERTY_PIN_MEDIUM = AMPROPERTY_PIN_CATEGORY + 1")
 cpp_quote("  } AMPROPERTY_PIN;")
 cpp_quote("")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0186_v0_0_c_ifspec;")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0186_v0_0_s_ifspec;")
-cpp_quote("#ifndef __IMediaPropertyBag_INTERFACE_DEFINED__")
-cpp_quote("#define __IMediaPropertyBag_INTERFACE_DEFINED__")
-cpp_quote("  typedef IMediaPropertyBag *LPMEDIAPROPERTYBAG;")
-cpp_quote("")
-cpp_quote("  EXTERN_C const IID IID_IMediaPropertyBag;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IMediaPropertyBag : public IPropertyBag {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI EnumProperty(ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IMediaPropertyBagVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IMediaPropertyBag *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IMediaPropertyBag *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IMediaPropertyBag *This);")
-cpp_quote("      HRESULT (WINAPI *Read)(IMediaPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar,IErrorLog *pErrorLog);")
-cpp_quote("      HRESULT (WINAPI *Write)(IMediaPropertyBag *This,LPCOLESTR pszPropName,VARIANT *pVar);")
-cpp_quote("      HRESULT (WINAPI *EnumProperty)(IMediaPropertyBag *This,ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IMediaPropertyBagVtbl;")
-cpp_quote("  struct IMediaPropertyBag {")
-cpp_quote("    CONST_VTBL struct IMediaPropertyBagVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IMediaPropertyBag_Read(This,pszPropName,pVar,pErrorLog) (This)->lpVtbl->Read(This,pszPropName,pVar,pErrorLog)")
-cpp_quote("#define IMediaPropertyBag_Write(This,pszPropName,pVar) (This)->lpVtbl->Write(This,pszPropName,pVar)")
-cpp_quote("#define IMediaPropertyBag_EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue) (This)->lpVtbl->EnumProperty(This,iProperty,pvarPropertyName,pvarPropertyValue)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IMediaPropertyBag_EnumProperty_Proxy(IMediaPropertyBag *This,ULONG iProperty,VARIANT *pvarPropertyName,VARIANT *pvarPropertyValue);")
-cpp_quote("  void __RPC_STUB IMediaPropertyBag_EnumProperty_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
-cpp_quote("#ifndef __IPersistMediaPropertyBag_INTERFACE_DEFINED__")
-cpp_quote("#define __IPersistMediaPropertyBag_INTERFACE_DEFINED__")
-cpp_quote("  typedef IPersistMediaPropertyBag *LPPERSISTMEDIAPROPERTYBAG;")
-cpp_quote("")
-cpp_quote("  EXTERN_C const IID IID_IPersistMediaPropertyBag;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IPersistMediaPropertyBag : public IPersist {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI InitNew(void) = 0;")
-cpp_quote("    virtual HRESULT WINAPI Load(IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog) = 0;")
-cpp_quote("    virtual HRESULT WINAPI Save(IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IPersistMediaPropertyBagVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IPersistMediaPropertyBag *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IPersistMediaPropertyBag *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IPersistMediaPropertyBag *This);")
-cpp_quote("      HRESULT (WINAPI *GetClassID)(IPersistMediaPropertyBag *This,CLSID *pClassID);")
-cpp_quote("      HRESULT (WINAPI *InitNew)(IPersistMediaPropertyBag *This);")
-cpp_quote("      HRESULT (WINAPI *Load)(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog);")
-cpp_quote("      HRESULT (WINAPI *Save)(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IPersistMediaPropertyBagVtbl;")
-cpp_quote("  struct IPersistMediaPropertyBag {")
-cpp_quote("    CONST_VTBL struct IPersistMediaPropertyBagVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IPersistMediaPropertyBag_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IPersistMediaPropertyBag_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IPersistMediaPropertyBag_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IPersistMediaPropertyBag_GetClassID(This,pClassID) (This)->lpVtbl->GetClassID(This,pClassID)")
-cpp_quote("#define IPersistMediaPropertyBag_InitNew(This) (This)->lpVtbl->InitNew(This)")
-cpp_quote("#define IPersistMediaPropertyBag_Load(This,pPropBag,pErrorLog) (This)->lpVtbl->Load(This,pPropBag,pErrorLog)")
-cpp_quote("#define IPersistMediaPropertyBag_Save(This,pPropBag,fClearDirty,fSaveAllProperties) (This)->lpVtbl->Save(This,pPropBag,fClearDirty,fSaveAllProperties)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IPersistMediaPropertyBag_InitNew_Proxy(IPersistMediaPropertyBag *This);")
-cpp_quote("  void __RPC_STUB IPersistMediaPropertyBag_InitNew_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IPersistMediaPropertyBag_Load_Proxy(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,IErrorLog *pErrorLog);")
-cpp_quote("  void __RPC_STUB IPersistMediaPropertyBag_Load_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IPersistMediaPropertyBag_Save_Proxy(IPersistMediaPropertyBag *This,IMediaPropertyBag *pPropBag,WINBOOL fClearDirty,WINBOOL fSaveAllProperties);")
-cpp_quote("  void __RPC_STUB IPersistMediaPropertyBag_Save_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifndef __IAMPhysicalPinInfo_INTERFACE_DEFINED__")
 cpp_quote("#define __IAMPhysicalPinInfo_INTERFACE_DEFINED__")
 cpp_quote("  EXTERN_C const IID IID_IAMPhysicalPinInfo;")
@@ -3438,42 +3172,6 @@ cpp_quote("  HRESULT WINAPI IRegisterServiceProvider_RegisterService_Proxy(IRegi
 cpp_quote("  void __RPC_STUB IRegisterServiceProvider_RegisterService_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("#ifndef __IAMClockSlave_INTERFACE_DEFINED__")
-cpp_quote("#define __IAMClockSlave_INTERFACE_DEFINED__")
-cpp_quote("  EXTERN_C const IID IID_IAMClockSlave;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IAMClockSlave : public IUnknown {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI SetErrorTolerance(DWORD dwTolerance) = 0;")
-cpp_quote("    virtual HRESULT WINAPI GetErrorTolerance(DWORD *pdwTolerance) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IAMClockSlaveVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IAMClockSlave *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IAMClockSlave *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IAMClockSlave *This);")
-cpp_quote("      HRESULT (WINAPI *SetErrorTolerance)(IAMClockSlave *This,DWORD dwTolerance);")
-cpp_quote("      HRESULT (WINAPI *GetErrorTolerance)(IAMClockSlave *This,DWORD *pdwTolerance);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IAMClockSlaveVtbl;")
-cpp_quote("  struct IAMClockSlave {")
-cpp_quote("    CONST_VTBL struct IAMClockSlaveVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IAMClockSlave_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IAMClockSlave_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IAMClockSlave_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IAMClockSlave_SetErrorTolerance(This,dwTolerance) (This)->lpVtbl->SetErrorTolerance(This,dwTolerance)")
-cpp_quote("#define IAMClockSlave_GetErrorTolerance(This,pdwTolerance) (This)->lpVtbl->GetErrorTolerance(This,pdwTolerance)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IAMClockSlave_SetErrorTolerance_Proxy(IAMClockSlave *This,DWORD dwTolerance);")
-cpp_quote("  void __RPC_STUB IAMClockSlave_SetErrorTolerance_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMClockSlave_GetErrorTolerance_Proxy(IAMClockSlave *This,DWORD *pdwTolerance);")
-cpp_quote("  void __RPC_STUB IAMClockSlave_GetErrorTolerance_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifdef __cplusplus")
 cpp_quote("#ifndef _IAMFilterGraphCallback_")
 cpp_quote("#define _IAMFilterGraphCallback_")
@@ -3776,86 +3474,6 @@ cpp_quote("  HRESULT WINAPI IAMDecoderCaps_GetDecoderCaps_Proxy(IAMDecoderCaps *
 cpp_quote("  void __RPC_STUB IAMDecoderCaps_GetDecoderCaps_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
 cpp_quote("#endif")
 cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPSignature {")
-cpp_quote("    BYTE Signature[256];")
-cpp_quote("  } AMCOPPSignature;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPCommand {")
-cpp_quote("    GUID macKDI;")
-cpp_quote("    GUID guidCommandID;")
-cpp_quote("    DWORD dwSequence;")
-cpp_quote("    DWORD cbSizeData;")
-cpp_quote("    BYTE CommandData[4056];")
-cpp_quote("  } AMCOPPCommand;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPCommand *LPAMCOPPCommand;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPStatusInput {")
-cpp_quote("    GUID rApp;")
-cpp_quote("    GUID guidStatusRequestID;")
-cpp_quote("    DWORD dwSequence;")
-cpp_quote("    DWORD cbSizeData;")
-cpp_quote("    BYTE StatusData[4056];")
-cpp_quote("  } AMCOPPStatusInput;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPStatusInput *LPAMCOPPStatusInput;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPStatusOutput {")
-cpp_quote("    GUID macKDI;")
-cpp_quote("    DWORD cbSizeData;")
-cpp_quote("    BYTE COPPStatus[4076];")
-cpp_quote("  } AMCOPPStatusOutput;")
-cpp_quote("")
-cpp_quote("  typedef struct _AMCOPPStatusOutput *LPAMCOPPStatusOutput;")
-cpp_quote("")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0375_v0_0_c_ifspec;")
-cpp_quote("  extern RPC_IF_HANDLE __MIDL_itf_strmif_0375_v0_0_s_ifspec;")
-cpp_quote("#ifndef __IAMCertifiedOutputProtection_INTERFACE_DEFINED__")
-cpp_quote("#define __IAMCertifiedOutputProtection_INTERFACE_DEFINED__")
-cpp_quote("  EXTERN_C const IID IID_IAMCertifiedOutputProtection;")
-cpp_quote("#if defined(__cplusplus) && !defined(CINTERFACE)")
-cpp_quote("  struct IAMCertifiedOutputProtection : public IUnknown {")
-cpp_quote("  public:")
-cpp_quote("    virtual HRESULT WINAPI KeyExchange(GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH) = 0;")
-cpp_quote("    virtual HRESULT WINAPI SessionSequenceStart(AMCOPPSignature *pSig) = 0;")
-cpp_quote("    virtual HRESULT WINAPI ProtectionCommand(const AMCOPPCommand *cmd) = 0;")
-cpp_quote("    virtual HRESULT WINAPI ProtectionStatus(const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput) = 0;")
-cpp_quote("  };")
-cpp_quote("#else")
-cpp_quote("  typedef struct IAMCertifiedOutputProtectionVtbl {")
-cpp_quote("    BEGIN_INTERFACE")
-cpp_quote("      HRESULT (WINAPI *QueryInterface)(IAMCertifiedOutputProtection *This,REFIID riid,void **ppvObject);")
-cpp_quote("      ULONG (WINAPI *AddRef)(IAMCertifiedOutputProtection *This);")
-cpp_quote("      ULONG (WINAPI *Release)(IAMCertifiedOutputProtection *This);")
-cpp_quote("      HRESULT (WINAPI *KeyExchange)(IAMCertifiedOutputProtection *This,GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH);")
-cpp_quote("      HRESULT (WINAPI *SessionSequenceStart)(IAMCertifiedOutputProtection *This,AMCOPPSignature *pSig);")
-cpp_quote("      HRESULT (WINAPI *ProtectionCommand)(IAMCertifiedOutputProtection *This,const AMCOPPCommand *cmd);")
-cpp_quote("      HRESULT (WINAPI *ProtectionStatus)(IAMCertifiedOutputProtection *This,const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput);")
-cpp_quote("    END_INTERFACE")
-cpp_quote("  } IAMCertifiedOutputProtectionVtbl;")
-cpp_quote("  struct IAMCertifiedOutputProtection {")
-cpp_quote("    CONST_VTBL struct IAMCertifiedOutputProtectionVtbl *lpVtbl;")
-cpp_quote("  };")
-cpp_quote("#ifdef COBJMACROS")
-cpp_quote("#define IAMCertifiedOutputProtection_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)")
-cpp_quote("#define IAMCertifiedOutputProtection_AddRef(This) (This)->lpVtbl->AddRef(This)")
-cpp_quote("#define IAMCertifiedOutputProtection_Release(This) (This)->lpVtbl->Release(This)")
-cpp_quote("#define IAMCertifiedOutputProtection_KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH) (This)->lpVtbl->KeyExchange(This,pRandom,VarLenCertGH,pdwLengthCertGH)")
-cpp_quote("#define IAMCertifiedOutputProtection_SessionSequenceStart(This,pSig) (This)->lpVtbl->SessionSequenceStart(This,pSig)")
-cpp_quote("#define IAMCertifiedOutputProtection_ProtectionCommand(This,cmd) (This)->lpVtbl->ProtectionCommand(This,cmd)")
-cpp_quote("#define IAMCertifiedOutputProtection_ProtectionStatus(This,pStatusInput,pStatusOutput) (This)->lpVtbl->ProtectionStatus(This,pStatusInput,pStatusOutput)")
-cpp_quote("#endif")
-cpp_quote("#endif")
-cpp_quote("  HRESULT WINAPI IAMCertifiedOutputProtection_KeyExchange_Proxy(IAMCertifiedOutputProtection *This,GUID *pRandom,BYTE **VarLenCertGH,DWORD *pdwLengthCertGH);")
-cpp_quote("  void __RPC_STUB IAMCertifiedOutputProtection_KeyExchange_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMCertifiedOutputProtection_SessionSequenceStart_Proxy(IAMCertifiedOutputProtection *This,AMCOPPSignature *pSig);")
-cpp_quote("  void __RPC_STUB IAMCertifiedOutputProtection_SessionSequenceStart_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMCertifiedOutputProtection_ProtectionCommand_Proxy(IAMCertifiedOutputProtection *This,const AMCOPPCommand *cmd);")
-cpp_quote("  void __RPC_STUB IAMCertifiedOutputProtection_ProtectionCommand_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("  HRESULT WINAPI IAMCertifiedOutputProtection_ProtectionStatus_Proxy(IAMCertifiedOutputProtection *This,const AMCOPPStatusInput *pStatusInput,AMCOPPStatusOutput *pStatusOutput);")
-cpp_quote("  void __RPC_STUB IAMCertifiedOutputProtection_ProtectionStatus_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);")
-cpp_quote("#endif")
-cpp_quote("")
 cpp_quote("#ifdef MINGW_HAS_DDRAW_H")
 cpp_quote("#include <ddraw.h>")
 cpp_quote("#else")
diff --git a/mingw-w64-headers/include/winhttp.h b/mingw-w64-headers/include/winhttp.h
index 058453f..d36e3c5 100644
--- a/mingw-w64-headers/include/winhttp.h
+++ b/mingw-w64-headers/include/winhttp.h
@@ -571,7 +571,7 @@ WINBOOL     WINAPI WinHttpSetCredentials(HINTERNET,DWORD,DWORD,LPCWSTR,LPCWSTR,L
 WINBOOL     WINAPI WinHttpSetOption(HINTERNET,DWORD,LPVOID,DWORD);
 WINHTTP_STATUS_CALLBACK WINAPI WinHttpSetStatusCallback(HINTERNET,WINHTTP_STATUS_CALLBACK,DWORD,DWORD_PTR);
 WINBOOL     WINAPI WinHttpSetTimeouts(HINTERNET,int,int,int,int);
-WINBOOL     WINAPI WinHttpTimeFromSystemTime(CONST SYSTEMTIME *,LPWSTR);
+WINBOOL     WINAPI WinHttpTimeFromSystemTime(const SYSTEMTIME *,LPWSTR);
 WINBOOL     WINAPI WinHttpTimeToSystemTime(LPCWSTR,SYSTEMTIME*);
 WINBOOL     WINAPI WinHttpWriteData(HINTERNET,LPCVOID,DWORD,LPDWORD);
 
-- 
2.1.0

